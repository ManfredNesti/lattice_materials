-- FreeFem++ v  3.610001 (date Mon Mar 23 07:06:46 UTC 2020)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue 
    1 : load "ff-Ipopt";
    2 : load "ffrandom";
    3 : load "iovtk" load: iovtk 
;
    4 : 
    5 : int ii = 0;
    6 : int jj = 0;
    7 : 
    8 : include "macros.edp"// ***************************************************************************
    2 : // Macros
    3 : // ***************************************************************************
    4 : // Gradient of a vector field (u1, u2)
    5 : macro grad11(u1, u2) (dx(u1))  )   (dx(u1)) //
    6 : macro grad12(u1, u2) (dy(u1))  )   (dy(u1)) //
    7 : macro grad21(u1, u2) (dx(u2))  )   (dx(u2)) //
    8 : macro grad22(u1, u2) (dy(u2))  )   (dy(u2)) //
    9 : // Deformation gradient F
   10 : macro F11(u1,u2) (1.0 + grad11(u1,u2))  )   (1.0 + grad11(u1,u2)) //
   11 : macro F12(u1,u2) (0.0 + grad12(u1,u2))  )   (0.0 + grad12(u1,u2)) //
   12 : macro F21(u1,u2) (0.0 + grad21(u1,u2))  )   (0.0 + grad21(u1,u2)) //
   13 : macro F22(u1,u2) (1.0 + grad22(u1,u2))  )   (1.0 + grad22(u1,u2)) //
   14 : // Components Green-Lagrange strain tensor E
   15 : macro E11(u1,u2) 0.5*(grad11(u1,u2)*grad11(u1,u2) + 2.*grad11(u1,u2) + grad21(u1,u2)*grad21(u1,u2))  )   0.5*(grad11(u1,u2)*grad11(u1,u2) + 2.*grad11(u1,u2) + grad21(u1,u2)*grad21(u1,u2)) //
   16 : macro E12(u1,u2) 0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2))  )   0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2)) //
   17 : macro E21(u1,u2) 0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2))  )   0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2)) //
   18 : macro E22(u1,u2) 0.5*(grad12(u1,u2)*grad12(u1,u2) + 2.*grad22(u1,u2) + grad22(u1,u2)*grad22(u1,u2))  )   0.5*(grad12(u1,u2)*grad12(u1,u2) + 2.*grad22(u1,u2) + grad22(u1,u2)*grad22(u1,u2)) //
   19 : // Trace of Green-Lagrange tensor
   20 : macro traceE(u1,u2)	(E11(u1,u2) + E22(u1,u2))
   21 #  )  	(E11(u1,u2) + E22(u1,u2))
   22 : // J: determinant of F
   23 : macro detF(u1,u2) (F11(u1,u2) * F22(u1,u2) - F12(u1,u2) * F21(u1,u2) )
   24 #  )   (F11(u1,u2) * F22(u1,u2) - F12(u1,u2) * F21(u1,u2) )
   25 : //Right Cauchy-Green deformation tensor C
   26 : macro C11(u1,u2) (2*E11(u1,u2) + 1.0)  )   (2*E11(u1,u2) + 1.0) //
   27 : macro C12(u1,u2) (2*E12(u1,u2))  )   (2*E12(u1,u2)) //
   28 : macro C21(u1,u2) (2*E21(u1,u2))  )   (2*E21(u1,u2)) //
   29 : macro C22(u1,u2) (2*E22(u1,u2) + 1.0)  )   (2*E22(u1,u2) + 1.0) //
   30 : // determinantof C
   31 : macro detC(u1,u2) (C11(u1,u2) * C22(u1,u2) - C12(u1,u2) * C21(u1,u2))
   32 #  )   (C11(u1,u2) * C22(u1,u2) - C12(u1,u2) * C21(u1,u2))
   33 : //Inverse of C: C^-1 (symmetric)
   34 : macro invC11(u1,u2) (1/detC(u1,u2) * (C22(u1,u2)))  )   (1/detC(u1,u2) * (C22(u1,u2))) //
   35 : macro invC12(u1,u2) (1/detC(u1,u2) * ((-1)* C12(u1,u2)))  )   (1/detC(u1,u2) * ((-1)* C12(u1,u2))) //
   36 : macro invC21(u1,u2) (1/detC(u1,u2) * ((-1)* C21(u1,u2)))  )   (1/detC(u1,u2) * ((-1)* C21(u1,u2))) //
   37 : macro invC22(u1,u2) (1/detC(u1,u2) * (C11(u1,u2)))  )   (1/detC(u1,u2) * (C11(u1,u2))) //
   38 : // Second Piola-Kirchhoff stress tensor for Phi4 Sij forse non serve ...
   39 : // Dijkl = - d(Cij^-1)/dEkl
   40 : macro D1111(u1,u2) (invC11(u1,u2)*invC11(u1,u2) * 2 )  )   (invC11(u1,u2)*invC11(u1,u2) * 2 ) //
   41 : macro D1211(u1,u2) (invC11(u1,u2)*invC21(u1,u2) * 2 )  )   (invC11(u1,u2)*invC21(u1,u2) * 2 ) // = D1121, D1112, D2111 for symmetry of C,invC and E
   42 : macro D1121(u1,u2) (invC11(u1,u2)*invC12(u1,u2) * 2 )  )   (invC11(u1,u2)*invC12(u1,u2) * 2 ) //
   43 : macro D1112(u1,u2) (invC11(u1,u2)*invC12(u1,u2) * 2 )  )   (invC11(u1,u2)*invC12(u1,u2) * 2 ) //
   44 : macro D2111(u1,u2) (invC11(u1,u2)*invC21(u1,u2) * 2 )  )   (invC11(u1,u2)*invC21(u1,u2) * 2 ) //
   45 : macro D1122(u1,u2) (invC12(u1,u2)*invC12(u1,u2) * 2 )  )   (invC12(u1,u2)*invC12(u1,u2) * 2 ) // = D2211
   46 : macro D2211(u1,u2) (invC21(u1,u2)*invC21(u1,u2) * 2 )  )   (invC21(u1,u2)*invC21(u1,u2) * 2 ) //
   47 : macro D1212(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) // = D2121, D1221, D2112
   48 : macro D2121(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) //
   49 : macro D1221(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) //
   50 : macro D2112(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) //
   51 : macro D2122(u1,u2) (invC22(u1,u2)*invC12(u1,u2) * 2 )  )   (invC22(u1,u2)*invC12(u1,u2) * 2 ) // = D2212, D2221, D1222
   52 : macro D2212(u1,u2) (invC22(u1,u2)*invC21(u1,u2) * 2 )  )   (invC22(u1,u2)*invC21(u1,u2) * 2 ) //
   53 : macro D2221(u1,u2) (invC22(u1,u2)*invC21(u1,u2) * 2 )  )   (invC22(u1,u2)*invC21(u1,u2) * 2 ) //
   54 : macro D1222(u1,u2) (invC22(u1,u2)*invC12(u1,u2) * 2 )  )   (invC22(u1,u2)*invC12(u1,u2) * 2 ) //
   55 : macro D2222(u1,u2) (invC22(u1,u2)*invC22(u1,u2) * 2 )  )   (invC22(u1,u2)*invC22(u1,u2) * 2 ) //
   56 : //dEij(u1,u2)/du * lambda
   57 : macro gradE11 (u1,u2,l1,l2) (grad11(u1,u2)*grad11(l1,l2) + grad21(u1,u2)*grad21(l1,l2) + grad11(l1,l2))  )   (grad11(u1,u2)*grad11(l1,l2) + grad21(u1,u2)*grad21(l1,l2) + grad11(l1,l2)) //
   58 : macro gradE12 (u1,u2,l1,l2) (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) ) )   (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) )// vanno aggiunti dopo come termine noto
   59 : macro gradE21 (u1,u2,l1,l2) (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) )   )   (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) )  // vanno aggiunti dopo come termine noto
   60 : macro gradE22 (u1,u2,l1,l2) (grad12(u1,u2)*grad12(l1,l2) + grad22(u1,u2)*grad22(l1,l2) + grad22(l1,l2))  )   (grad12(u1,u2)*grad12(l1,l2) + grad22(u1,u2)*grad22(l1,l2) + grad22(l1,l2)) //
   61 : //d^2 Eij(u1,u2)/du^2*lambda * [phi1,phi2] (test function)
   62 : macro grad2E11 (phi1,phi2,l1,l2) (grad11(phi1,phi2)*grad11(l1,l2) + grad21(phi1,phi2)*grad21(l1,l2))  )   (grad11(phi1,phi2)*grad11(l1,l2) + grad21(phi1,phi2)*grad21(l1,l2)) //
   63 : macro grad2E12 (phi1,phi2,l1,l2) (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2)))  )   (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2))) //
   64 : macro grad2E21 (phi1,phi2,l1,l2) (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2)))  )   (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2))) //
   65 : macro grad2E22 (phi1,phi2,l1,l2) (grad12(phi1,phi2)*grad12(l1,l2) + grad22(phi1,phi2)*grad22(l1,l2))  )   (grad12(phi1,phi2)*grad12(l1,l2) + grad22(phi1,phi2)*grad22(l1,l2)) //
   66 : 
    9 : include "params.edp"// ***************************************************************************
    2 : // Params
    3 : // ***************************************************************************
    4 : 
    5 : // Vettore per il salvataggio delle immagini in formato vtk (da usare in Paraview)
    6 : int[int] ffordervel = [1];
    7 : 
    8 : // Load and mesh
    9 : int ld = 0;
   10 : string path = "results/best_results/2021-05-11_09-14-50_SIGMA_ST
  ... : RUCTURE/";
   11 : int idxld = 6; //index of the density from which you want to start
   12 : mesh Th;
   13 : int n = 30;
   14 : 
   15 : if(ld) {
   16 :   Th = readmesh(path+"mesh_initial.msh");
   17 :   plot(Th, wait = 0, cmm="Loaded mesh");
   18 : } else {
   19 :   Th = square(n, n, [x, y]);
   20 : }
   21 : 
   22 : // Params
   23 : real nu12;
   24 : real nu = 0.3;
   25 : real E = 1.;
   26 : real L = E*nu/(1-nu^2);
   27 : real M = E/(2*(1+nu));
   28 : real d1 = 0.3;        // u traction given
   29 : real vf = 0.4;       // volume fraction
   30 : real nutarget = -1.0; // nu target
   31 : 
   32 : // Density space
   33 : fespace Xhp(Th,P1);
   34 : // fespace Xhp(Th, P1, periodic = [[2,y],[4,y],[1,x],[3,x]]);
   35 : Xhp v,     // density
   36 :     vHelm, // Helmholtz filtered density
   37 :     vHeav, // Heaviside filtered density
   38 :     vSig,   // Sigmund tanh filtered density
   39 :     wSig,  // Sigmund tanh filtered density (internal)
   40 :     psi,
   41 :     lz,
   42 :     uz;     // density, filtered density, test density, params for IPOPT
   43 : Xhp m11, m12, m22; // metric computation utilities
   44 : 
   45 : // Displacement space
   46 : fespace Vh(Th, [P1, P1]);
   47 : Vh [u1,u2],       // displacement
   48 :    [u10,u20] = [d1*x,0],     // old displacement (for Newton)
   49 :    [psi1,psi2],   // test displacement
   50 :    [varu1,varu2], // displacement increments (for Newton)
   51 :    [err1,err2],   // errors (for Newton)
   52 :    [l1, l2],      // lambda
   53 :    [phi1, phi2];  // test lambda
   54 : // Area space
   55 : fespace Xh0(Th, P0); // periodic = [[2,y],[4,y],[1,x],[3,x]]);
   56 : Xh0 vol = area;
   57 : real Volume = int2d(Th)(1.);
   58 : 
   59 : // IPOPT params
   60 : real [int] lm(1);
   61 : int IPOPTmaxiter = 50;
   62 : int[int] gvi(Xhp.ndof), gvj = 0:Xhp.ndof-1;
   63 : gvi = 0;
   64 : Xhp xlb = 1e-4, xub = 1; // lower and upper bounds for v density
   65 : real tolv = 0.;
   66 : real[int] clb = [0*vf*Volume], cub = [vf*Volume]; // lower and upper bounds for constraint
   67 : real IPOPTtol = 1e-3;
   68 : 
   69 : // Inital density
   70 : int rnd = 0;
   71 : int seed = 10;
   72 : if (ld) {
   73 :   ifstream fu(path+idxld+"_density.txt");
   74 :   fu >> v[];
   75 :   plot(v, wait = 0, fill=1, cmm="Loaded density");
   76 : } else if (rnd) {
   77 :   srandom(seed);
   78 :   for(int ii = 0; ii < Xhp.ndof; ii++) v[][ii] = random()/3e9;
   79 :   plot(v, fill = 1, cmm="Initial density", wait=0);
   80 : } else {
   81 :   // v = 0.5;
   82 :   // v = (x<=0.5)*(y>=0.5)*(y<=0.7);
   83 :   // v = 5*abs((x-0.5)^2 + (y-0.5)^2 + 0.^8);
   84 :   // v = (1 - xlb) * 0.5*abs(sin(2*pi*(x-0.5))*sin(2*pi*(y-0.5))) + xlb;
   85 :   // v = (1 - xlb) * abs(sin(0.5*pi*x)*sin(1*pi*y)) + xlb;
   86 :   v = (1 - xlb) * cos(pi*(x-0.5))*cos(pi*(y-0.5)) + xlb;
   87 :   plot(v, fill = 1, cmm="Initial density", wait=0);
   88 : }
   89 : 
   90 : // Power penalty
   91 : int pen = 0;
   92 : real q = 3.;
   93 : real qmax = 3.;
   94 : 
   95 : // Helmholtz filtering
   96 : int helm = 0;
   97 : real radius = 1./80^2; // filtering radius
   98 : 
   99 : // Heaviside filtering
  100 : int heav = 0;
  101 : 
  102 : // Main params
  103 : int maxit = 6;
  104 : 
  105 : // Sigmund filtering
  106 : int sig = 1;
  107 : int sigIN = 0; //attiva il filtro di Sigmund dentro J e gradJ -> occhio a beta e eta ...
  108 : real betamax = 1.5;
  109 : real betamin = 1e-3;
  110 : // real beta = betamax / (2.^12); // beta raddoppia ad ogni ii/jj fino a beta_max raggiunto a iterazione 20?
  111 : real beta = 3.5;
  112 : real eta = 0.45;
  113 : 
  114 : // Mesh adaptivity
  115 : int meshad = 1;
  116 : real tolmesh = 0.0001;
  117 : real stopmesh = tolmesh + 1.;
  118 : real tau = .00001;
  119 : real maxsK;
  120 : int ntold = Th.nt;
  121 : ;
   10 : include "print_params.edp"// ***************************************************************************
    2 : // Print params
    3 : // ***************************************************************************
    4 : cout << endl << endl;
    5 : 
    6 : cout << "*********************************************" << endl;
    7 : cout << "case1_non_linear.edp - Params" << endl;
    8 : cout << "*********************************************" << endl;
    9 : cout << "Loaded: " << ld << endl;
   10 : if(ld) {
   11 :   cout << "Loaded path: " << path << endl;
   12 :   cout << "Loaded idx: " << idxld << endl;
   13 : } else {
   14 :   cout << "Mesh size: " << n << " x " << n << endl;
   15 : }
   16 : cout << "nu: " << nu << endl;
   17 : cout << "lambda: " << L << endl;
   18 : cout << "mu: " << M <<  endl;
   19 : cout << "Young modulus: " << E << endl;
   20 : 
   21 : cout << "-----" << endl;
   22 : 
   23 : cout << "Given horizontal traction on R: " << d1 <<  endl;
   24 : cout << "nu target: " << nutarget <<  endl;
   25 : cout << "Volume fraction: " << vf <<  endl;
   26 : 
   27 : cout << "-----" << endl;
   28 : 
   29 : cout << "Initial density: ";
   30 : if (rnd) cout << "random with seed = " << seed << endl;
   31 : else cout << "hard-coded" << endl;
   32 : 
   33 : cout << "-----" << endl;
   34 : 
   35 : cout << "IPOPT max iterations: " << IPOPTmaxiter <<  endl;
   36 : 
   37 : cout << "-----" << endl;
   38 : 
   39 : cout << "Power law: " << pen <<  endl;
   40 : cout << "q: " << q << endl;
   41 : cout << "qmax: " << qmax << endl;
   42 : 
   43 : cout << "-----" << endl;
   44 : 
   45 : cout << "Helmholtz filtering: " << helm <<  endl;
   46 : if(helm) cout << "Helmholtz radius: " << radius <<  endl;
   47 : 
   48 : cout << "-----" << endl;
   49 : 
   50 : cout << "Heaviside filtering: " << heav <<  endl;
   51 : 
   52 : cout << "-----" << endl;
   53 : 
   54 : cout << "Mesh adaptivity: " << meshad <<  endl;
   55 : if(meshad){
   56 :   cout << "Mesh tolerance: " << tolmesh <<  endl;
   57 :   cout << "tau: " << tau <<  endl;
   58 : }
   59 : 
   60 : cout << "-----" << endl;
   61 : 
   62 : cout << "Sigmund filtering: " << sig <<  endl;
   63 : cout << "beta: " << beta << endl;
   64 : cout << "eta fixed: " << eta << endl;
   65 : 
   66 : cout << "-----" << endl;
   67 : 
   68 : cout << "Main cycle max iterations: " << maxit << endl;
   69 : 
   70 : cout << endl << endl;
   71 : 
   72 : cout << "*********************************************" << endl;
   73 : cout << "case1_non_linear.edp - Solution" << endl;
   74 : cout << "*********************************************" << endl;
   75 : ;
   11 : include "helmholtz.edp"// ***************************************************************************
    2 : // Helmholtz filter
    3 : // ***************************************************************************
    4 : problem helmholtz(vHelm, psi) = int2d(Th)(radius * (dx(vHelm) * dx(psi) + dy(vHelm) * dy(psi)))
    5 :                               + int2d(Th)(vHelm * psi)
    6 :                               - int2d(Th)(v * psi);
    7 : 
   12 : include "J.edp"// ***************************************************************************
    2 : // Functional J = 1/2 * (delta Target)^2
    3 : // ***************************************************************************
    4 : func real J(real[int] & v)
    5 : {
    6 :   Xhp w;
    7 :   w[] = v;
    8 :   plot(w, fill = 1, value = 1, cmm = "j = "+jj+" ii = "+ii);
    9 : 
   10 :   // Sigmund filtering
   11 :   if(sigIN){
   12 :     plot(w, fill = 1, value = 1, cmm = "j = "+jj+" ii = "+ii);
   13 :     eta = (ii <= 2)*0.4 + (ii > 2 && ii <= 4)*0.5 + (ii > 4)*0.55;
   14 :   	//beta = 2. * beta;
   15 :     // beta = betamax - (betamax - betamin) * exp(- jj / 2); //se vogliamo incrementare più "soft"
   16 : 		wSig = (1-xlb) * (tanh(beta * eta) + tanh(beta * (w - xlb - eta)))
   17 :                    / (tanh(beta * eta) + tanh(beta * (1 - xlb - eta))) + xlb;
   18 :     plot(w, fill = 1, value = 1, cmm = " Density post-Sigmund j = "+jj+" ii = "+ii);
   19 : 		w = wSig;
   20 :   }
   21 : 
   22 :   cout << "*********************************************" << endl;
   23 :   cout << "PRIMAL PROBLEM ..." << endl;
   24 :   include "primal.edp"// ***************************************************************************
    2 : // Linearized primal problem for Newton method
    3 : // ***************************************************************************
    4 : problem primallinearized([varu1,varu2], [psi1, psi2]) =
    5 :   int2d(Th) (w^q * L * (2.0*detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : -1.) * (dx(psi1)*F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  + dy(psi2)*F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  - dy(psi1)*F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  - dx(psi2)*F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) ) )
    6 :                                         * (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) )  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
    7 :                                         +  invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )   + invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) )
    8 : 
    9 :            + w^q * L * (detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : -1) * detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 :  * ( - D1111(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) ) 
   10 :                                                        - D1112(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) ) 
   11 :                                                        - D1121(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) ) 
   12 :                                                        - D1122(u10,u20)      (invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) )  + invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * grad2E11(psi1,psi2,varu1,varu2)     (grad11(psi1,psi2)   (dx(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad21(varu1,varu2)   (dx(varu2)) ) 
   13 :                                                        - D1211(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
   14 :                                                        - D1212(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
   15 :                                                        - D1221(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
   16 :                                                        - D1222(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) ) + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * grad2E12(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) )) 
   17 :                                                        - D2111(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )  
   18 :                                                        - D2112(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )  
   19 :                                                        - D2121(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )  
   20 :                                                        - D2122(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )   + invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * grad2E21(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) )) 
   21 :                                                        - D2211(u10,u20)      (invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) 
   22 :                                                        - D2212(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) 
   23 :                                                        - D2221(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) 
   24 :                                                        - D2222(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) )  + invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * grad2E22(psi1,psi2,varu1,varu2)     (grad12(psi1,psi2)   (dy(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad22(varu1,varu2)   (dy(varu2)) ) 
   25 :                                                    )
   26 : 
   27 :             + w^q * 2.0*M* (gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) )  + E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  * grad2E11(psi1,psi2,varu1,varu2)     (grad11(psi1,psi2)   (dx(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad21(varu1,varu2)   (dx(varu2)) )  +
   28 :                             gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) ) + E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * grad2E12(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) ))  +
   29 :                             gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )   + E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * grad2E21(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) ))  +
   30 :                             gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) )  + E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  * grad2E22(psi1,psi2,varu1,varu2)     (grad12(psi1,psi2)   (dy(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad22(varu1,varu2)   (dy(varu2)) )  )
   31 :            )
   32 : 
   33 :     + int2d(Th) (w^q * L*detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : *(detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : -1.) * (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) ) 
   34 :                                                            + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )
   35 :                                                            + invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )  
   36 :                                                            + invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) ) )
   37 :                 + w^q * 2.0 * M * (E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) ) 
   38 :                                  + E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )
   39 :                                  + E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )  
   40 :                                  + E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) ) ))
   41 :     + on(2,varu1=0) // Dirichlet
   42 :     + on(1,varu2=0) // symmetric BC
   43 :     + on(4,varu1=0) // symmetric BC
   44 :   ;
   45 : ;
   25 :   include "newton.edp"// ***************************************************************************
    2 : // Residual for Newton method
    3 : // ***************************************************************************
    4 : func real errorL2()
    5 : {
    6 :  err1[] = u1[];
    7 :  err1[] -= u10[];
    8 : 
    9 :  real erru = int2d(Th)(err1^2 + err2^2);
   10 :  real normu = int2d(Th)(u10^2 + u20^2);
   11 :  // return error estimate (stopping criterion)
   12 :  return sqrt(erru / (normu+1e-15));
   13 : }
   14 : 
   15 : // ***************************************************************************
   16 : // Newton initialization
   17 : // ***************************************************************************
   18 : [u10, u20] = [d1*x, 0]; //u_k old che soddisfa BC Dirichlet -> in params
   19 : [u1, u2] = [u10, u20]; // u_1
   20 : real tol = 1.e-12;
   21 : real res = 2. * tol;
   22 : int loopcount = 0;
   23 : int loopmax = 100;
   24 : real alpha = 1.0;
   25 : 
   26 : // ***************************************************************************
   27 : // Newton loop
   28 : // ***************************************************************************
   29 : while (loopcount <= loopmax && res >= tol){
   30 :     loopcount ++;
   31 :     cout << "Newton iteration " << loopcount << endl;
   32 :     // Solve
   33 :     primallinearized;
   34 :     // Update
   35 :     u1[] += alpha * varu1[];// u_k+1 = u_k + delta_u
   36 :     // update error for the stopping criterion
   37 :     res = errorL2();
   38 :     //Update old solution
   39 :     u10[] = u1[];
   40 : }
   41 : ;
   26 : 
   27 : 	real d2 = int1d(Th,3)(u2);
   28 : 	nu12 = - d2 / d1; // estimated nu
   29 : 
   30 :   cout << "POISSON'S RATIO = " << nu12 << endl;
   31 :   cout << "*********************************************" << endl;
   32 : 
   33 : 	return 0.5 * (nu12 - nutarget)^2;
   34 : }
   35 : ;
   13 : include "gradJ.edp"// ***************************************************************************
    2 : // Gradient of the functional (lagrangian approach)
    3 : // ***************************************************************************
    4 : func real[int] gradJ(real[int] & v)
    5 : {
    6 :   Xhp w;
    7 :   w[] = v;
    8 : 
    9 :   if(sigIN){
   10 :     eta = (ii <= 2)*0.4 + (ii > 2 && ii <= 4)*0.5 + (ii > 4)*0.55;
   11 :     //beta = 2 * beta;
   12 :     // beta = betamax - (betamax - betamin) * exp(- jj / 2); //se vogliamo incrementare più "soft"
   13 :     wSig = (1-xlb)*(tanh(beta * eta) + tanh(beta * (w - xlb - eta)))
   14 :                  / (tanh(beta * eta) + tanh(beta * (1 - xlb - eta))) + xlb;
   15 :   	w = wSig;
   16 :   }
   17 : 
   18 :   J(w[]);
   19 :   real [int] dJ(Xhp.ndof);
   20 : 	real Curly = (nu12 - nutarget) / d1 ;
   21 :   cout << "*********************************************" << endl;
   22 :   cout << "DUAL PROBLEM ..." << endl;
   23 :   include "dual.edp"// ***************************************************************************
    2 : // Dual problem
    3 : // ***************************************************************************
    4 : dual The Identifier dual does not exist 

 Error line number 4, in file dual.edp, before  token dual

  current line = 1
Compile error : 
	line number :4, dual
error Compile error : 
	line number :4, dual
 code = 1 mpirank: 0
