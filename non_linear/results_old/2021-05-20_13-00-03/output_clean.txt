   22 : savemesh (Th, "results_case1_non_linear/mesh_initial.msh" );
   23 : while(stopmesh > tolmesh && ii < maxit){
   24 : 
   25 : 	jj = 0;
   26 : 
   27 : 	// Power penalty law
   28 : 	if(pen) q = qmax - 2 * exp(- ii / 2.); //q = 3/maxit * ii + 1;
   29 : 	else q = qmax;
   30 : 
   31 : 
   32 : 	IPOPT(J, gradJ, ipC, ipGradC, v[],
   33 : 	  lb  = xlb[], ub  = xub[],
   34 :    	  clb = clb  , cub = cub  ,
   35 : 	  checkindex = 1, structjacc = [gvi,gvj],
   36 :       maxiter = IPOPTmaxiter + 100 * (ii == 0), warmstart = ii,
   37 : 	  lm = lm, uz = uz[], lz = lz[], tol=  IPOPTtol
   38 : 	  //printlevel = 1,
   39 : 	  //derivativetest="first-order");
   40 :       //,maxiter=10);
   41 : 	  );
   42 : 
   43 : 		// Helmholtz filtering
   44 : 		if(helm && ii != maxit - 1){
   45 : 			helmholtz;
   46 : 			plot(v,  wait = 0, fill = 1, value = 1, ps = "results_case1_non_linear/"+ii+"_density_preHelm.ps", cmm = "Density preHelm"+ii);
   47 : 			plot(vHelm, wait = 0, fill = 1, value = 1, ps = "results_case1_non_linear/"+ii+"_density_postHelm.ps", cmm = "Density postHelm"+ii);
   48 : 			v = vHelm;
   49 : 		}
   50 : 
   51 : 	// Mesh adaptivity
   52 :   if(meshad && (ii == 5 || ii == 4)){
   53 :     maxsK = 1;
   54 :     ntold = Th.nt;
   55 :     makemetrica(tau);
   56 :   	Th = adaptmesh(Th, metric = [m11[],m12[],m22[]], nbvx = 12000,
   57 : 			//periodic=[[2,y],[4,y],[1,x],[3,x]]
   58 : 			)
 Error line number 58, in file main.edp, before  token )
syntax error
  current line = 56
Compile error : syntax error
	line number :58, )
error Compile error : syntax error
	line number :58, )
 code = 1 mpirank: 0
