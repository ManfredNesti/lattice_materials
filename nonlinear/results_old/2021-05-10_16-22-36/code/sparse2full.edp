//verbosity=0;
func real[int,int] sparse2full(matrix & M, int n)
{
  int [int] I(1),J(1);
  real[int] C(1);
  int nnz, icount, istop;
  real [int,int] Mout(n,n);

  // converte una matrice sparsa n x n in una full

  // indici riga e colonna dei non-zero di M
  [I,J,C] = M;
  nnz = I.n;

  icount = 0;
  Mout = 0;
  for (int k = 0; k < n; k++)
  {
    istop = 0;
    while (icount < nnz & istop == 0)
    {
      if (I(icount) == k)
      {
        Mout(k,J(icount)) = C(icount);
        icount += 1;
      }
      else istop = 1;
    }
  }  
  return Mout;  
}
