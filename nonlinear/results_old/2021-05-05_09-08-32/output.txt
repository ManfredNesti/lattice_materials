-- FreeFem++ v  3.610001 (date Mon Mar 23 07:06:46 UTC 2020)
 Load: lg_fem lg_mesh lg_mesh3 eigenvalue 
    1 : load "ff-Ipopt";
    2 : load "ffrandom";
    3 : load "iovtk" load: iovtk 
;
    4 : 
    5 : int ii = 0;
    6 : int jj = 0;
    7 : 
    8 : include "macros.edp"// ***************************************************************************
    2 : // Macros
    3 : // ***************************************************************************
    4 : // Gradient of a vector field (u1, u2)
    5 : macro grad11(u1, u2) (dx(u1))  )   (dx(u1)) //
    6 : macro grad12(u1, u2) (dy(u1))  )   (dy(u1)) //
    7 : macro grad21(u1, u2) (dx(u2))  )   (dx(u2)) //
    8 : macro grad22(u1, u2) (dy(u2))  )   (dy(u2)) //
    9 : // Deformation gradient F
   10 : macro F11(u1,u2) (1.0 + grad11(u1,u2))  )   (1.0 + grad11(u1,u2)) //
   11 : macro F12(u1,u2) (0.0 + grad12(u1,u2))  )   (0.0 + grad12(u1,u2)) //
   12 : macro F21(u1,u2) (0.0 + grad21(u1,u2))  )   (0.0 + grad21(u1,u2)) //
   13 : macro F22(u1,u2) (1.0 + grad22(u1,u2))  )   (1.0 + grad22(u1,u2)) //
   14 : // Components Green-Lagrange strain tensor E
   15 : macro E11(u1,u2) 0.5*(grad11(u1,u2)*grad11(u1,u2) + 2.*grad11(u1,u2) + grad21(u1,u2)*grad21(u1,u2))  )   0.5*(grad11(u1,u2)*grad11(u1,u2) + 2.*grad11(u1,u2) + grad21(u1,u2)*grad21(u1,u2)) //
   16 : macro E12(u1,u2) 0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2))  )   0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2)) //
   17 : macro E21(u1,u2) 0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2))  )   0.5*(grad11(u1,u2)*grad12(u1,u2) + grad21(u1,u2)*grad22(u1,u2) + grad12(u1,u2) + grad21(u1,u2)) //
   18 : macro E22(u1,u2) 0.5*(grad12(u1,u2)*grad12(u1,u2) + 2.*grad22(u1,u2) + grad22(u1,u2)*grad22(u1,u2))  )   0.5*(grad12(u1,u2)*grad12(u1,u2) + 2.*grad22(u1,u2) + grad22(u1,u2)*grad22(u1,u2)) //
   19 : // Trace of Green-Lagrange tensor
   20 : macro traceE(u1,u2)	(E11(u1,u2) + E22(u1,u2))
   21 #  )  	(E11(u1,u2) + E22(u1,u2))
   22 : // J: determinant of F
   23 : macro detF(u1,u2) (F11(u1,u2) * F22(u1,u2) - F12(u1,u2) * F21(u1,u2) )
   24 #  )   (F11(u1,u2) * F22(u1,u2) - F12(u1,u2) * F21(u1,u2) )
   25 : //Right Cauchy-Green deformation tensor C
   26 : macro C11(u1,u2) (2*E11(u1,u2) + 1.0)  )   (2*E11(u1,u2) + 1.0) //
   27 : macro C12(u1,u2) (2*E12(u1,u2))  )   (2*E12(u1,u2)) //
   28 : macro C21(u1,u2) (2*E21(u1,u2))  )   (2*E21(u1,u2)) //
   29 : macro C22(u1,u2) (2*E22(u1,u2) + 1.0)  )   (2*E22(u1,u2) + 1.0) //
   30 : // determinantof C
   31 : macro detC(u1,u2) (C11(u1,u2) * C22(u1,u2) - C12(u1,u2) * C21(u1,u2))
   32 #  )   (C11(u1,u2) * C22(u1,u2) - C12(u1,u2) * C21(u1,u2))
   33 : //Inverse of C: C^-1 (symmetric)
   34 : macro invC11(u1,u2) (1/detC(u1,u2) * (C22(u1,u2)))  )   (1/detC(u1,u2) * (C22(u1,u2))) //
   35 : macro invC12(u1,u2) (1/detC(u1,u2) * ((-1)* C12(u1,u2)))  )   (1/detC(u1,u2) * ((-1)* C12(u1,u2))) //
   36 : macro invC21(u1,u2) (1/detC(u1,u2) * ((-1)* C21(u1,u2)))  )   (1/detC(u1,u2) * ((-1)* C21(u1,u2))) //
   37 : macro invC22(u1,u2) (1/detC(u1,u2) * (C11(u1,u2)))  )   (1/detC(u1,u2) * (C11(u1,u2))) //
   38 : // Second Piola-Kirchhoff stress tensor for Phi4 Sij forse non serve ...
   39 : // Dijkl = - d(Cij^-1)/dEkl
   40 : macro D1111(u1,u2) (invC11(u1,u2)*invC11(u1,u2) * 2 )  )   (invC11(u1,u2)*invC11(u1,u2) * 2 ) //
   41 : macro D1211(u1,u2) (invC11(u1,u2)*invC21(u1,u2) * 2 )  )   (invC11(u1,u2)*invC21(u1,u2) * 2 ) // = D1121, D1112, D2111 for symmetry of C,invC and E
   42 : macro D1121(u1,u2) (invC11(u1,u2)*invC12(u1,u2) * 2 )  )   (invC11(u1,u2)*invC12(u1,u2) * 2 ) //
   43 : macro D1112(u1,u2) (invC11(u1,u2)*invC12(u1,u2) * 2 )  )   (invC11(u1,u2)*invC12(u1,u2) * 2 ) //
   44 : macro D2111(u1,u2) (invC11(u1,u2)*invC21(u1,u2) * 2 )  )   (invC11(u1,u2)*invC21(u1,u2) * 2 ) //
   45 : macro D1122(u1,u2) (invC12(u1,u2)*invC12(u1,u2) * 2 )  )   (invC12(u1,u2)*invC12(u1,u2) * 2 ) // = D2211
   46 : macro D2211(u1,u2) (invC21(u1,u2)*invC21(u1,u2) * 2 )  )   (invC21(u1,u2)*invC21(u1,u2) * 2 ) //
   47 : macro D1212(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) // = D2121, D1221, D2112
   48 : macro D2121(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) //
   49 : macro D1221(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) //
   50 : macro D2112(u1,u2) (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2))  )   (invC11(u1,u2)*invC22(u1,u2) + invC12(u1,u2)*invC21(u1,u2)) //
   51 : macro D2122(u1,u2) (invC22(u1,u2)*invC12(u1,u2) * 2 )  )   (invC22(u1,u2)*invC12(u1,u2) * 2 ) // = D2212, D2221, D1222
   52 : macro D2212(u1,u2) (invC22(u1,u2)*invC21(u1,u2) * 2 )  )   (invC22(u1,u2)*invC21(u1,u2) * 2 ) //
   53 : macro D2221(u1,u2) (invC22(u1,u2)*invC21(u1,u2) * 2 )  )   (invC22(u1,u2)*invC21(u1,u2) * 2 ) //
   54 : macro D1222(u1,u2) (invC22(u1,u2)*invC12(u1,u2) * 2 )  )   (invC22(u1,u2)*invC12(u1,u2) * 2 ) //
   55 : macro D2222(u1,u2) (invC22(u1,u2)*invC22(u1,u2) * 2 )  )   (invC22(u1,u2)*invC22(u1,u2) * 2 ) //
   56 : //dEij(u1,u2)/du * lambda
   57 : macro gradE11 (u1,u2,l1,l2) (grad11(u1,u2)*grad11(l1,l2) + grad21(u1,u2)*grad21(l1,l2) + grad11(l1,l2))  )   (grad11(u1,u2)*grad11(l1,l2) + grad21(u1,u2)*grad21(l1,l2) + grad11(l1,l2)) //
   58 : macro gradE12 (u1,u2,l1,l2) (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) ) )   (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) )// vanno aggiunti dopo come termine noto
   59 : macro gradE21 (u1,u2,l1,l2) (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) )   )   (0.5*(grad11(u1,u2)*grad12(l1,l2) + grad21(u1,u2)*grad22(l1,l2) + grad12(u1,u2)*grad11(l1,l2) + grad22(u1,u2)*grad21(l1,l2) + grad12(l1,l2) + grad21(l1,l2)) )  // vanno aggiunti dopo come termine noto
   60 : macro gradE22 (u1,u2,l1,l2) (grad12(u1,u2)*grad12(l1,l2) + grad22(u1,u2)*grad22(l1,l2) + grad22(l1,l2))  )   (grad12(u1,u2)*grad12(l1,l2) + grad22(u1,u2)*grad22(l1,l2) + grad22(l1,l2)) //
   61 : //d^2 Eij(u1,u2)/du^2*lambda * [phi1,phi2] (test function)
   62 : macro grad2E11 (phi1,phi2,l1,l2) (grad11(phi1,phi2)*grad11(l1,l2) + grad21(phi1,phi2)*grad21(l1,l2))  )   (grad11(phi1,phi2)*grad11(l1,l2) + grad21(phi1,phi2)*grad21(l1,l2)) //
   63 : macro grad2E12 (phi1,phi2,l1,l2) (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2)))  )   (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2))) //
   64 : macro grad2E21 (phi1,phi2,l1,l2) (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2)))  )   (0.5*(grad11(phi1,phi2)*grad12(l1,l2) + grad21(phi1,phi2)*grad22(l1,l2) + grad12(phi1,phi2)*grad11(l1,l2) + grad22(phi1,phi2)*grad21(l1,l2))) //
   65 : macro grad2E22 (phi1,phi2,l1,l2) (grad12(phi1,phi2)*grad12(l1,l2) + grad22(phi1,phi2)*grad22(l1,l2))  )   (grad12(phi1,phi2)*grad12(l1,l2) + grad22(phi1,phi2)*grad22(l1,l2)) //
   66 : 
    9 : include "params.edp"// ***************************************************************************
    2 : // Params
    3 : // ***************************************************************************
    4 : 
    5 : // Vettore per il salvataggio delle immagini in formato vtk (da usare in Paraview)
    6 : int[int] ffordervel = [1];
    7 : 
    8 : // Load and mesh
    9 : int ld = 0;
   10 : string path = "results/2021-05-03_12-23-51/";
   11 : int idxld = 2;
   12 : mesh Th;
   13 : int n = 30;
   14 : 
   15 : if(ld) {
   16 :   Th = readmesh(path+"mesh_initial.msh");
   17 :   plot(Th, wait=1, cmm="Loaded mesh");
   18 : } else {
   19 :   Th = square(n, n, [x, y]);
   20 : }
   21 : 
   22 : // Params
   23 : real nu12;
   24 : real nu = 0.3;
   25 : real E = 1.;
   26 : real L = E*nu/(1-nu^2);
   27 : real M = E/(2*(1+nu));
   28 : real d1 = 0.3;        // u traction given
   29 : real vf = 0.4;       // volume fraction
   30 : real nutarget = -1; // nu target
   31 : 
   32 : // Density space
   33 : fespace Xhp(Th,P1);
   34 : // fespace Xhp(Th, P1, periodic = [[2,y],[4,y],[1,x],[3,x]]);
   35 : Xhp v,     // density
   36 :     vHelm, // Helmholtz filtered density
   37 :     vHeav, // Heaviside filtered density
   38 :     vSig,   // Sigmund tanh filtered density
   39 :     wSig,  // Sigmund tanh filtered density (internal)
   40 :     psi,
   41 :     lz,
   42 :     uz;     // density, filtered density, test density, params for IPOPT
   43 : Xhp m11, m12, m22; // metric computation utilities
   44 : 
   45 : if (ld) {
   46 :   ifstream fu(path+idxld+"_density.txt");
   47 :   fu >> v[];
   48 :   plot(v, wait=1, fill=1, cmm="Loaded density");
   49 : }
   50 : 
   51 : // Displacement space
   52 : fespace Vh(Th, [P1, P1]);
   53 : Vh [u1,u2],       // displacement
   54 :    [u10,u20] = [d1*x,0],     // old displacement (for Newton)
   55 :    [psi1,psi2],   // test displacement
   56 :    [varu1,varu2], // displacement increments (for Newton)
   57 :    [err1,err2],   // errors (for Newton)
   58 :    [l1, l2],      // lambda
   59 :    [phi1, phi2];  // test lambda
   60 : // Area space
   61 : fespace Xh0(Th, P0); // periodic = [[2,y],[4,y],[1,x],[3,x]]);
   62 : Xh0 vol = area;
   63 : real Volume = int2d(Th)(1.);
   64 : 
   65 : 
   66 : // IPOPT params
   67 : real [int] lm(1);
   68 : int IPOPTmaxiter = 40;
   69 : int[int] gvi(Xhp.ndof), gvj = 0:Xhp.ndof-1;
   70 : gvi = 0;
   71 : Xhp xlb = 1e-4, xub = 1; // lower and upper bounds for v density
   72 : real tolv = 0.;
   73 : real[int] clb = [0*vf*Volume], cub = [vf*Volume]; // lower and upper bounds for constraint
   74 : real IPOPTtol = 1e-3;
   75 : 
   76 : // Inital density
   77 : int rnd = 0;
   78 : int seed = 10;
   79 : if (rnd) {
   80 :   srandom(seed);
   81 :   for(int ii = 0; ii < Xhp.ndof; ii++) v[][ii] = random()/3e9;
   82 : } else {
   83 :   // v = 0.5;
   84 :   // v = (x<=0.5)*(y>=0.5)*(y<=0.7);
   85 :   // v = 5*abs((x-0.5)^2 + (y-0.5)^2 + 0.^8);
   86 :   // v = (1 - xlb) * 0.5*abs(sin(2*pi*(x-0.5))*sin(2*pi*(y-0.5))) + xlb;
   87 :   v = (1 - xlb) * cos(pi*(x-0.5))*cos(pi*(y-0.5)) + xlb;
   88 :   // v = (1 - xlb) * abs(sin(0.5*pi*x)*sin(1*pi*y)) + xlb;
   89 : }
   90 : plot(v, fill = 1, cmm="Initial density", wait=0);
   91 : 
   92 : // Power penalty
   93 : int pen = 0;
   94 : real q = 3.;
   95 : real qmax = 3.;
   96 : 
   97 : // Helmholtz filtering
   98 : int helm = 1;
   99 : real radius = 1./80^2; // filtering radius
  100 : 
  101 : // Heaviside filtering
  102 : int heav = 0;
  103 : 
  104 : // Main params
  105 : int maxit = 12;
  106 : 
  107 : // Sigmund filtering
  108 : int sig = 1;
  109 : int sigIN = 0; //attiva il filtro di Sigmund dentro J e gradJ -> occhio a beta e eta ...
  110 : real betamax = 1.5;
  111 : real betamin = 1e-3;
  112 : // real beta = betamax / (2.^20); // beta raddoppia ad ogni ii/jj fino a beta_max raggiunto a iterazione 20?
  113 : real beta = 2;
  114 : real eta = 0.45;
  115 : 
  116 : // Mesh adaptivity
  117 : int meshad = 0;
  118 : real tolmesh = 0.0001;
  119 : real stopmesh = tolmesh + 1.;
  120 : real tau = .00001;
  121 : real maxsK;
  122 : int ntold = Th.nt;
  123 : ;
   10 : include "print_params.edp"// ***************************************************************************
    2 : // Print params
    3 : // ***************************************************************************
    4 : cout << endl << endl;
    5 : 
    6 : cout << "*********************************************" << endl;
    7 : cout << "case1_nonlinear.edp - Params" << endl;
    8 : cout << "*********************************************" << endl;
    9 : cout << "Loaded: " << ld << endl;
   10 : if(ld) {
   11 :   cout << "Loaded path: " << path << endl;
   12 :   cout << "Loaded idx: " << idxld << endl;
   13 : } else {
   14 :   cout << "Mesh size: " << n << " x " << n << endl;
   15 : }
   16 : cout << "nu: " << nu << endl;
   17 : cout << "lambda: " << L << endl;
   18 : cout << "mu: " << M <<  endl;
   19 : cout << "Young modulus: " << E << endl;
   20 : 
   21 : cout << "-----" << endl;
   22 : 
   23 : cout << "Given horizontal traction on R: " << d1 <<  endl;
   24 : cout << "nu target: " << nutarget <<  endl;
   25 : cout << "Volume fraction: " << vf <<  endl;
   26 : 
   27 : cout << "-----" << endl;
   28 : 
   29 : cout << "Initial density: ";
   30 : if (rnd) cout << "random with seed = " << seed << endl;
   31 : else cout << "hard-coded" << endl;
   32 : 
   33 : cout << "-----" << endl;
   34 : 
   35 : cout << "IPOPT max iterations: " << IPOPTmaxiter <<  endl;
   36 : 
   37 : cout << "-----" << endl;
   38 : 
   39 : cout << "Power law: " << pen <<  endl;
   40 : cout << "q: " << q << endl;
   41 : cout << "qmax: " << qmax << endl;
   42 : 
   43 : cout << "-----" << endl;
   44 : 
   45 : cout << "Helmholtz filtering: " << helm <<  endl;
   46 : if(helm) cout << "Helmholtz radius: " << radius <<  endl;
   47 : 
   48 : cout << "-----" << endl;
   49 : 
   50 : cout << "Heaviside filtering: " << heav <<  endl;
   51 : 
   52 : cout << "-----" << endl;
   53 : 
   54 : cout << "Mesh adaptivity: " << meshad <<  endl;
   55 : if(meshad){
   56 :   cout << "Mesh tolerance: " << tolmesh <<  endl;
   57 :   cout << "tau: " << tau <<  endl;
   58 : }
   59 : 
   60 : cout << "-----" << endl;
   61 : 
   62 : cout << "Sigmund filtering: " << sig <<  endl;
   63 : cout << "beta: " << beta << endl;
   64 : cout << "eta fixed: " << eta << endl;
   65 : 
   66 : cout << "-----" << endl;
   67 : 
   68 : cout << "Main cycle max iterations: " << maxit << endl;
   69 : 
   70 : cout << endl << endl;
   71 : 
   72 : cout << "*********************************************" << endl;
   73 : cout << "case1_nonlinear.edp - Solution" << endl;
   74 : cout << "*********************************************" << endl;
   75 : ;
   11 : include "helmholtz.edp"// ***************************************************************************
    2 : // Helmholtz filter
    3 : // ***************************************************************************
    4 : problem helmholtz(vHelm, psi) = int2d(Th)(radius * (dx(vHelm) * dx(psi) + dy(vHelm) * dy(psi)))
    5 :                               + int2d(Th)(vHelm * psi)
    6 :                               - int2d(Th)(v * psi);
    7 : 
   12 : include "J.edp"// ***************************************************************************
    2 : // Functional J = 1/2 * (delta Target)^2
    3 : // ***************************************************************************
    4 : func real J(real[int] & v)
    5 : {
    6 :   Xhp w; //density
    7 :   w[] = v;
    8 :   plot(w, fill = 1, value = 1, cmm = "j = "+jj+" ii = "+ii);
    9 :   // Sigmund filtering
   10 :   if(sigIN){
   11 :     plot(w, fill = 1, value = 1, cmm = "j = "+jj+" ii = "+ii);
   12 :     eta = (ii <= 2)*0.4 + (ii > 2 && ii <= 4)*0.5 + (ii > 4)*0.55;
   13 :   	//beta = 2. * beta;
   14 :     // beta = betamax - (betamax - betamin) * exp(- jj / 2); //se vogliamo incrementare più "soft"
   15 : 		wSig = (1-xlb) * (tanh(beta * eta) + tanh(beta * (w - xlb - eta)))
   16 :                    / (tanh(beta * eta) + tanh(beta * (1 - xlb - eta))) + xlb;
   17 :     plot(w, fill = 1, value = 1, cmm = " Density post-Sigmund j = "+jj+" ii = "+ii);
   18 : 		w = wSig;
   19 :   }
   20 : 
   21 :   cout << "*********************************************" << endl;
   22 :   cout << "PRIMAL PROBLEM ..." << endl;
   23 :   // Newton step for primal problem
   24 :   problem primallinearized([varu1,varu2], [psi1, psi2]) =
   25 :     int2d(Th) (w^q * L * (2.0*detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : -1.) * (dx(psi1)*F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  + dy(psi2)*F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  - dy(psi1)*F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  - dx(psi2)*F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) ) )
   26 :                                           * (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) )  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
   27 :                                           +  invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )   + invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) )
   28 : 
   29 :              + w^q * L * (detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : -1) * detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 :  * ( - D1111(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) ) 
   30 :                                                          - D1112(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) ) 
   31 :                                                          - D1121(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) ) 
   32 :                                                          - D1122(u10,u20)      (invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) )  + invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * grad2E11(psi1,psi2,varu1,varu2)     (grad11(psi1,psi2)   (dx(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad21(varu1,varu2)   (dx(varu2)) ) 
   33 :                                                          - D1211(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
   34 :                                                          - D1212(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
   35 :                                                          - D1221(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )
   36 :                                                          - D1222(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) ) + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * grad2E12(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) )) 
   37 :                                                          - D2111(u10,u20)      (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )  
   38 :                                                          - D2112(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )  
   39 :                                                          - D2121(u10,u20)     (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )  
   40 :                                                          - D2122(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )   + invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * grad2E21(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) )) 
   41 :                                                          - D2211(u10,u20)      (invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) 
   42 :                                                          - D2212(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) 
   43 :                                                          - D2221(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * 2 )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) ) 
   44 :                                                          - D2222(u10,u20)      (invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) )) *invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * 2 )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) )  + invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * grad2E22(psi1,psi2,varu1,varu2)     (grad12(psi1,psi2)   (dy(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad22(varu1,varu2)   (dy(varu2)) ) 
   45 :                                                      )
   46 : 
   47 :               + w^q * 2.0*M* (gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) )  * gradE11(u10,u20,varu1,varu2)       (grad11(u10,u20)   (dx(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(u10,u20)   (dx(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad11(varu1,varu2)   (dx(varu1)) )  + E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  * grad2E11(psi1,psi2,varu1,varu2)     (grad11(psi1,psi2)   (dx(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad21(varu1,varu2)   (dx(varu2)) )  +
   48 :   			                      gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) ) * gradE12(u10,u20,varu1,varu2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) ) + E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * grad2E12(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) ))  +
   49 :   			                      gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )   * gradE21(u10,u20,varu1,varu2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(u10,u20)   (dx(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(u10,u20)   (dy(u10)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(u10,u20)   (dy(u20)) *grad21(varu1,varu2)   (dx(varu2))  + grad12(varu1,varu2)   (dy(varu1))  + grad21(varu1,varu2)   (dx(varu2)) ) )   + E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * grad2E21(psi1,psi2,varu1,varu2)         (0.5*(grad11(psi1,psi2)   (dx(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad21(psi1,psi2)   (dx(psi2)) *grad22(varu1,varu2)   (dy(varu2))  + grad12(psi1,psi2)   (dy(psi1)) *grad11(varu1,varu2)   (dx(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad21(varu1,varu2)   (dx(varu2)) ))  +
   50 :   			                      gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) )  * gradE22(u10,u20,varu1,varu2)       (grad12(u10,u20)   (dy(u10)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(u10,u20)   (dy(u20)) *grad22(varu1,varu2)   (dy(varu2))  + grad22(varu1,varu2)   (dy(varu2)) )  + E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  * grad2E22(psi1,psi2,varu1,varu2)     (grad12(psi1,psi2)   (dy(psi1)) *grad12(varu1,varu2)   (dy(varu1))  + grad22(psi1,psi2)   (dy(psi2)) *grad22(varu1,varu2)   (dy(varu2)) )  )
   51 :              )
   52 : 
   53 :       + int2d(Th) (w^q * L*detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : *(detF(u10,u20)        
   24 :  (F11(u10,u20)     (1.0 + grad11(u10,u20)   (dx(u10)) )  * F22(u10,u20)     (1.0 + grad22(u10,u20)   (dy(u20)) )  - F12(u10,u20)     (0.0 + grad12(u10,u20)   (dy(u10)) )  * F21(u10,u20)     (0.0 + grad21(u10,u20)   (dx(u20)) )  )
   24 : -1.) * (invC11(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0) ))  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) ) 
   54 :   			                                                     + invC12(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )
   55 :   			          																					 + invC21(u10,u20)      (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * ((-1)* C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) ))  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )  
   56 :   			          																					 + invC22(u10,u20)     (1/detC(u10,u20)       
   32 :  (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0)  * C22(u10,u20)     (2*E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  + 1.0)  - C12(u10,u20)   (2*E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) )  * C21(u10,u20)   (2*E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) ) ) )
   32 :  * (C11(u10,u20)     (2*E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  + 1.0) ))  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) ) )
   57 :        				    + w^q * 2.0 * M * (E11(u10,u20)       0.5*(grad11(u10,u20)   (dx(u10)) *grad11(u10,u20)   (dx(u10))  + 2.*grad11(u10,u20)   (dx(u10))  + grad21(u10,u20)   (dx(u20)) *grad21(u10,u20)   (dx(u20)) )  * gradE11(u10,u20,psi1,psi2)       (grad11(u10,u20)   (dx(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad21(u10,u20)   (dx(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad11(psi1,psi2)   (dx(psi1)) ) 
   58 :   			                           + E12(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * gradE12(u10,u20,psi1,psi2)             (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )
   59 :   			    				               + E21(u10,u20)         0.5*(grad11(u10,u20)   (dx(u10)) *grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) *grad22(u10,u20)   (dy(u20))  + grad12(u10,u20)   (dy(u10))  + grad21(u10,u20)   (dx(u20)) )  * gradE21(u10,u20,psi1,psi2)               (0.5*(grad11(u10,u20)   (dx(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad21(u10,u20)   (dx(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad12(u10,u20)   (dy(u10)) *grad11(psi1,psi2)   (dx(psi1))  + grad22(u10,u20)   (dy(u20)) *grad21(psi1,psi2)   (dx(psi2))  + grad12(psi1,psi2)   (dy(psi1))  + grad21(psi1,psi2)   (dx(psi2)) ) )  
   60 :   			                           + E22(u10,u20)       0.5*(grad12(u10,u20)   (dy(u10)) *grad12(u10,u20)   (dy(u10))  + 2.*grad22(u10,u20)   (dy(u20))  + grad22(u10,u20)   (dy(u20)) *grad22(u10,u20)   (dy(u20)) )  * gradE22(u10,u20,psi1,psi2)       (grad12(u10,u20)   (dy(u10)) *grad12(psi1,psi2)   (dy(psi1))  + grad22(u10,u20)   (dy(u20)) *grad22(psi1,psi2)   (dy(psi2))  + grad22(psi1,psi2)   (dy(psi2)) ) ))
   61 :       + on(2,varu1=0) // Dirichlet
   62 :       + on(1,varu2=0) // symmetric BC
   63 :       + on(4,varu1=0) // symmetric BC
   64 :     ;
   65 : 
   66 :   // Residual for Newton method
   67 :   func real errorL2()
   68 :   {
   69 :    err1[] = u1[];
   70 :    err1[] -= u10[];
   71 : 
   72 :    real erru = int2d(Th)(err1^2 + err2^2);
   73 :    real normu = int2d(Th)(u10^2 + u20^2);
   74 :    // return error estimate (stopping criterion)
   75 :    return sqrt(erru / (normu+1e-15));
   76 :   }
   77 : 
   78 : 	// Newton initialization
   79 : 	// [u10, u20] = [d1*x, 0]; //u_k old che soddisfa BC Dirichlet -> in params
   80 : 	[u1, u2] = [u10, u20]; // u_1
   81 : 	real tol = 1.e-12;
   82 : 	real res = 2. * tol;
   83 : 	int loopcount = 0;
   84 : 	int loopmax = 100;
   85 : 	real alpha = 1.0;
   86 : 
   87 : 	// Iterations
   88 : 	while (loopcount <= loopmax && res >= tol){
   89 : 	    loopcount ++;
   90 : 	    cout << "Newton iteration " << loopcount << endl;
   91 : 	    // Solve
   92 : 	    primallinearized;
   93 : 	    // Update
   94 : 	    u1[] += alpha * varu1[];// u_k+1 = u_k + delta_u
   95 : 	    // update error for the stopping criterion
   96 : 	    res = errorL2();
   97 : 	    //Update old solution
   98 : 	    u10[] = u1[];
   99 : 	}
  100 : 
  101 : 	real d2 = int1d(Th,3)(u2);
  102 : 	nu12 = - d2 / d1; // estimated nu
  103 : 
  104 :   cout << "POISSON'S RATIO = " << nu12 << endl;
  105 :   cout << "*********************************************" << endl;
  106 : 
  107 : 	return 0.5 * (nu12 - nutarget)^2;
  108 : }
  109 : ;
   13 : include "gradJ.edp"// ***************************************************************************
    2 : // Gradient of the functional (lagrangian approach)
    3 : // ***************************************************************************
    4 : 
    5 : //Sigmund filter derivative
    6 : //func real[int] dfilter(real[int] psi) {return dx(psi);}
    7 : // (1/(tanh(beta * eta) + tanh(beta * (1-eta)) ) * beta / (cosh(beta*(psi-eta)))^2)
    8 : 
    9 : func real[int] gradJ(real[int] & v)
   10 : {
   11 :   Xhp w;
   12 :   w[] = v;
   13 : 
   14 :   if(sigIN){
   15 :     eta = (ii <= 2)*0.4 + (ii > 2 && ii <= 4)*0.5 + (ii > 4)*0.55;
   16 :     //beta = 2 * beta;
   17 :     // beta = betamax - (betamax - betamin) * exp(- jj / 2); //se vogliamo incrementare più "soft"
   18 :     wSig = (1-xlb)*(tanh(beta * eta) + tanh(beta * (w - xlb - eta)))
   19 :                  / (tanh(beta * eta) + tanh(beta * (1 - xlb - eta))) + xlb;
   20 :   	w = wSig;
   21 :   }
   22 : 
   23 :   J(w[]);
   24 :   real [int] dJ(Xhp.ndof);
   25 : 	real Curly = (nu12 - nutarget) / d1 ;
   26 :   cout << "*********************************************" << endl;
   27 :   cout << "DUAL PROBLEM ..." << endl;
   28 : 
   29 : 	solve dual([l1,l2], [phi1, phi2]) =
   30 : 	int2d(Th) (w^q* L * (2.0*detF(u1,u2)        
   24 :  (F11(u1,u2)     (1.0 + grad11(u1,u2)   (dx(u1)) )  * F22(u1,u2)     (1.0 + grad22(u1,u2)   (dy(u2)) )  - F12(u1,u2)     (0.0 + grad12(u1,u2)   (dy(u1)) )  * F21(u1,u2)     (0.0 + grad21(u1,u2)   (dx(u2)) )  )
   24 : -1.) * (dx(phi1)*F22(u1,u2)     (1.0 + grad22(u1,u2)   (dy(u2)) )  + dy(phi2)*F11(u1,u2)     (1.0 + grad11(u1,u2)   (dx(u1)) )  - dy(phi1)*F21(u1,u2)     (0.0 + grad21(u1,u2)   (dx(u2)) )  - dx(phi2)*F12(u1,u2)     (0.0 + grad12(u1,u2)   (dy(u1)) ) )
   31 :                                           * (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) ))  * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) )  + invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )
   32 :                                           +  invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )   + invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) ) )
   33 : 
   34 :            + w^q* L * (detF(u1,u2)        
   24 :  (F11(u1,u2)     (1.0 + grad11(u1,u2)   (dx(u1)) )  * F22(u1,u2)     (1.0 + grad22(u1,u2)   (dy(u2)) )  - F12(u1,u2)     (0.0 + grad12(u1,u2)   (dy(u1)) )  * F21(u1,u2)     (0.0 + grad21(u1,u2)   (dx(u2)) )  )
   24 : -1) * detF(u1,u2)        
   24 :  (F11(u1,u2)     (1.0 + grad11(u1,u2)   (dx(u1)) )  * F22(u1,u2)     (1.0 + grad22(u1,u2)   (dy(u2)) )  - F12(u1,u2)     (0.0 + grad12(u1,u2)   (dy(u1)) )  * F21(u1,u2)     (0.0 + grad21(u1,u2)   (dx(u2)) )  )
   24 :  * (  - D1111(u1,u2)      (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) ))  * 2 )  * gradE11(u1,u2,phi1,phi2)       (grad11(u1,u2)   (dx(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad21(u1,u2)   (dx(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad11(phi1,phi2)   (dx(phi1)) )  * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) ) 
   35 : 			                                                   - D1112(u1,u2)      (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE12(u1,u2,phi1,phi2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) ) * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) ) 
   36 : 			                                                   - D1121(u1,u2)      (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE21(u1,u2,phi1,phi2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) )   * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) ) 
   37 : 			                                                   - D1122(u1,u2)      (invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) *invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE22(u1,u2,phi1,phi2)       (grad12(u1,u2)   (dy(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad22(u1,u2)   (dy(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad22(phi1,phi2)   (dy(phi2)) )  * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) )  + invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) ))  * grad2E11(phi1,phi2,l1,l2)     (grad11(phi1,phi2)   (dx(phi1)) *grad11(l1,l2)   (dx(l1))  + grad21(phi1,phi2)   (dx(phi2)) *grad21(l1,l2)   (dx(l2)) ) 
   38 : 			                                                   - D1211(u1,u2)      (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE11(u1,u2,phi1,phi2)       (grad11(u1,u2)   (dx(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad21(u1,u2)   (dx(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad11(phi1,phi2)   (dx(phi1)) )  * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )
   39 : 			                                                   - D1212(u1,u2)     (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  + invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) )  * gradE12(u1,u2,phi1,phi2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) ) * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )
   40 : 			                                                   - D1221(u1,u2)     (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  + invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) )  * gradE21(u1,u2,phi1,phi2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) )   * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )
   41 : 			                                                   - D1222(u1,u2)      (invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) )) *invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE22(u1,u2,phi1,phi2)       (grad12(u1,u2)   (dy(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad22(u1,u2)   (dy(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad22(phi1,phi2)   (dy(phi2)) )  * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) ) + invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * grad2E12(phi1,phi2,l1,l2)         (0.5*(grad11(phi1,phi2)   (dx(phi1)) *grad12(l1,l2)   (dy(l1))  + grad21(phi1,phi2)   (dx(phi2)) *grad22(l1,l2)   (dy(l2))  + grad12(phi1,phi2)   (dy(phi1)) *grad11(l1,l2)   (dx(l1))  + grad22(phi1,phi2)   (dy(phi2)) *grad21(l1,l2)   (dx(l2)) )) 
   42 : 			                                                   - D2111(u1,u2)      (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE11(u1,u2,phi1,phi2)       (grad11(u1,u2)   (dx(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad21(u1,u2)   (dx(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad11(phi1,phi2)   (dx(phi1)) )  * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )  
   43 : 			                                                   - D2112(u1,u2)     (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  + invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) )  * gradE12(u1,u2,phi1,phi2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) ) * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )  
   44 : 			                                                   - D2121(u1,u2)     (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) )) *invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  + invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) )  * gradE21(u1,u2,phi1,phi2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) )   * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )  
   45 : 			                                                   - D2122(u1,u2)      (invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) )) *invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE22(u1,u2,phi1,phi2)       (grad12(u1,u2)   (dy(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad22(u1,u2)   (dy(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad22(phi1,phi2)   (dy(phi2)) )  * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )   + invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * grad2E21(phi1,phi2,l1,l2)         (0.5*(grad11(phi1,phi2)   (dx(phi1)) *grad12(l1,l2)   (dy(l1))  + grad21(phi1,phi2)   (dx(phi2)) *grad22(l1,l2)   (dy(l2))  + grad12(phi1,phi2)   (dy(phi1)) *grad11(l1,l2)   (dx(l1))  + grad22(phi1,phi2)   (dy(phi2)) *grad21(l1,l2)   (dx(l2)) )) 
   46 : 			                                                   - D2211(u1,u2)      (invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE11(u1,u2,phi1,phi2)       (grad11(u1,u2)   (dx(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad21(u1,u2)   (dx(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad11(phi1,phi2)   (dx(phi1)) )  * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) ) 
   47 : 			                                                   - D2212(u1,u2)      (invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE12(u1,u2,phi1,phi2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) ) * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) ) 
   48 : 			                                                   - D2221(u1,u2)      (invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) )) *invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * 2 )  * gradE21(u1,u2,phi1,phi2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) )   * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) ) 
   49 : 			                                                   - D2222(u1,u2)      (invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) )) *invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  * 2 )  * gradE22(u1,u2,phi1,phi2)       (grad12(u1,u2)   (dy(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad22(u1,u2)   (dy(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad22(phi1,phi2)   (dy(phi2)) )  * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) )  + invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  * grad2E22(phi1,phi2,l1,l2)     (grad12(phi1,phi2)   (dy(phi1)) *grad12(l1,l2)   (dy(l1))  + grad22(phi1,phi2)   (dy(phi2)) *grad22(l1,l2)   (dy(l2)) ) 
   50 : 	                                                    )
   51 : 
   52 :             + w^q* 2.0*M* (gradE11(u1,u2,phi1,phi2)       (grad11(u1,u2)   (dx(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad21(u1,u2)   (dx(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad11(phi1,phi2)   (dx(phi1)) )  * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) )  + E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  * grad2E11(phi1,phi2,l1,l2)     (grad11(phi1,phi2)   (dx(phi1)) *grad11(l1,l2)   (dx(l1))  + grad21(phi1,phi2)   (dx(phi2)) *grad21(l1,l2)   (dx(l2)) )  +
   53 :                       gradE12(u1,u2,phi1,phi2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) ) * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) ) + E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) )  * grad2E12(phi1,phi2,l1,l2)         (0.5*(grad11(phi1,phi2)   (dx(phi1)) *grad12(l1,l2)   (dy(l1))  + grad21(phi1,phi2)   (dx(phi2)) *grad22(l1,l2)   (dy(l2))  + grad12(phi1,phi2)   (dy(phi1)) *grad11(l1,l2)   (dx(l1))  + grad22(phi1,phi2)   (dy(phi2)) *grad21(l1,l2)   (dx(l2)) ))  +
   54 :                       gradE21(u1,u2,phi1,phi2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad21(u1,u2)   (dx(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad12(u1,u2)   (dy(u1)) *grad11(phi1,phi2)   (dx(phi1))  + grad22(u1,u2)   (dy(u2)) *grad21(phi1,phi2)   (dx(phi2))  + grad12(phi1,phi2)   (dy(phi1))  + grad21(phi1,phi2)   (dx(phi2)) ) )   * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )   + E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) )  * grad2E21(phi1,phi2,l1,l2)         (0.5*(grad11(phi1,phi2)   (dx(phi1)) *grad12(l1,l2)   (dy(l1))  + grad21(phi1,phi2)   (dx(phi2)) *grad22(l1,l2)   (dy(l2))  + grad12(phi1,phi2)   (dy(phi1)) *grad11(l1,l2)   (dx(l1))  + grad22(phi1,phi2)   (dy(phi2)) *grad21(l1,l2)   (dx(l2)) ))  +
   55 :                       gradE22(u1,u2,phi1,phi2)       (grad12(u1,u2)   (dy(u1)) *grad12(phi1,phi2)   (dy(phi1))  + grad22(u1,u2)   (dy(u2)) *grad22(phi1,phi2)   (dy(phi2))  + grad22(phi1,phi2)   (dy(phi2)) )  * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) )  + E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  * grad2E22(phi1,phi2,l1,l2)     (grad12(phi1,phi2)   (dy(phi1)) *grad12(l1,l2)   (dy(l1))  + grad22(phi1,phi2)   (dy(phi2)) *grad22(l1,l2)   (dy(l2)) )  )
   56 :            )
   57 : 					 -  int1d(Th,3)(Curly * phi2)
   58 : 					 + on(2,l1=0) //dirichlet
   59 : 			     + on(1,l2=0) // symmetric bc
   60 : 			     + on(4,l1=0) // symmetric bc
   61 : 			   ;
   62 : 
   63 :   real dfilter;
   64 :   if(sigIN){
   65 :     dfilter = (1-xlb)/(tanh(beta * eta) + tanh(beta * (1 - xlb -eta))) *
   66 :                    beta / (cosh(beta*(w - xlb -eta)))^2;
   67 :   }
   68 :   else dfilter = 1.;
   69 : 
   70 :   varf gradient(SS, psi) =
   71 :       int2d(Th) (q*w^(q-1) * dfilter * psi *
   72 :                                      L*detF(u1,u2)        
   24 :  (F11(u1,u2)     (1.0 + grad11(u1,u2)   (dx(u1)) )  * F22(u1,u2)     (1.0 + grad22(u1,u2)   (dy(u2)) )  - F12(u1,u2)     (0.0 + grad12(u1,u2)   (dy(u1)) )  * F21(u1,u2)     (0.0 + grad21(u1,u2)   (dx(u2)) )  )
   24 : *(detF(u1,u2)        
   24 :  (F11(u1,u2)     (1.0 + grad11(u1,u2)   (dx(u1)) )  * F22(u1,u2)     (1.0 + grad22(u1,u2)   (dy(u2)) )  - F12(u1,u2)     (0.0 + grad12(u1,u2)   (dy(u1)) )  * F21(u1,u2)     (0.0 + grad21(u1,u2)   (dx(u2)) )  )
   24 : -1.) * (invC11(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0) ))  * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) ) 
   73 :           			                                                     + invC12(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )
   74 :           			          																					 + invC21(u1,u2)      (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * ((-1)* C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) ))  * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )  
   75 :           			          																					 + invC22(u1,u2)     (1/detC(u1,u2)       
   32 :  (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0)  * C22(u1,u2)     (2*E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  + 1.0)  - C12(u1,u2)   (2*E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) )  * C21(u1,u2)   (2*E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) ) ) )
   32 :  * (C11(u1,u2)     (2*E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  + 1.0) ))  * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) ) )
   76 : 
   77 :        				 + q*w^(q-1)* dfilter * psi *
   78 :                                 2.0 * M * (E11(u1,u2)       0.5*(grad11(u1,u2)   (dx(u1)) *grad11(u1,u2)   (dx(u1))  + 2.*grad11(u1,u2)   (dx(u1))  + grad21(u1,u2)   (dx(u2)) *grad21(u1,u2)   (dx(u2)) )  * gradE11(u1,u2,l1,l2)       (grad11(u1,u2)   (dx(u1)) *grad11(l1,l2)   (dx(l1))  + grad21(u1,u2)   (dx(u2)) *grad21(l1,l2)   (dx(l2))  + grad11(l1,l2)   (dx(l1)) ) 
   79 :         			                           + E12(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) )  * gradE12(u1,u2,l1,l2)             (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )
   80 :         			    				               + E21(u1,u2)         0.5*(grad11(u1,u2)   (dx(u1)) *grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) *grad22(u1,u2)   (dy(u2))  + grad12(u1,u2)   (dy(u1))  + grad21(u1,u2)   (dx(u2)) )  * gradE21(u1,u2,l1,l2)               (0.5*(grad11(u1,u2)   (dx(u1)) *grad12(l1,l2)   (dy(l1))  + grad21(u1,u2)   (dx(u2)) *grad22(l1,l2)   (dy(l2))  + grad12(u1,u2)   (dy(u1)) *grad11(l1,l2)   (dx(l1))  + grad22(u1,u2)   (dy(u2)) *grad21(l1,l2)   (dx(l2))  + grad12(l1,l2)   (dy(l1))  + grad21(l1,l2)   (dx(l2)) ) )  
   81 :         			                           + E22(u1,u2)       0.5*(grad12(u1,u2)   (dy(u1)) *grad12(u1,u2)   (dy(u1))  + 2.*grad22(u1,u2)   (dy(u2))  + grad22(u1,u2)   (dy(u2)) *grad22(u1,u2)   (dy(u2)) )  * gradE22(u1,u2,l1,l2)       (grad12(u1,u2)   (dy(u1)) *grad12(l1,l2)   (dy(l1))  + grad22(u1,u2)   (dy(u2)) *grad22(l1,l2)   (dy(l2))  + grad22(l1,l2)   (dy(l2)) ) ))
   82 :       ;
   83 : 
   84 :   dJ = gradient(0, Xhp);
   85 :   cout << "jj = " << jj << endl;
   86 :   cout << "DUAL PROBLEM: done!" << endl;
   87 :   cout << "*********************************************" << endl;
   88 :   jj += 1;
   89 : 
   90 :   return dJ;
   91 : }
   92 : ;
   14 : include "constraints.edp"// ***************************************************************************
    2 : // Constraints
    3 : // ***************************************************************************
    4 : // Volume fraction
    5 : func real C(real[int] & v)
    6 : {
    7 :   Xhp w;
    8 :   w[] = v;
    9 : 
   10 :   real fraction = int2d(Th)(w);
   11 : 
   12 :   return fraction;
   13 : }
   14 : 
   15 : func real[int] ipC(real[int] & v)
   16 : {
   17 :   real[int] cc = [C(v)];
   18 :   return cc;
   19 : }
   20 : 
   21 : // Gradient
   22 : func real[int] dC(real[int] & v)
   23 : {
   24 :   Xhp w;
   25 :   w[] = v;
   26 : 
   27 :   varf dc(u,uu)   = int2d(Th)(uu);
   28 : 
   29 :   real [int] jacC = dc(0,Xhp);
   30 :   return jacC;
   31 : }
   32 : 
   33 : matrix mdC;
   34 : 
   35 : func matrix ipGradC(real[int] & v)
   36 : {
   37 :   real[int,int] dc(1,Xhp.ndof);
   38 :   dc(0,:) = dC(v);
   39 : 
   40 :   mdC = dc;
   41 :   return mdC;
   42 : }
   43 : ;
   15 : 
   16 : ofstream outnu ("output_nu.csv");
   17 : // ***************************************************************************
   18 : // Main
   19 : // ***************************************************************************
   20 : include "makemetrica.edp"//verbosity=0;
    2 : 
    3 : func real makemetrica(real toll)
    4 : {
    5 : 	include "sparse2full.edp"//verbosity=0;
    2 : func real[int,int] sparse2full(matrix & M, int n)
    3 : {
    4 :   int [int] I(1),J(1);
    5 :   real[int] C(1);
    6 :   int nnz, icount, istop;
    7 :   real [int,int] Mout(n,n);
    8 : 
    9 :   // converte una matrice sparsa n x n in una full
   10 : 
   11 :   // indici riga e colonna dei non-zero di M
   12 :   [I,J,C] = M;
   13 :   nnz = I.n;
   14 : 
   15 :   icount = 0;
   16 :   Mout = 0;
   17 :   for (int k = 0; k < n; k++)
   18 :   {
   19 :     istop = 0;
   20 :     while (icount < nnz & istop == 0)
   21 :     {
   22 :       if (I(icount) == k)
   23 :       {
   24 :         Mout(k,J(icount)) = C(icount);
   25 :         icount += 1;
   26 :       }
   27 :       else istop = 1;
   28 :     }
   29 :   }  
   30 :   return Mout;  
   31 : }
   32 : ;
    6 : 	include "makepatch.edp"//verbosity=0;
    2 : 
    3 : func real makepatch(int [int,int] & patch, int [int] & nextK)
    4 : {
    5 : 
    6 :   real ne = Th.nt;
    7 :   real nv = Th.nv;
    8 :   
    9 :   real [int,int] nod2ele(nv,1000); // stimo che ogni nodo veda al max 100 elementi
   10 :   int [int] next(nv);             // puntatore alla prima posizione libera di nod2ele
   11 :   next = 0;
   12 :   
   13 :   int [int] alreadyin(ne);
   14 :   alreadyin = 0; 
   15 :   int nod, ele;
   16 : 
   17 :   // costruzione di nod2ele
   18 :   for (int k = 0; k < ne; k++)
   19 :     for (int j = 0; j < 3; j++)
   20 :        {
   21 :          nod2ele(Th[k][j],next(Th[k][j])) = k; 
   22 :          next(Th[k][j]) = next(Th[k][j]) + 1;
   23 :        }
   24 : 
   25 :   
   26 :   for (int k = 0; k < ne; k++)
   27 :   {
   28 :     patch(k,0) = k;
   29 :     alreadyin(k) = 1;
   30 :     for (int i = 0; i < 3; i++)
   31 :     {
   32 :       nod = Th[k][i];
   33 :       for (int j = 0; j < next(nod); j++)
   34 :       {
   35 :         ele = nod2ele(nod,j);
   36 :         if (alreadyin(ele) == 0) 
   37 :         {
   38 :           patch(k,nextK(k)) = ele;
   39 :           alreadyin(ele) = 1;
   40 :           nextK(k) = nextK(k) + 1;
   41 :         }
   42 :       } 
   43 :     } 
   44 :     alreadyin = 0;
   45 :   }
   46 : 	return 1;
   47 : }
   48 : 
   49 : ;
    7 : 	
    8 : 	Xh0 vol=area; 
    9 : 	Xh0 dxv,dyv;
   10 : 	dxv=dx(v);
   11 : 	dyv=dy(v);
   12 : 	Xh0 estimatex,estimatey,estimateloc;
   13 : 	
   14 : 	int ne = Th.nt;
   15 : 	int nv = Th.nv;
   16 : 	
   17 : 	real omega=1.0;
   18 : 	real lam1star,lam2star;
   19 : 	real px,py;
   20 : 	real Ex,Ey;
   21 : 	real vpatch;
   22 : 	real traccia,determ,s1,s2,a1,a2,a,sK,emax,emin,lm,sKstar,prodlam;
   23 : 	real eps=2.220446049250313e-16;
   24 : 	real maxstretch = 1e3;
   25 : 	
   26 : 	int [int] nextK(ne);			//per ogni k, nextK(k) contiene il numero di elementi del patch di k;
   27 : 	real[int] lam1K(ne),lam2K(ne); //autovalori delle MK
   28 : 	real[int] Volpatchvertex(nv); //volume del patch dell' i-esimo nodo
   29 : 
   30 : 	int [int,int] patch(ne,100); //per ogni k(riga), le colonne sono i trinagoli del patch del tetraedro k
   31 : 	real[int,int] GK(2,2),MK(2,2);
   32 : 	real[int,int] Mfull(2,2),MMfull(2,2),Ufull(2,2),Vfull(2,2);  //versione full di M
   33 : 	real [int,int] r1K(2,ne), r2K(2,ne);  // x autovettori delle MK
   34 : 	real [int,int] r1Kstar(2,ne), r2Kstar(2,ne);
   35 : 	real[int,int] Mstar(2,2); 
   36 : 	real[int,int] metricaold(3,nv),metrica(3,nv);
   37 : 	
   38 : 	matrix M,MM,U,V;
   39 : 
   40 : 	nextK = 1;
   41 : 	makepatch(patch,nextK);
   42 : 	
   43 : 	metrica=0;
   44 : 	metricaold=0;
   45 : 	Volpatchvertex=0;
   46 : 	
   47 : // Ricostruzione gradiente
   48 : 
   49 : 	for (int k = 0; k < ne; k++) //loop sui tetraedri
   50 : 	{
   51 : 	GK=0;
   52 : 	MK=0;
   53 : 	Mstar=0;
   54 : 	px=0;
   55 : 	py=0;
   56 : 	vpatch=0;
   57 : 	for(int j=0;j<nextK(k);j++){			//loop sul patch del k-esimo tetraedro
   58 : 		px+=dxv[][patch(k,j)]*vol[][patch(k,j)];
   59 : 		py+=dyv[][patch(k,j)]*vol[][patch(k,j)];
   60 : 		vpatch+=vol[][patch(k,j)];   
   61 : 		}//fine loop patch
   62 : 	px=px/vpatch;
   63 : 	py=py/vpatch;
   64 : 	
   65 : // Fine ricostruzione gradiente
   66 : 
   67 : // Stimatore errore (seminorma H1)
   68 : 
   69 : 	for (int j = 0; j < nextK(k); j++)	//loop sul patch del k-esimo tetraedro
   70 : 	  {
   71 : 	  Ex = px-dxv[][patch(k,j)];
   72 : 	  Ey = py-dyv[][patch(k,j)];	  
   73 : 	  GK(0,0) +=Ex*Ex*vol[][patch(k,j)];
   74 :       GK(0,1) +=Ex*Ey*vol[][patch(k,j)]; 
   75 : 	  GK(1,1) +=Ey*Ey*vol[][patch(k,j)]; 
   76 : 	  }//fine loop patch
   77 : 		
   78 : 		//Gk è simmetrica
   79 : 		GK(1,0) = GK(0,1);
   80 : 		GK = vpatch^(-1)*GK; 
   81 : 	
   82 : 	estimatex[][k]=px-dxv[][k];
   83 : 	estimatey[][k]=py-dyv[][k];
   84 : 
   85 : // Fine stimatore errore (seminorma H1)	
   86 : 	
   87 : 	
   88 : 	
   89 : 	M= [[(Th[k][1].x-Th[k][0].x)/sqrt(3.), (2*Th[k][2].x-Th[k][0].x-Th[k][1].x)/3],
   90 :          [(Th[k][1].y-Th[k][0].y)/sqrt(3.), (2*Th[k][2].y-Th[k][0].y-Th[k][1].y)/3]
   91 :         ];
   92 : 	Mfull=sparse2full(M,3);
   93 : 	
   94 : 	MM = M*M';
   95 :     // [U,S,V] = svd(M);
   96 :     MMfull = sparse2full(MM,2);
   97 :     traccia = MMfull(0,0) + MMfull(1,1);
   98 :     determ  = MMfull(0,0)*MMfull(1,1) - MMfull(0,1)^2;
   99 :     s1    = (traccia + sqrt(traccia^2 - 4*determ))/2;
  100 :     s2    = determ/s1;
  101 :     lam1K(k) = sqrt(s1);  
  102 :     lam2K(k) = sqrt(s2);
  103 : 	
  104 : 	if (MMfull(0,1) == 0) U = [[1, 0],[0, 1]];
  105 :     else
  106 :     {
  107 :       a1 = 1;
  108 :       a2 = (s1 - MMfull(0,0))/MMfull(0,1);
  109 :       a  = sqrt(1 + a2^2);
  110 :       //cout << "lam1K = " << lam1K << endl;
  111 :       //cout << "lam2K = " << lam2K << endl;
  112 :       //cout << "a     = " << a    << endl;
  113 :       U = [[a1/a, -a2/a], [a2/a, a1/a]];
  114 :     }
  115 :     Ufull    = sparse2full(U,2);
  116 :     r1K(0,k) = Ufull(0,0);
  117 :     r1K(1,k) = Ufull(1,0);
  118 :     
  119 : 	r2K(0,k) = Ufull(0,1);
  120 :     r2K(1,k) = Ufull(1,1);
  121 : 	
  122 : 	
  123 : 	MK =  1./lam1K(k)^2*r1K(0:2,k)*r1K(0:2,k)';  
  124 : 	MK += 1./lam2K(k)^2*r2K(0:2,k)*r2K(0:2,k)';
  125 : 	sK = lam1K(k)/lam2K(k);
  126 : 
  127 : 	// eig di GK: [V,E] = eig(GK);
  128 :     traccia = GK(0,0) + GK(1,1);
  129 :     determ  = GK(0,0)*GK(1,1) - GK(0,1)^2;
  130 :     // ci cauteliamo contro valori nulli, troppo piccoli, o negativi degli autovalori
  131 :     
  132 : 	s1 = (traccia + sqrt(traccia^2 - 4*determ))/2;
  133 :     s2 = (traccia - sqrt(traccia^2 - 4*determ))/2;
  134 :     
  135 : 	emax = max(s1,eps);
  136 :     emin = max(s2,eps);
  137 : 	
  138 : 	if (GK(0,1) == 0) V = [[1, 0],[0, 1]];
  139 :     else
  140 :     {
  141 :       a1 = 1;
  142 :       a2 = (s2 - GK(0,0))/GK(0,1);
  143 :       a  = sqrt(1 + a2^2);
  144 :       V = [[a1/a, -a2/a], [a2/a, a1/a]];
  145 :     }
  146 :     Vfull = sparse2full(V,2);
  147 :     r1Kstar(0,k) = Vfull(0,0);
  148 :     r1Kstar(1,k) = Vfull(1,0);
  149 :     r2Kstar(0,k) = Vfull(0,1);
  150 :     r2Kstar(1,k) = Vfull(1,1);
  151 : 	
  152 : 	lm = 10*eps*emin;
  153 :     emin = emin*(emin > lm) + lm*(emin <= lm);
  154 :     emax = emax*(emin > lm) + lm*(emin <= lm);
  155 :     sKstar = min(sqrt(emax/emin),maxstretch);
  156 : 	//cout << sKstar << endl;
  157 : 	maxsK = max(sKstar, maxsK);
  158 : 	//cout << maxsK << endl;
  159 :     
  160 : 	// prodotto di lam1_star e lam2_star
  161 :     prodlam = (toll/(sqrt(sKstar*emin+1/sKstar*emax)))^(2./3);
  162 :     
  163 : 	// il quoziente e' sK
  164 :     // ci cauteliamo contro valori troppo piccoli o troppo grandi ??
  165 :     lam1star = sqrt(prodlam*sKstar);
  166 :     lam2star = sqrt(prodlam/sKstar);
  167 : 	
  168 : 	Mstar  = 1./lam1star^2*r1Kstar(0:1,k)*r1Kstar(0:1,k)';
  169 :     Mstar += 1./lam2star^2*r2Kstar(0:1,k)*r2Kstar(0:1,k)';
  170 : 
  171 : 	////////////////////////////////
  172 : 	//METRICA CORRENTE GLOBALE
  173 : 	//////////////////////////////
  174 : 	metricaold(0,Th[k][0]) += vol[][k]*MK(0,0);
  175 :     metricaold(0,Th[k][1]) += vol[][k]*MK(0,0);
  176 :     metricaold(0,Th[k][2]) += vol[][k]*MK(0,0);
  177 : 	metricaold(1,Th[k][0]) += vol[][k]*MK(0,1);
  178 :     metricaold(1,Th[k][1]) += vol[][k]*MK(0,1);
  179 :     metricaold(1,Th[k][2]) += vol[][k]*MK(0,1);
  180 :     metricaold(2,Th[k][0]) += vol[][k]*MK(1,1);
  181 :     metricaold(2,Th[k][1]) += vol[][k]*MK(1,1);
  182 :     metricaold(2,Th[k][2]) += vol[][k]*MK(1,1);
  183 : 	
  184 : 	
  185 : 	metrica(0,Th[k][0]) += vol[][k]*Mstar(0,0);
  186 :     metrica(0,Th[k][1]) += vol[][k]*Mstar(0,0);
  187 :     metrica(0,Th[k][2]) += vol[][k]*Mstar(0,0);
  188 :     metrica(1,Th[k][0]) += vol[][k]*Mstar(0,1);
  189 :     metrica(1,Th[k][1]) += vol[][k]*Mstar(0,1);
  190 :     metrica(1,Th[k][2]) += vol[][k]*Mstar(0,1);
  191 :     metrica(2,Th[k][0]) += vol[][k]*Mstar(1,1);
  192 : 	metrica(2,Th[k][1]) += vol[][k]*Mstar(1,1);
  193 :     metrica(2,Th[k][2]) += vol[][k]*Mstar(1,1);
  194 : 
  195 : 	Volpatchvertex(Th[k][0]) += vol[][k];
  196 :     Volpatchvertex(Th[k][1]) += vol[][k];
  197 :     Volpatchvertex(Th[k][2]) += vol[][k];
  198 : 	}//FINE LOOP SUI K
  199 : 	cout<<endl<<"STIMATOREx== "<<estimatex[].max<<endl;
  200 : 	cout<<endl<<"STIMATOREy== "<<estimatey[].max<<endl;
  201 : 
  202 : 	
  203 : 	for (int i = 0; i < nv; i++) //LOOP SUI VERTICI
  204 : 	{
  205 : 	metricaold(0,i) = metricaold(0,i)/Volpatchvertex(i);
  206 :     metricaold(1,i) = metricaold(1,i)/Volpatchvertex(i);
  207 :     metricaold(2,i) = metricaold(2,i)/Volpatchvertex(i);
  208 : 
  209 :     metrica   (0,i) = metrica(0,i)/Volpatchvertex(i);
  210 :     metrica   (1,i) = metrica(1,i)/Volpatchvertex(i);
  211 :     metrica   (2,i) = metrica(2,i)/Volpatchvertex(i);
  212 : 	
  213 : 	m11[][i] = (omega*metrica(0,i) + (1-omega)*metricaold(0,i))/3;
  214 :     m12[][i] = (omega*metrica(1,i) + (1-omega)*metricaold(1,i))/3;
  215 :     m22[][i] = (omega*metrica(2,i) + (1-omega)*metricaold(2,i))/3;
  216 : 	
  217 : 	}//FINE LOOP SUI VERTICI
  218 : 	
  219 : 	metricaold = 3.^-1*metricaold;
  220 : 	metrica    = 3.^-1*omega*metrica + (1-omega)*metricaold;
  221 : 
  222 : 
  223 : 
  224 : 
  225 : }
  226 : 
  227 : 	
  228 : 	
  229 : 	
  230 : 	
  231 : 	
  232 : 	
  233 : 	
  234 : 	
  235 : 	
  236 : 	
  237 : 	
  238 : 	
  239 : 
  240 : 
  241 : ;
   21 : 
   22 : savemesh (Th, "results/mesh_initial.msh" );
   23 : while(stopmesh > tolmesh && ii < maxit){
   24 : 
   25 : 	jj = 0;
   26 : 
   27 : 	// Power penalty law
   28 : 	if(pen) q = qmax - 2 * exp(- ii / 2.); //q = 3/maxit * ii + 1;
   29 : 	else q = qmax;
   30 : 
   31 : 
   32 : 	IPOPT(J, gradJ, ipC, ipGradC, v[],
   33 : 	  lb  = xlb[], ub  = xub[],
   34 :    	  clb = clb  , cub = cub  ,
   35 : 	  checkindex = 1, structjacc = [gvi,gvj],
   36 :       maxiter = IPOPTmaxiter + 100 * (ii == 0), warmstart = ii,
   37 : 	  lm = lm, uz = uz[], lz = lz[], tol=  IPOPTtol
   38 : 	  //printlevel = 1,
   39 : 	  //derivativetest="first-order");
   40 :       //,maxiter=10);
   41 : 	  );
   42 : 
   43 : 		// Helmholtz filtering
   44 : 		if(helm){
   45 : 			helmholtz;
   46 : 			plot(v,  wait = 1, fill = 1, ps = "results/"+ii+"_density_preHelm.ps", cmm = "Density preHelm"+ii);
   47 : 			plot(vHelm, wait = 1, fill = 1, ps = "results/"+ii+"_density_postHelm.ps", cmm = "Density postHelm"+ii);
   48 : 			v = vHelm;
   49 : 		}
   50 : 
   51 : 	// Mesh adaptivity
   52 :   if(meshad){
   53 :     maxsK = 1;
   54 :     ntold = Th.nt;
   55 :     makemetrica(tau);
   56 :   	Th = adaptmesh(Th, metric = [m11[],m12[],m22[]], nbvx = 12000, periodic=[[2,y],[4,y],[1,x],[3,x]]);
   57 : 		savemesh (Th, "results/meshii"+ii+".msh" );
   58 :   	plot(Th, wait = 1, cmm="New mesh");
   59 :   	cout << "maxsK = " << maxsK << endl;
   60 :   }
   61 : 
   62 : 	// Heaviside filtering
   63 : 	if(heav){
   64 :     plot(v,  wait = 1, fill = 1, ps = "results/"+ii+"_density_preHeav.ps", cmm = "Density preHeav"+ii);
   65 : 		real betaH = 10*(ii < 19) + 7*(ii == 19);
   66 : 		vHeav = 0.5 + tanh(betaH*(v-0.5))/(2*tanh(0.5*betaH));
   67 :     plot(vHeav, wait = 1, fill = 1, ps = "results/"+ii+"_density_postHeav.ps", cmm = "Density postHeav"+ii);
   68 :     v = vHeav;
   69 : 	}
   70 : 
   71 : 	// Sigmund filtering
   72 : 	if(sig){
   73 : 		if(ii != maxit - 1 ){
   74 : 			// beta = 2. * beta; //se vogliamo raddoppiare beta ad ogni iterazione ii
   75 : 			// beta = betamax - (betamax - betamin) * exp(- ii / 2); //se vogliamo incrementare più "soft"
   76 : 			// eta = (ii <= 2)*0.4 + (ii > 2 && ii <= 4)*0.5 + (ii > 4)*0.55;
   77 : 			plot(v,  wait = 1, fill = 1, ps = "results/"+ii+"_density_preSig.ps", cmm = "Density preSig"+ii);
   78 : 			vSig = (1-xlb) * (tanh(beta * eta) + tanh(beta * (v - xlb - eta)))
   79 : 		                 / (tanh(beta * eta) + tanh(beta * (1 - xlb - eta))) + xlb;
   80 : 			plot(vSig, wait = 1, fill = 1, ps = "results/"+ii+"_density_postSig.ps", cmm = "Density postSig"+ii);
   81 : 			v = vSig;
   82 : 			// if(beta <= 6) beta += 1;
   83 : 			//eta += 0.02;
   84 : 		}
   85 : 	}
   86 : 
   87 :   // Mesh projection (only for mesh adaptivity)
   88 :   if(meshad){
   89 :   	v = v;
   90 :   	xlb = xlb;
   91 :   	xub = xub;
   92 :   	gvi = gvi;
   93 :   	gvj = 0:Xhp.ndof-1;
   94 :   	lz = lz;
   95 :   	uz = uz;
   96 :   	m11 = m11;
   97 :   	m12 = m12;
   98 :   	m22 = m22;
   99 : 
  100 :   	stopmesh = abs(Th.nt - real(ntold))/ntold;
  101 :   }
  102 : 
  103 : 	ii += 1;
  104 : 
  105 : 	cout << "Iteration " << ii << ", Mesh error = " << stopmesh << endl;
  106 : 
  107 : 	{
  108 : 	ofstream fout("results/"+ii+"_density.txt");
  109 : 	fout << v[];
  110 : 	}
  111 : 	plot(v,  wait = 1, fill = 1, ps = "results/"+ii+"_density.ps", cmm = "Density "+ii);
  112 : 	savevtk("results/"+ii+"_density.vtk", Th, v, dataname="Density", order=ffordervel);
  113 : 
  114 : 	outnu << nu12 << endl;
  115 : }
  116 : 
  117 : cout << Th.nt << endl;
  118 : 
  119 : plot(v,  wait = 1, fill = 1, ps = "results/final_density.ps", cmm = "Final Density");
  120 : 
  121 : include "checknu.edp"//Construct a 2x2 material
    2 : //compute nu on the structure obtained
    3 : 
    4 : //cell mesh Th
    5 : //cell density v
    6 : plot(v,  wait = 1, fill = 1, cmm = "Final density in 1 cell");
    7 : 
    8 : mesh Th2 = square(2*n , 2*n , [2*x-1, 2*y-1]); // [-1,1]^2 //HOW TO CHOOSE FROM WHAT Th2 START?
    9 : fespace Xh2(Th2, P1);
   10 : Xh2 v2; // densità su Th2
   11 : 
   12 : for(int i = 0; i < Th2.nt; i++)
   13 :   for(int j = 0; j < 3; j++)
   14 :     if      (Th2[i][j].x >= 0 & Th2[i][j].y >= 0) v2[][Xh2(i,j)] = v( Th2[i][j].x, Th2[i][j].y);
   15 :     else if (Th2[i][j].x <  0 & Th2[i][j].y >= 0) v2[][Xh2(i,j)] = v(-Th2[i][j].x, Th2[i][j].y);
   16 :     else if (Th2[i][j].x <  0 & Th2[i][j].y <  0) v2[][Xh2(i,j)] = v(-Th2[i][j].x,-Th2[i][j].y);
   17 :     else                                          v2[][Xh2(i,j)] = v( Th2[i][j].x,-Th2[i][j].y);
   18 : plot(v2, fill = 1,  wait = 1);
   19 : // traslo nel primo quadrante: così Th2 da [-1,1]^2 diventa la nuova "unit cell" [0,2]^2
   20 : Xh2 u2x =1, u2y = 1;
   21 : real [int] v2old = v2[];
   22 : Th2 = movemesh(Th2,[x+u2x,y+u2y]);
   23 : v2 = v2;
   24 : v2[] = v2old;
   25 : plot(v2, fill = 1,cmm = "v2 dopo shift",  wait = 1);
   26 : 
   27 : //Compute nu Poisson coefficient to check our results
   28 : //Solve primal problem: with v2, on Th2?
   29 : fespace Vh2(Th2, [P1, P1]);
   30 : Vh2 [u21,u22], [u210,u220], [varu21, varu22], [psi21, psi22], [err21,err22];
   31 : 
   32 : problem primallinearized([varu21,varu22], [psi21, psi22]) =
   33 :   int2d(Th2) (v2^q * L * (2.0*detF(u210,u220)        
   24 :  (F11(u210,u220)     (1.0 + grad11(u210,u220)   (dx(u210)) )  * F22(u210,u220)     (1.0 + grad22(u210,u220)   (dy(u220)) )  - F12(u210,u220)     (0.0 + grad12(u210,u220)   (dy(u210)) )  * F21(u210,u220)     (0.0 + grad21(u210,u220)   (dx(u220)) )  )
   24 : -1.) * (dx(psi21)*F22(u210,u220)     (1.0 + grad22(u210,u220)   (dy(u220)) )  + dy(psi22)*F11(u210,u220)     (1.0 + grad11(u210,u220)   (dx(u210)) )  - dy(psi21)*F21(u210,u220)     (0.0 + grad21(u210,u220)   (dx(u220)) )  - dx(psi22)*F12(u210,u220)     (0.0 + grad12(u210,u220)   (dy(u210)) ) )
   34 :                                         * (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) ))  * gradE11(u210,u220,varu21,varu22)       (grad11(u210,u220)   (dx(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(u210,u220)   (dx(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad11(varu21,varu22)   (dx(varu21)) )  + invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * gradE12(u210,u220,varu21,varu22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )
   35 :                                         +  invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * gradE21(u210,u220,varu21,varu22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )   + invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  * gradE22(u210,u220,varu21,varu22)       (grad12(u210,u220)   (dy(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(u210,u220)   (dy(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad22(varu21,varu22)   (dy(varu22)) ) )
   36 : 
   37 :            + v2^q * L * (detF(u210,u220)        
   24 :  (F11(u210,u220)     (1.0 + grad11(u210,u220)   (dx(u210)) )  * F22(u210,u220)     (1.0 + grad22(u210,u220)   (dy(u220)) )  - F12(u210,u220)     (0.0 + grad12(u210,u220)   (dy(u210)) )  * F21(u210,u220)     (0.0 + grad21(u210,u220)   (dx(u220)) )  )
   24 : -1) * detF(u210,u220)        
   24 :  (F11(u210,u220)     (1.0 + grad11(u210,u220)   (dx(u210)) )  * F22(u210,u220)     (1.0 + grad22(u210,u220)   (dy(u220)) )  - F12(u210,u220)     (0.0 + grad12(u210,u220)   (dy(u210)) )  * F21(u210,u220)     (0.0 + grad21(u210,u220)   (dx(u220)) )  )
   24 :  * ( - D1111(u210,u220)      (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) ))  * 2 )  * gradE11(u210,u220,psi21,psi22)       (grad11(u210,u220)   (dx(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad21(u210,u220)   (dx(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad11(psi21,psi22)   (dx(psi21)) )  * gradE11(u210,u220,varu21,varu22)       (grad11(u210,u220)   (dx(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(u210,u220)   (dx(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad11(varu21,varu22)   (dx(varu21)) ) 
   38 :                                                        - D1112(u210,u220)      (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE12(u210,u220,psi21,psi22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) ) * gradE11(u210,u220,varu21,varu22)       (grad11(u210,u220)   (dx(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(u210,u220)   (dx(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad11(varu21,varu22)   (dx(varu21)) ) 
   39 :                                                        - D1121(u210,u220)      (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE21(u210,u220,psi21,psi22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )   * gradE11(u210,u220,varu21,varu22)       (grad11(u210,u220)   (dx(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(u210,u220)   (dx(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad11(varu21,varu22)   (dx(varu21)) ) 
   40 :                                                        - D1122(u210,u220)      (invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) *invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE22(u210,u220,psi21,psi22)       (grad12(u210,u220)   (dy(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad22(u210,u220)   (dy(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad22(psi21,psi22)   (dy(psi22)) )  * gradE11(u210,u220,varu21,varu22)       (grad11(u210,u220)   (dx(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(u210,u220)   (dx(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad11(varu21,varu22)   (dx(varu21)) )  + invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) ))  * grad2E11(psi21,psi22,varu21,varu22)     (grad11(psi21,psi22)   (dx(psi21)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(psi21,psi22)   (dx(psi22)) *grad21(varu21,varu22)   (dx(varu22)) ) 
   41 :                                                        - D1211(u210,u220)      (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE11(u210,u220,psi21,psi22)       (grad11(u210,u220)   (dx(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad21(u210,u220)   (dx(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad11(psi21,psi22)   (dx(psi21)) )  * gradE12(u210,u220,varu21,varu22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )
   42 :                                                        - D1212(u210,u220)     (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  + invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) )  * gradE12(u210,u220,psi21,psi22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) ) * gradE12(u210,u220,varu21,varu22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )
   43 :                                                        - D1221(u210,u220)     (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  + invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) )  * gradE21(u210,u220,psi21,psi22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )   * gradE12(u210,u220,varu21,varu22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )
   44 :                                                        - D1222(u210,u220)      (invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) )) *invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE22(u210,u220,psi21,psi22)       (grad12(u210,u220)   (dy(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad22(u210,u220)   (dy(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad22(psi21,psi22)   (dy(psi22)) )  * gradE12(u210,u220,varu21,varu22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) ) + invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * grad2E12(psi21,psi22,varu21,varu22)         (0.5*(grad11(psi21,psi22)   (dx(psi21)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(psi21,psi22)   (dx(psi22)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(psi21,psi22)   (dy(psi21)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(psi21,psi22)   (dy(psi22)) *grad21(varu21,varu22)   (dx(varu22)) )) 
   45 :                                                        - D2111(u210,u220)      (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE11(u210,u220,psi21,psi22)       (grad11(u210,u220)   (dx(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad21(u210,u220)   (dx(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad11(psi21,psi22)   (dx(psi21)) )  * gradE21(u210,u220,varu21,varu22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )  
   46 :                                                        - D2112(u210,u220)     (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  + invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) )  * gradE12(u210,u220,psi21,psi22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) ) * gradE21(u210,u220,varu21,varu22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )  
   47 :                                                        - D2121(u210,u220)     (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) )) *invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  + invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) )  * gradE21(u210,u220,psi21,psi22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )   * gradE21(u210,u220,varu21,varu22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )  
   48 :                                                        - D2122(u210,u220)      (invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) )) *invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE22(u210,u220,psi21,psi22)       (grad12(u210,u220)   (dy(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad22(u210,u220)   (dy(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad22(psi21,psi22)   (dy(psi22)) )  * gradE21(u210,u220,varu21,varu22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )   + invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * grad2E21(psi21,psi22,varu21,varu22)         (0.5*(grad11(psi21,psi22)   (dx(psi21)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(psi21,psi22)   (dx(psi22)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(psi21,psi22)   (dy(psi21)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(psi21,psi22)   (dy(psi22)) *grad21(varu21,varu22)   (dx(varu22)) )) 
   49 :                                                        - D2211(u210,u220)      (invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE11(u210,u220,psi21,psi22)       (grad11(u210,u220)   (dx(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad21(u210,u220)   (dx(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad11(psi21,psi22)   (dx(psi21)) )  * gradE22(u210,u220,varu21,varu22)       (grad12(u210,u220)   (dy(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(u210,u220)   (dy(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad22(varu21,varu22)   (dy(varu22)) ) 
   50 :                                                        - D2212(u210,u220)      (invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE12(u210,u220,psi21,psi22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) ) * gradE22(u210,u220,varu21,varu22)       (grad12(u210,u220)   (dy(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(u210,u220)   (dy(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad22(varu21,varu22)   (dy(varu22)) ) 
   51 :                                                        - D2221(u210,u220)      (invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) )) *invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * 2 )  * gradE21(u210,u220,psi21,psi22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )   * gradE22(u210,u220,varu21,varu22)       (grad12(u210,u220)   (dy(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(u210,u220)   (dy(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad22(varu21,varu22)   (dy(varu22)) ) 
   52 :                                                        - D2222(u210,u220)      (invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) )) *invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  * 2 )  * gradE22(u210,u220,psi21,psi22)       (grad12(u210,u220)   (dy(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad22(u210,u220)   (dy(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad22(psi21,psi22)   (dy(psi22)) )  * gradE22(u210,u220,varu21,varu22)       (grad12(u210,u220)   (dy(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(u210,u220)   (dy(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad22(varu21,varu22)   (dy(varu22)) )  + invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  * grad2E22(psi21,psi22,varu21,varu22)     (grad12(psi21,psi22)   (dy(psi21)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(psi21,psi22)   (dy(psi22)) *grad22(varu21,varu22)   (dy(varu22)) ) 
   53 :                                                    )
   54 : 
   55 :             + v2^q * 2.0*M* (gradE11(u210,u220,psi21,psi22)       (grad11(u210,u220)   (dx(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad21(u210,u220)   (dx(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad11(psi21,psi22)   (dx(psi21)) )  * gradE11(u210,u220,varu21,varu22)       (grad11(u210,u220)   (dx(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(u210,u220)   (dx(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad11(varu21,varu22)   (dx(varu21)) )  + E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  * grad2E11(psi21,psi22,varu21,varu22)     (grad11(psi21,psi22)   (dx(psi21)) *grad11(varu21,varu22)   (dx(varu21))  + grad21(psi21,psi22)   (dx(psi22)) *grad21(varu21,varu22)   (dx(varu22)) )  +
   56 :                             gradE12(u210,u220,psi21,psi22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) ) * gradE12(u210,u220,varu21,varu22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) ) + E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) )  * grad2E12(psi21,psi22,varu21,varu22)         (0.5*(grad11(psi21,psi22)   (dx(psi21)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(psi21,psi22)   (dx(psi22)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(psi21,psi22)   (dy(psi21)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(psi21,psi22)   (dy(psi22)) *grad21(varu21,varu22)   (dx(varu22)) ))  +
   57 :                             gradE21(u210,u220,psi21,psi22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )   * gradE21(u210,u220,varu21,varu22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(u210,u220)   (dx(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(u210,u220)   (dy(u210)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(u210,u220)   (dy(u220)) *grad21(varu21,varu22)   (dx(varu22))  + grad12(varu21,varu22)   (dy(varu21))  + grad21(varu21,varu22)   (dx(varu22)) ) )   + E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) )  * grad2E21(psi21,psi22,varu21,varu22)         (0.5*(grad11(psi21,psi22)   (dx(psi21)) *grad12(varu21,varu22)   (dy(varu21))  + grad21(psi21,psi22)   (dx(psi22)) *grad22(varu21,varu22)   (dy(varu22))  + grad12(psi21,psi22)   (dy(psi21)) *grad11(varu21,varu22)   (dx(varu21))  + grad22(psi21,psi22)   (dy(psi22)) *grad21(varu21,varu22)   (dx(varu22)) ))  +
   58 :                             gradE22(u210,u220,psi21,psi22)       (grad12(u210,u220)   (dy(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad22(u210,u220)   (dy(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad22(psi21,psi22)   (dy(psi22)) )  * gradE22(u210,u220,varu21,varu22)       (grad12(u210,u220)   (dy(u210)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(u210,u220)   (dy(u220)) *grad22(varu21,varu22)   (dy(varu22))  + grad22(varu21,varu22)   (dy(varu22)) )  + E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  * grad2E22(psi21,psi22,varu21,varu22)     (grad12(psi21,psi22)   (dy(psi21)) *grad12(varu21,varu22)   (dy(varu21))  + grad22(psi21,psi22)   (dy(psi22)) *grad22(varu21,varu22)   (dy(varu22)) )  )
   59 :            )
   60 : 
   61 :     + int2d(Th2) (v2^q * L*detF(u210,u220)        
   24 :  (F11(u210,u220)     (1.0 + grad11(u210,u220)   (dx(u210)) )  * F22(u210,u220)     (1.0 + grad22(u210,u220)   (dy(u220)) )  - F12(u210,u220)     (0.0 + grad12(u210,u220)   (dy(u210)) )  * F21(u210,u220)     (0.0 + grad21(u210,u220)   (dx(u220)) )  )
   24 : *(detF(u210,u220)        
   24 :  (F11(u210,u220)     (1.0 + grad11(u210,u220)   (dx(u210)) )  * F22(u210,u220)     (1.0 + grad22(u210,u220)   (dy(u220)) )  - F12(u210,u220)     (0.0 + grad12(u210,u220)   (dy(u210)) )  * F21(u210,u220)     (0.0 + grad21(u210,u220)   (dx(u220)) )  )
   24 : -1.) * (invC11(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0) ))  * gradE11(u210,u220,psi21,psi22)       (grad11(u210,u220)   (dx(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad21(u210,u220)   (dx(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad11(psi21,psi22)   (dx(psi21)) ) 
   62 :                                                            + invC12(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * gradE12(u210,u220,psi21,psi22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )
   63 :                                                            + invC21(u210,u220)      (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * ((-1)* C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) ))  * gradE21(u210,u220,psi21,psi22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )  
   64 :                                                            + invC22(u210,u220)     (1/detC(u210,u220)       
   32 :  (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0)  * C22(u210,u220)     (2*E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  + 1.0)  - C12(u210,u220)   (2*E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) )  * C21(u210,u220)   (2*E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) ) ) )
   32 :  * (C11(u210,u220)     (2*E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  + 1.0) ))  * gradE22(u210,u220,psi21,psi22)       (grad12(u210,u220)   (dy(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad22(u210,u220)   (dy(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad22(psi21,psi22)   (dy(psi22)) ) )
   65 :                 + v2^q * 2.0 * M * (E11(u210,u220)       0.5*(grad11(u210,u220)   (dx(u210)) *grad11(u210,u220)   (dx(u210))  + 2.*grad11(u210,u220)   (dx(u210))  + grad21(u210,u220)   (dx(u220)) *grad21(u210,u220)   (dx(u220)) )  * gradE11(u210,u220,psi21,psi22)       (grad11(u210,u220)   (dx(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad21(u210,u220)   (dx(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad11(psi21,psi22)   (dx(psi21)) ) 
   66 :                                  + E12(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) )  * gradE12(u210,u220,psi21,psi22)             (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )
   67 :                                  + E21(u210,u220)         0.5*(grad11(u210,u220)   (dx(u210)) *grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) *grad22(u210,u220)   (dy(u220))  + grad12(u210,u220)   (dy(u210))  + grad21(u210,u220)   (dx(u220)) )  * gradE21(u210,u220,psi21,psi22)               (0.5*(grad11(u210,u220)   (dx(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad21(u210,u220)   (dx(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad12(u210,u220)   (dy(u210)) *grad11(psi21,psi22)   (dx(psi21))  + grad22(u210,u220)   (dy(u220)) *grad21(psi21,psi22)   (dx(psi22))  + grad12(psi21,psi22)   (dy(psi21))  + grad21(psi21,psi22)   (dx(psi22)) ) )  
   68 :                                  + E22(u210,u220)       0.5*(grad12(u210,u220)   (dy(u210)) *grad12(u210,u220)   (dy(u210))  + 2.*grad22(u210,u220)   (dy(u220))  + grad22(u210,u220)   (dy(u220)) *grad22(u210,u220)   (dy(u220)) )  * gradE22(u210,u220,psi21,psi22)       (grad12(u210,u220)   (dy(u210)) *grad12(psi21,psi22)   (dy(psi21))  + grad22(u210,u220)   (dy(u220)) *grad22(psi21,psi22)   (dy(psi22))  + grad22(psi21,psi22)   (dy(psi22)) ) ))
   69 :     + on(2,varu21=0) // Dirichlet
   70 :     + on(1,varu22=0) // symmetric BC
   71 :     + on(4,varu21=0) // symmetric BC
   72 :   ;
   73 : 
   74 : // Residual for Newton method
   75 : func real errorL2()
   76 : {
   77 :  err21[] = u1[];
   78 :  err21[] -= u210[];
   79 : 
   80 :  real erru = int2d(Th2)(err21^2 + err22^2);
   81 :  real normu = int2d(Th2)(u210^2 + u220^2);
   82 :  // return error estimate (stopping criterion)
   83 :  return sqrt(erru / (normu+1e-15));
   84 : }
   85 : 
   86 : // Newton initialization ?
   87 : [u210, u220] = [d1*x, 0]; //u_k old che soddisfa BC Dirichlet -> in params
   88 : [u21, u22] = [u210, u220]; // u_1
   89 : real tol = 1.e-12;
   90 : real res = 2. * tol;
   91 : int loopcount = 0;
   92 : int loopmax = 100;
   93 : real alpha = 1.0;
   94 : 
   95 : // Iterations
   96 : while (loopcount <= loopmax && res >= tol){
   97 :     loopcount ++;
   98 :     cout << "Newton iteration " << loopcount << endl;
   99 :     // Solve
  100 :     primallinearized;
  101 :     // Update
  102 :     u21[] += alpha * varu21[];// u_k+1 = u_k + delta_u
  103 :     // update error for the stopping criterion
  104 :     res = errorL2();
  105 :     //Update old solution
  106 :     u210[] = u21[];
  107 : }
  108 : 
  109 : real d2 = int1d(Th2,3)(u2);
  110 : nu12 = - d2 / d1; // estimated nu
  111 : 
  112 : cout << "FINAL POISSON'S RATIO = " << nu12 << endl;
  113 : cout << "*********************************************" << endl;
  114 : ;
  122 :  sizestack + 1024 =528256  ( 527232 )

  -- Square mesh : nb vertices  =961 ,  nb triangles = 1800 ,  nb boundary edges 120


*********************************************
case1_nonlinear.edp - Params
*********************************************
Loaded: 0
Mesh size: 30 x 30
nu: 0.3
lambda: 0.32967
mu: 0.384615
Young modulus: 1
-----
Given horizontal traction on R: 0.3
nu target: -1
Volume fraction: 0.4
-----
Initial density: hard-coded
-----
IPOPT max iterations: 40
-----
Power law: 0
q: 3
qmax: 3
-----
Helmholtz filtering: 1
Helmholtz radius: 0.00015625
-----
Heaviside filtering: 0
-----
Mesh adaptivity: 0
-----
Sigmund filtering: 1
beta: 2
eta fixed: 0.45
-----
Main cycle max iterations: 12


*********************************************
case1_nonlinear.edp - Solution
*********************************************
  number of required edges : 0

IPOPT Note : No hessian given ==> LBFGS hessian approximation enabled

******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit http://projects.coin-or.org/Ipopt
******************************************************************************

This is Ipopt version 3.11.9, running with linear solver mumps.
NOTE: Other linear solvers might be more efficient (see Ipopt documentation).

Number of nonzeros in equality constraint Jacobian...:        0
Number of nonzeros in inequality constraint Jacobian.:      961
Number of nonzeros in Lagrangian Hessian.............:        0

*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0989439  max 0.0983949
Newton iteration 2
  -- Solve : 
          min -0.0306524  max 0.0235548
Newton iteration 3
  -- Solve : 
          min -0.00644463  max 0.00642139
Newton iteration 4
  -- Solve : 
          min -0.000633337  max 0.000608468
Newton iteration 5
  -- Solve : 
          min -3.36375e-06  max 1.94924e-06
Newton iteration 6
  -- Solve : 
          min -2.19082e-10  max 1.67798e-10
Newton iteration 7
  -- Solve : 
          min -5.90376e-17  max 5.0791e-17
POISSON'S RATIO = 0.0630629
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -17736.1  max 9.61752e+09
jj = 0
DUAL PROBLEM: done!
*********************************************
Total number of variables............................:      961
                     variables with only lower bounds:        0
                variables with lower and upper bounds:      961
                     variables with only upper bounds:        0
Total number of equality constraints.................:        0
Total number of inequality constraints...............:        1
        inequality constraints with only lower bounds:        0
   inequality constraints with lower and upper bounds:        1
        inequality constraints with only upper bounds:        0

*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0377571  max 0.0390588
Newton iteration 2
  -- Solve : 
          min -0.00833914  max 0.00853466
Newton iteration 3
  -- Solve : 
          min -0.000205509  max 0.000140709
Newton iteration 4
  -- Solve : 
          min -2.18148e-07  max 1.92932e-07
Newton iteration 5
  -- Solve : 
          min -2.62926e-13  max 5.24611e-14
POISSON'S RATIO = 0.0714909
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -2898.15  max 54672.8
jj = 1
DUAL PROBLEM: done!
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.10593e-17  max 8.70931e-17
POISSON'S RATIO = 0.0714909
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
   0  5.7404640e-01 5.23e-03 1.27e-01   0.0 0.00e+00    -  0.00e+00 0.00e+00   0
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0277762  max 0.028019
Newton iteration 2
  -- Solve : 
          min -0.00333383  max 0.00622747
Newton iteration 3
  -- Solve : 
          min -8.56872e-05  max 0.000527553
Newton iteration 4
  -- Solve : 
          min -1.11532e-06  max 4.63149e-06
Newton iteration 5
  -- Solve : 
          min -1.66912e-10  max 5.91516e-10
Newton iteration 6
  -- Solve : 
          min -5.01324e-17  max 5.9834e-17
POISSON'S RATIO = 0.0666841
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.51832e-17  max 4.24407e-17
POISSON'S RATIO = 0.0666841
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -1868.83  max 18780.1
jj = 2
DUAL PROBLEM: done!
*********************************************
   1  5.6890751e-01 6.31e-03 1.67e-01  -3.0 1.16e-01    -  1.00e+00 2.61e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0322383  max 0.0296716
Newton iteration 2
  -- Solve : 
          min -0.00598108  max 0.0052088
Newton iteration 3
  -- Solve : 
          min -0.000266749  max 0.000239865
Newton iteration 4
  -- Solve : 
          min -7.13583e-07  max 6.45615e-07
Newton iteration 5
  -- Solve : 
          min -5.00457e-12  max 4.6028e-12
Newton iteration 6
  -- Solve : 
          min -4.57848e-17  max 4.46626e-17
POISSON'S RATIO = 0.118479
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.27991e-17  max 1.69643e-17
POISSON'S RATIO = 0.118479
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -136.405  max 1556.75
jj = 3
DUAL PROBLEM: done!
*********************************************
   2  6.2549793e-01 0.00e+00 9.77e-02  -2.5 1.32e-01    -  7.88e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0384741  max 0.0355265
Newton iteration 2
  -- Solve : 
          min -0.00746827  max 0.00611747
Newton iteration 3
  -- Solve : 
          min -0.000626069  max 0.00118303
Newton iteration 4
  -- Solve : 
          min -2.67966e-05  max 8.02571e-05
Newton iteration 5
  -- Solve : 
          min -1.61353e-07  max 5.19188e-07
Newton iteration 6
  -- Solve : 
          min -5.54505e-12  max 1.57044e-11
Newton iteration 7
  -- Solve : 
          min -4.27085e-17  max 3.94996e-17
POISSON'S RATIO = 0.185925
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.12454e-17  max 2.6715e-17
POISSON'S RATIO = 0.185925
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -26.1361  max 274.419
jj = 4
DUAL PROBLEM: done!
*********************************************
   3  7.0320926e-01 0.00e+00 3.75e-02  -2.3 1.45e+00    -  7.54e-01 6.20e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0199896  max 0.0237099
Newton iteration 2
  -- Solve : 
          min -0.00247378  max 0.00200356
Newton iteration 3
  -- Solve : 
          min -5.41613e-05  max 5.26186e-05
Newton iteration 4
  -- Solve : 
          min -4.18777e-08  max 3.50756e-08
Newton iteration 5
  -- Solve : 
          min -2.47369e-14  max 1.48223e-14
POISSON'S RATIO = 0.227193
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.00705e-17  max 4.41532e-17
POISSON'S RATIO = 0.227193
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.1214  max 129.954
jj = 5
DUAL PROBLEM: done!
*********************************************
   4  7.5300181e-01 0.00e+00 2.31e-02  -2.5 3.54e-01    -  9.36e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0602461  max 0.0430576
Newton iteration 2
  -- Solve : 
          min -0.00472394  max 0.00437576
Newton iteration 3
  -- Solve : 
          min -6.86923e-05  max 7.57451e-05
Newton iteration 4
  -- Solve : 
          min -1.45131e-07  max 7.6751e-08
Newton iteration 5
  -- Solve : 
          min -5.98762e-13  max 3.16792e-13
POISSON'S RATIO = 0.101678
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.00575e-17  max 3.58284e-17
POISSON'S RATIO = 0.101678
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -14.9563  max 153.763
jj = 6
DUAL PROBLEM: done!
*********************************************
   5  6.0684770e-01 0.00e+00 2.06e-02  -3.8 1.54e-01    -  8.54e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0642364  max 0.046289
Newton iteration 2
  -- Solve : 
          min -0.00942993  max 0.0197605
Newton iteration 3
  -- Solve : 
          min -0.00108773  max 0.00122046
Newton iteration 4
  -- Solve : 
          min -4.04086e-05  max 5.74154e-05
Newton iteration 5
  -- Solve : 
          min -5.98163e-08  max 1.47939e-07
Newton iteration 6
  -- Solve : 
          min -1.47496e-13  max 1.12923e-12
POISSON'S RATIO = 0.00832609
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.16707e-17  max 6.7198e-17
POISSON'S RATIO = 0.00832609
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -24.596  max 7865.33
jj = 7
DUAL PROBLEM: done!
*********************************************
   6  5.0836075e-01 0.00e+00 2.55e-02  -3.7 2.73e-01    -  9.85e-01 8.19e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0174872  max 0.0219725
Newton iteration 2
  -- Solve : 
          min -0.00224984  max 0.00394532
Newton iteration 3
  -- Solve : 
          min -6.16246e-05  max 5.02857e-05
Newton iteration 4
  -- Solve : 
          min -1.15184e-07  max 4.57404e-08
Newton iteration 5
  -- Solve : 
          min -3.20184e-13  max 8.21674e-14
POISSON'S RATIO = 0.0252423
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.20618e-17  max 3.6598e-17
POISSON'S RATIO = 0.0252423
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -24.5201  max 697.789
jj = 8
DUAL PROBLEM: done!
*********************************************
   7  5.2556092e-01 0.00e+00 1.86e-02  -3.4 8.36e-02    -  9.48e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0233565  max 0.0271809
Newton iteration 2
  -- Solve : 
          min -0.00117198  max 0.00296304
Newton iteration 3
  -- Solve : 
          min -8.32504e-05  max 0.000255178
Newton iteration 4
  -- Solve : 
          min -5.42882e-07  max 1.57971e-06
Newton iteration 5
  -- Solve : 
          min -2.30427e-11  max 6.70886e-11
Newton iteration 6
  -- Solve : 
          min -5.16813e-17  max 3.72783e-17
POISSON'S RATIO = 0.0288306
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.86134e-16  max 1.4201e-15
POISSON'S RATIO = 0.0288306
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.59533e-17  max 9.81153e-17
POISSON'S RATIO = 0.0288306
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0148326  max 0.0112867
Newton iteration 2
  -- Solve : 
          min -0.000891571  max 0.000895007
Newton iteration 3
  -- Solve : 
          min -1.29743e-05  max 2.17813e-05
Newton iteration 4
  -- Solve : 
          min -5.41255e-09  max 1.04428e-08
Newton iteration 5
  -- Solve : 
          min -1.35681e-15  max 2.93376e-15
POISSON'S RATIO = 0.0260733
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00617082  max 0.00522828
Newton iteration 2
  -- Solve : 
          min -0.000292864  max 0.000329698
Newton iteration 3
  -- Solve : 
          min -1.70849e-06  max 2.56409e-06
Newton iteration 4
  -- Solve : 
          min -1.08139e-10  max 1.92071e-10
Newton iteration 5
  -- Solve : 
          min -3.13662e-17  max 4.5803e-17
POISSON'S RATIO = 0.0253136
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.93776e-17  max 3.02325e-17
POISSON'S RATIO = 0.0253136
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -20.9144  max 461.124
jj = 9
DUAL PROBLEM: done!
*********************************************
   8  5.2563394e-01 0.00e+00 3.01e-02  -3.5 1.46e-01    -  1.00e+00 1.62e-01f  3
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00797221  max 0.00322372
Newton iteration 2
  -- Solve : 
          min -0.000176787  max 0.000352787
Newton iteration 3
  -- Solve : 
          min -4.92221e-07  max 8.74478e-07
Newton iteration 4
  -- Solve : 
          min -7.02888e-12  max 1.15358e-11
Newton iteration 5
  -- Solve : 
          min -3.30456e-17  max 3.07806e-17
POISSON'S RATIO = 0.0248358
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.17941e-17  max 2.90809e-17
POISSON'S RATIO = 0.0248358
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -23.3301  max 978.889
jj = 10
DUAL PROBLEM: done!
*********************************************
   9  5.2514417e-01 0.00e+00 1.22e-02  -3.5 1.75e-02    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0392997  max 0.00888627
Newton iteration 2
  -- Solve : 
          min -0.00216958  max 0.00578136
Newton iteration 3
  -- Solve : 
          min -4.13123e-05  max 0.00015902
Newton iteration 4
  -- Solve : 
          min -3.87722e-08  max 2.67535e-07
Newton iteration 5
  -- Solve : 
          min -8.0611e-14  max 1.1549e-12
POISSON'S RATIO = 0.0216907
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.67604e-17  max 3.83697e-17
POISSON'S RATIO = 0.0216907
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -24.4734  max 4431.84
jj = 11
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  10  5.2192590e-01 0.00e+00 6.54e-02  -3.5 7.89e-02    -  1.00e+00 9.47e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00889514  max 0.0163654
Newton iteration 2
  -- Solve : 
          min -0.00273539  max 0.000838501
Newton iteration 3
  -- Solve : 
          min -4.91867e-05  max 1.50147e-05
Newton iteration 4
  -- Solve : 
          min -2.88313e-08  max 4.61132e-09
Newton iteration 5
  -- Solve : 
          min -9.96891e-15  max 1.09669e-15
POISSON'S RATIO = 0.0179093
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.49616e-17  max 4.55123e-17
POISSON'S RATIO = 0.0179093
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -11.4488  max 1017.53
jj = 12
DUAL PROBLEM: done!
*********************************************
  11  5.1806969e-01 0.00e+00 4.27e-02  -3.5 3.73e-01    -  9.85e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.011909  max 0.00379558
Newton iteration 2
  -- Solve : 
          min -0.00139133  max 0.000459364
Newton iteration 3
  -- Solve : 
          min -2.95891e-05  max 8.70646e-06
Newton iteration 4
  -- Solve : 
          min -1.48469e-08  max 4.38977e-09
Newton iteration 5
  -- Solve : 
          min -4.12691e-15  max 1.64108e-15
POISSON'S RATIO = 0.0176577
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.2748e-17  max 2.00508e-17
POISSON'S RATIO = 0.0176577
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -12.146  max 1479.05
jj = 13
DUAL PROBLEM: done!
*********************************************
  12  5.1781361e-01 0.00e+00 2.97e-02  -3.5 2.75e-01    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0197044  max 0.00695406
Newton iteration 2
  -- Solve : 
          min -0.000902462  max 0.000239729
Newton iteration 3
  -- Solve : 
          min -2.38431e-06  max 1.00932e-06
Newton iteration 4
  -- Solve : 
          min -1.36188e-10  max 1.31101e-11
Newton iteration 5
  -- Solve : 
          min -3.44199e-17  max 5.78652e-17
POISSON'S RATIO = 0.0183398
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.1446e-17  max 2.00801e-17
POISSON'S RATIO = 0.0183398
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -13.2248  max 5202.67
jj = 14
DUAL PROBLEM: done!
*********************************************
  13  5.1850795e-01 0.00e+00 8.65e-02  -3.5 1.01e-01    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0115245  max 0.0202642
Newton iteration 2
  -- Solve : 
          min -0.00139035  max 0.000528416
Newton iteration 3
  -- Solve : 
          min -6.36433e-06  max 1.80925e-06
Newton iteration 4
  -- Solve : 
          min -6.16123e-10  max 1.58981e-10
Newton iteration 5
  -- Solve : 
          min -2.71196e-17  max 5.73e-17
POISSON'S RATIO = 0.0178338
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.58712e-17  max 2.12458e-17
POISSON'S RATIO = 0.0178338
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -11.7401  max 3744.21
jj = 15
DUAL PROBLEM: done!
*********************************************
  14  5.1799285e-01 0.00e+00 4.64e-02  -3.5 1.31e-01    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0142813  max 0.019265
Newton iteration 2
  -- Solve : 
          min -0.00160855  max 0.00135458
Newton iteration 3
  -- Solve : 
          min -2.2474e-05  max 4.79443e-06
Newton iteration 4
  -- Solve : 
          min -1.99328e-08  max 1.62455e-09
Newton iteration 5
  -- Solve : 
          min -1.48184e-14  max 1.21527e-15
POISSON'S RATIO = 0.0161143
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.011301  max 0.0103006
Newton iteration 2
  -- Solve : 
          min -0.000981045  max 0.000452229
Newton iteration 3
  -- Solve : 
          min -1.26957e-06  max 3.02052e-07
Newton iteration 4
  -- Solve : 
          min -3.30535e-12  max 8.09551e-13
Newton iteration 5
  -- Solve : 
          min -4.19976e-17  max 3.33635e-17
POISSON'S RATIO = 0.0166951
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.48451e-17  max 2.64111e-17
POISSON'S RATIO = 0.0166951
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.2242  max 7030.17
jj = 16
DUAL PROBLEM: done!
*********************************************
  15  5.1683448e-01 0.00e+00 1.25e-01  -3.5 1.15e-01    -  1.00e+00 1.95e-01f  2
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00806336  max 0.0220658
Newton iteration 2
  -- Solve : 
          min -0.000527435  max 0.00122216
Newton iteration 3
  -- Solve : 
          min -4.36063e-06  max 4.21139e-06
Newton iteration 4
  -- Solve : 
          min -2.72899e-10  max 5.83722e-10
Newton iteration 5
  -- Solve : 
          min -2.93181e-17  max 4.06256e-17
POISSON'S RATIO = 0.0120334
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.25504e-17  max 2.50342e-17
POISSON'S RATIO = 0.0120334
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -11.1249  max 4088.49
jj = 17
DUAL PROBLEM: done!
*********************************************
  16  5.1210582e-01 0.00e+00 8.72e-02  -3.5 8.42e-02    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0150435  max 0.0339002
Newton iteration 2
  -- Solve : 
          min -0.00184763  max 0.00408646
Newton iteration 3
  -- Solve : 
          min -7.16251e-05  max 6.9999e-05
Newton iteration 4
  -- Solve : 
          min -3.74254e-08  max 2.4732e-08
Newton iteration 5
  -- Solve : 
          min -1.73522e-14  max 1.26815e-14
POISSON'S RATIO = -0.00653472
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.63761e-17  max 3.93685e-17
POISSON'S RATIO = -0.00653472
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -15.9077  max 3711.92
jj = 18
DUAL PROBLEM: done!
*********************************************
  17  4.9348663e-01 0.00e+00 9.45e-02  -3.5 1.91e-01    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0151961  max 0.0398602
Newton iteration 2
  -- Solve : 
          min -0.003936  max 0.0039735
Newton iteration 3
  -- Solve : 
          min -0.000188308  max 0.000136228
Newton iteration 4
  -- Solve : 
          min -4.16539e-07  max 3.02481e-07
Newton iteration 5
  -- Solve : 
          min -1.9002e-12  max 1.2899e-12
Newton iteration 6
  -- Solve : 
          min -4.35e-17  max 4.9072e-17
POISSON'S RATIO = -0.0407097
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.79133e-17  max 2.41977e-17
POISSON'S RATIO = -0.0407097
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -18.2613  max 2911.39
jj = 19
DUAL PROBLEM: done!
*********************************************
  18  4.6011895e-01 0.00e+00 6.32e-02  -3.6 3.07e-01    -  9.94e-01 5.31e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00605348  max 0.0166707
Newton iteration 2
  -- Solve : 
          min -0.00151543  max 0.00298766
Newton iteration 3
  -- Solve : 
          min -2.691e-06  max 2.76167e-05
Newton iteration 4
  -- Solve : 
          min -8.79498e-10  max 3.93319e-09
Newton iteration 5
  -- Solve : 
          min -7.62298e-17  max 3.99529e-16
POISSON'S RATIO = -0.0340988
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.79295e-17  max 2.66332e-17
POISSON'S RATIO = -0.0340988
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -15.9534  max 353.249
jj = 20
DUAL PROBLEM: done!
*********************************************
  19  4.6648260e-01 0.00e+00 7.39e-02  -3.2 8.66e-02    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0101552  max 0.0264666
Newton iteration 2
  -- Solve : 
          min -0.000926624  max 0.00393703
Newton iteration 3
  -- Solve : 
          min -2.56889e-05  max 3.7142e-05
Newton iteration 4
  -- Solve : 
          min -8.77729e-09  max 1.1735e-08
Newton iteration 5
  -- Solve : 
          min -1.01624e-15  max 1.37945e-15
POISSON'S RATIO = -0.0385321
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.66001e-17  max 8.46229e-17
POISSON'S RATIO = -0.0385321
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -12.9621  max 24329.1
jj = 21
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  20  4.6221030e-01 0.00e+00 5.70e-02  -3.3 3.70e-02    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0157044  max 0.0773485
Newton iteration 2
  -- Solve : 
          min -0.00610895  max 0.0127239
Newton iteration 3
  -- Solve : 
          min -0.000891201  max 0.00161586
Newton iteration 4
  -- Solve : 
          min -1.97145e-05  max 2.21666e-05
Newton iteration 5
  -- Solve : 
          min -8.66154e-09  max 6.34717e-09
Newton iteration 6
  -- Solve : 
          min -2.14717e-15  max 1.43829e-15
POISSON'S RATIO = -0.0533811
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.19902e-17  max 7.04116e-17
POISSON'S RATIO = -0.0533811
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -7.02282  max 1273.98
jj = 22
DUAL PROBLEM: done!
*********************************************
  21  4.4804366e-01 0.00e+00 1.97e-02  -3.3 1.36e-01    -  1.00e+00 9.37e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0188613  max 0.0361547
Newton iteration 2
  -- Solve : 
          min -0.00543851  max 0.00903503
Newton iteration 3
  -- Solve : 
          min -0.00118893  max 0.00134081
Newton iteration 4
  -- Solve : 
          min -3.64732e-05  max 3.03014e-05
Newton iteration 5
  -- Solve : 
          min -2.61582e-08  max 1.72291e-08
Newton iteration 6
  -- Solve : 
          min -1.15404e-14  max 6.50555e-15
POISSON'S RATIO = -0.0729237
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.17548e-17  max 3.34664e-17
POISSON'S RATIO = -0.0729237
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -4.14919  max 387.593
jj = 23
DUAL PROBLEM: done!
*********************************************
  22  4.2973520e-01 0.00e+00 6.77e-02  -3.5 1.98e-01    -  8.18e-01 4.89e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0587096  max 0.0637538
Newton iteration 2
  -- Solve : 
          min -0.00744594  max 0.0128507
Newton iteration 3
  -- Solve : 
          min -0.000853042  max 0.00249574
Newton iteration 4
  -- Solve : 
          min -0.000112936  max 0.000349325
Newton iteration 5
  -- Solve : 
          min -1.38819e-06  max 4.63082e-06
Newton iteration 6
  -- Solve : 
          min -2.5018e-10  max 8.49052e-10
Newton iteration 7
  -- Solve : 
          min -8.02505e-17  max 7.58505e-17
POISSON'S RATIO = -0.128179
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.53709e-17  max 3.4612e-17
POISSON'S RATIO = -0.128179
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -5.53854  max 104.734
jj = 24
DUAL PROBLEM: done!
*********************************************
  23  3.8003617e-01 0.00e+00 1.35e-01  -3.7 4.66e-01    -  9.27e-01 5.53e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0699071  max 0.0660131
Newton iteration 2
  -- Solve : 
          min -0.0378353  max 0.00532206
Newton iteration 3
  -- Solve : 
          min -0.0190636  max 0.00598258
Newton iteration 4
  -- Solve : 
          min -0.00752382  max 0.00182741
Newton iteration 5
  -- Solve : 
          min -0.00109646  max 0.000165752
Newton iteration 6
  -- Solve : 
          min -2.14271e-05  max 3.50679e-06
Newton iteration 7
  -- Solve : 
          min -8.31004e-09  max 1.75702e-09
Newton iteration 8
  -- Solve : 
          min -1.33258e-15  max 3.64492e-16
POISSON'S RATIO = -0.0972683
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.12953e-17  max 8.07116e-17
POISSON'S RATIO = -0.0972683
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -8.46321  max 156.501
jj = 25
DUAL PROBLEM: done!
*********************************************
  24  4.0746223e-01 0.00e+00 1.90e-01  -3.3 2.91e-01    -  1.00e+00 8.78e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0150362  max 0.0282654
Newton iteration 2
  -- Solve : 
          min -0.00404691  max 0.000468596
Newton iteration 3
  -- Solve : 
          min -8.75934e-05  max 3.03404e-05
Newton iteration 4
  -- Solve : 
          min -3.60001e-08  max 4.57444e-08
Newton iteration 5
  -- Solve : 
          min -4.47409e-15  max 8.84269e-14
POISSON'S RATIO = -0.110396
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.74365e-17  max 1.21979e-16
POISSON'S RATIO = -0.110396
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -8.99255  max 316.794
jj = 26
DUAL PROBLEM: done!
*********************************************
  25  3.9569746e-01 0.00e+00 1.89e-01  -3.4 2.07e-01    -  9.26e-01 2.65e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0165748  max 0.0411293
Newton iteration 2
  -- Solve : 
          min -0.00622408  max 0.00188872
Newton iteration 3
  -- Solve : 
          min -5.7116e-05  max 0.000130478
Newton iteration 4
  -- Solve : 
          min -3.43854e-07  max 7.60355e-07
Newton iteration 5
  -- Solve : 
          min -9.68127e-12  max 1.8499e-11
Newton iteration 6
  -- Solve : 
          min -5.85493e-17  max 7.87152e-17
POISSON'S RATIO = -0.131318
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.43448e-17  max 2.94497e-17
POISSON'S RATIO = -0.131318
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -8.11934  max 2298.75
jj = 27
DUAL PROBLEM: done!
*********************************************
  26  3.7730439e-01 0.00e+00 1.61e-01  -3.4 1.64e-01    -  1.00e+00 3.23e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0329194  max 0.0501371
Newton iteration 2
  -- Solve : 
          min -0.0042484  max 0.00526757
Newton iteration 3
  -- Solve : 
          min -0.000156891  max 0.000272273
Newton iteration 4
  -- Solve : 
          min -1.95981e-07  max 5.29212e-07
Newton iteration 5
  -- Solve : 
          min -4.04449e-13  max 5.38737e-12
Newton iteration 6
  -- Solve : 
          min -1.01062e-16  max 6.44392e-17
POISSON'S RATIO = -0.166127
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.32679e-17  max 4.69348e-17
POISSON'S RATIO = -0.166127
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -5.05346  max 5236.23
jj = 28
DUAL PROBLEM: done!
*********************************************
  27  3.4767209e-01 0.00e+00 3.93e-02  -3.9 1.85e-01    -  1.00e+00 3.79e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0610168  max 0.025759
Newton iteration 2
  -- Solve : 
          min -0.0106185  max 0.00224517
Newton iteration 3
  -- Solve : 
          min -0.000315282  max 0.000124615
Newton iteration 4
  -- Solve : 
          min -4.0363e-07  max 4.31093e-07
Newton iteration 5
  -- Solve : 
          min -8.47408e-12  max 7.12085e-12
Newton iteration 6
  -- Solve : 
          min -7.95711e-17  max 7.49086e-17
POISSON'S RATIO = -0.179219
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.82745e-17  max 5.03714e-17
POISSON'S RATIO = -0.179219
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -6.26846  max 1107.31
jj = 29
DUAL PROBLEM: done!
*********************************************
  28  3.3684101e-01 0.00e+00 3.38e-02  -3.4 9.44e-02    -  8.66e-01 9.48e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.120265  max 0.0560832
Newton iteration 2
  -- Solve : 
          min -0.0700549  max 0.0120411
Newton iteration 3
  -- Solve : 
          min -0.0115778  max 0.00127664
Newton iteration 4
  -- Solve : 
          min -0.000778832  max 8.69365e-05
Newton iteration 5
  -- Solve : 
          min -4.0341e-06  max 1.32033e-06
Newton iteration 6
  -- Solve : 
          min -1.87822e-10  max 8.42165e-11
Newton iteration 7
  -- Solve : 
          min -6.55966e-17  max 6.87172e-17
POISSON'S RATIO = -0.126432
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.027125  max 0.0723589
Newton iteration 2
  -- Solve : 
          min -0.00274181  max 0.00503506
Newton iteration 3
  -- Solve : 
          min -0.000162856  max 0.000794489
Newton iteration 4
  -- Solve : 
          min -1.74209e-06  max 1.26577e-05
Newton iteration 5
  -- Solve : 
          min -6.03818e-10  max 3.33666e-09
Newton iteration 6
  -- Solve : 
          min -8.95128e-17  max 2.51236e-16
POISSON'S RATIO = -0.158363
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.48566e-17  max 3.01311e-17
POISSON'S RATIO = -0.158363
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.0649  max 89.1436
jj = 30
DUAL PROBLEM: done!
*********************************************
  29  3.5417646e-01 0.00e+00 2.07e-01  -3.2 1.03e+00    -  7.50e-01 2.36e-01f  2
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0186541  max 0.0500898
Newton iteration 2
  -- Solve : 
          min -0.00496896  max 0.0122116
Newton iteration 3
  -- Solve : 
          min -0.000181328  max 0.00317701
Newton iteration 4
  -- Solve : 
          min -8.39486e-06  max 0.000247221
Newton iteration 5
  -- Solve : 
          min -5.44927e-08  max 1.99022e-06
Newton iteration 6
  -- Solve : 
          min -4.83593e-12  max 1.4689e-10
Newton iteration 7
  -- Solve : 
          min -7.41621e-17  max 6.94216e-17
POISSON'S RATIO = -0.165919
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.10651e-17  max 4.26715e-17
POISSON'S RATIO = -0.165919
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -12.9607  max 238.311
jj = 31
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  30  3.4784588e-01 0.00e+00 1.54e-01  -3.4 2.07e-01    -  6.77e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0338692  max 0.0325459
Newton iteration 2
  -- Solve : 
          min -0.0013333  max 0.00292117
Newton iteration 3
  -- Solve : 
          min -3.86494e-05  max 0.00012588
Newton iteration 4
  -- Solve : 
          min -3.80182e-08  max 6.34888e-07
Newton iteration 5
  -- Solve : 
          min -1.27763e-13  max 1.54747e-11
Newton iteration 6
  -- Solve : 
          min -9.71229e-17  max 6.79776e-17
POISSON'S RATIO = -0.186931
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.48303e-17  max 3.67347e-17
POISSON'S RATIO = -0.186931
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.926  max 1557.49
jj = 32
DUAL PROBLEM: done!
*********************************************
  31  3.3054095e-01 0.00e+00 1.53e-01  -3.4 3.57e-01    -  2.23e-01 2.64e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0453914  max 0.0571056
Newton iteration 2
  -- Solve : 
          min -0.00558656  max 0.0133778
Newton iteration 3
  -- Solve : 
          min -0.000757387  max 0.0032158
Newton iteration 4
  -- Solve : 
          min -1.32952e-05  max 0.000274413
Newton iteration 5
  -- Solve : 
          min -6.62484e-08  max 2.13847e-06
Newton iteration 6
  -- Solve : 
          min -4.07094e-12  max 1.51455e-10
Newton iteration 7
  -- Solve : 
          min -9.60512e-17  max 9.29234e-17
POISSON'S RATIO = -0.231953
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.41681e-17  max 5.00451e-17
POISSON'S RATIO = -0.231953
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -9.20956  max 364.495
jj = 33
DUAL PROBLEM: done!
*********************************************
  32  2.9494835e-01 0.00e+00 1.44e-01  -3.7 2.72e-01    -  9.96e-01 4.60e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00998835  max 0.0201852
Newton iteration 2
  -- Solve : 
          min -0.000149085  max 0.00304505
Newton iteration 3
  -- Solve : 
          min -1.85705e-06  max 0.000237246
Newton iteration 4
  -- Solve : 
          min -1.01184e-08  max 1.60378e-06
Newton iteration 5
  -- Solve : 
          min -4.34768e-13  max 8.44756e-11
Newton iteration 6
  -- Solve : 
          min -7.21786e-17  max 9.8918e-17
POISSON'S RATIO = -0.232758
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.08481e-17  max 5.31062e-17
POISSON'S RATIO = -0.232758
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -9.01289  max 1623.05
jj = 34
DUAL PROBLEM: done!
*********************************************
  33  2.9432999e-01 0.00e+00 8.52e-02  -3.3 1.94e-01    -  1.00e+00 2.58e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00632791  max 0.0294069
Newton iteration 2
  -- Solve : 
          min -0.00132673  max 0.00198723
Newton iteration 3
  -- Solve : 
          min -1.76687e-05  max 7.82681e-05
Newton iteration 4
  -- Solve : 
          min -9.74507e-09  max 1.21794e-07
Newton iteration 5
  -- Solve : 
          min -6.03789e-15  max 2.96834e-13
POISSON'S RATIO = -0.238184
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -9.21169e-17  max 6.95538e-17
POISSON'S RATIO = -0.238184
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.6291  max 1596.63
jj = 35
DUAL PROBLEM: done!
*********************************************
  34  2.9018151e-01 0.00e+00 7.02e-02  -3.3 2.16e-01    -  9.14e-01 3.94e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0170178  max 0.0241404
Newton iteration 2
  -- Solve : 
          min -0.00134385  max 0.00394366
Newton iteration 3
  -- Solve : 
          min -1.56467e-05  max 0.000658767
Newton iteration 4
  -- Solve : 
          min -1.08534e-06  max 1.81203e-05
Newton iteration 5
  -- Solve : 
          min -1.09213e-09  max 1.40798e-08
Newton iteration 6
  -- Solve : 
          min -7.23938e-16  max 8.73659e-15
POISSON'S RATIO = -0.246464
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.11887e-16  max 2.97831e-17
POISSON'S RATIO = -0.246464
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -12.1623  max 47380.6
jj = 36
DUAL PROBLEM: done!
*********************************************
  35  2.8390817e-01 0.00e+00 1.12e-01  -3.3 4.10e-01    -  9.40e-01 3.14e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0289806  max 0.0372633
Newton iteration 2
  -- Solve : 
          min -0.00465512  max 0.00647742
Newton iteration 3
  -- Solve : 
          min -0.000159257  max 0.000373485
Newton iteration 4
  -- Solve : 
          min -6.16232e-07  max 2.1655e-06
Newton iteration 5
  -- Solve : 
          min -1.76878e-11  max 8.34483e-11
Newton iteration 6
  -- Solve : 
          min -1.88277e-16  max 9.47705e-17
POISSON'S RATIO = -0.29468
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.78443e-17  max 6.49629e-17
POISSON'S RATIO = -0.29468
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -15.7337  max 5262.5
jj = 37
DUAL PROBLEM: done!
*********************************************
  36  2.4873780e-01 0.00e+00 8.14e-02  -3.4 6.64e-01    -  8.89e-01 6.04e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0146709  max 0.0252904
Newton iteration 2
  -- Solve : 
          min -0.00097012  max 0.00132443
Newton iteration 3
  -- Solve : 
          min -2.1337e-05  max 1.4018e-05
Newton iteration 4
  -- Solve : 
          min -1.04178e-08  max 2.28679e-09
Newton iteration 5
  -- Solve : 
          min -2.73089e-15  max 2.02724e-16
POISSON'S RATIO = -0.319148
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.84391e-17  max 7.5873e-17
POISSON'S RATIO = -0.319148
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -18.124  max 2196.32
jj = 38
DUAL PROBLEM: done!
*********************************************
  37  2.3178005e-01 0.00e+00 9.97e-02  -3.4 5.32e-01    -  8.53e-01 4.74e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0196039  max 0.0243335
Newton iteration 2
  -- Solve : 
          min -0.00158362  max 0.00219415
Newton iteration 3
  -- Solve : 
          min -2.51534e-05  max 2.26716e-05
Newton iteration 4
  -- Solve : 
          min -7.81185e-09  max 8.7997e-09
Newton iteration 5
  -- Solve : 
          min -1.29612e-15  max 1.71216e-15
POISSON'S RATIO = -0.35311
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.18897e-16  max 6.83836e-17
POISSON'S RATIO = -0.35311
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -19.5203  max 1565.8
jj = 39
DUAL PROBLEM: done!
*********************************************
  38  2.0923353e-01 0.00e+00 1.16e-01  -3.4 4.24e-01    -  9.49e-01 6.59e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0289078  max 0.0400804
Newton iteration 2
  -- Solve : 
          min -0.00169669  max 0.00399049
Newton iteration 3
  -- Solve : 
          min -2.47123e-05  max 0.000130444
Newton iteration 4
  -- Solve : 
          min -3.28673e-08  max 1.52659e-07
Newton iteration 5
  -- Solve : 
          min -5.62861e-14  max 2.04994e-13
POISSON'S RATIO = -0.399242
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.34439e-16  max 6.7487e-17
POISSON'S RATIO = -0.399242
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -16.6501  max 1692.79
jj = 40
DUAL PROBLEM: done!
*********************************************
  39  1.8045489e-01 0.00e+00 2.77e-02  -3.7 6.54e-01    -  6.86e-01 3.39e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0256408  max 0.0258456
Newton iteration 2
  -- Solve : 
          min -0.00102041  max 0.0014124
Newton iteration 3
  -- Solve : 
          min -1.07284e-05  max 1.70481e-05
Newton iteration 4
  -- Solve : 
          min -2.11757e-09  max 3.18294e-09
Newton iteration 5
  -- Solve : 
          min -3.43119e-16  max 4.598e-16
POISSON'S RATIO = -0.430014
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.30761e-17  max 1.47894e-16
POISSON'S RATIO = -0.430014
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -16.5483  max 1426.82
jj = 41
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  40  1.6244192e-01 0.00e+00 2.80e-02  -3.9 7.89e-01    -  7.46e-01 3.35e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0134827  max 0.0266109
Newton iteration 2
  -- Solve : 
          min -0.00863354  max 0.00576747
Newton iteration 3
  -- Solve : 
          min -0.0029258  max 0.000831916
Newton iteration 4
  -- Solve : 
          min -0.000307187  max 5.50116e-05
Newton iteration 5
  -- Solve : 
          min -3.29467e-06  max 4.51095e-07
Newton iteration 6
  -- Solve : 
          min -3.88528e-10  max 6.77656e-11
Newton iteration 7
  -- Solve : 
          min -1.69491e-16  max 1.37942e-16
POISSON'S RATIO = -0.433548
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.97487e-17  max 6.59975e-17
POISSON'S RATIO = -0.433548
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -20.0449  max 388.552
jj = 42
DUAL PROBLEM: done!
*********************************************
  41  1.6043420e-01 0.00e+00 6.71e-02  -3.5 9.20e-01    -  9.39e-01 4.59e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.011265  max 0.0269088
Newton iteration 2
  -- Solve : 
          min -0.00506815  max 0.00493458
Newton iteration 3
  -- Solve : 
          min -0.000231129  max 0.000324641
Newton iteration 4
  -- Solve : 
          min -8.02769e-07  max 1.12734e-06
Newton iteration 5
  -- Solve : 
          min -8.75143e-12  max 1.47402e-11
Newton iteration 6
  -- Solve : 
          min -8.02311e-17  max 1.26023e-16
POISSON'S RATIO = -0.456203
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -9.8749e-17  max 3.26608e-17
POISSON'S RATIO = -0.456203
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -30.3567  max 786.047
jj = 43
DUAL PROBLEM: done!
*********************************************
  42  1.4785738e-01 0.00e+00 4.26e-02  -3.5 6.11e-01    -  7.39e-01 5.08e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0229762  max 0.0418638
Newton iteration 2
  -- Solve : 
          min -0.00425195  max 0.00415732
Newton iteration 3
  -- Solve : 
          min -0.000250397  max 0.000235083
Newton iteration 4
  -- Solve : 
          min -1.33699e-06  max 7.23627e-07
Newton iteration 5
  -- Solve : 
          min -8.42111e-11  max 3.95397e-11
Newton iteration 6
  -- Solve : 
          min -1.40742e-16  max 1.17599e-16
POISSON'S RATIO = -0.49671
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -9.15696e-17  max 4.12628e-17
POISSON'S RATIO = -0.49671
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -35.882  max 322.486
jj = 44
DUAL PROBLEM: done!
*********************************************
  43  1.2665035e-01 0.00e+00 7.60e-02  -3.7 4.72e-01    -  7.77e-01 5.44e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0163166  max 0.0102172
Newton iteration 2
  -- Solve : 
          min -0.000368992  max 0.000713205
Newton iteration 3
  -- Solve : 
          min -3.11518e-06  max 2.8676e-05
Newton iteration 4
  -- Solve : 
          min -3.8437e-09  max 3.36089e-08
Newton iteration 5
  -- Solve : 
          min -5.47281e-15  max 4.84121e-14
POISSON'S RATIO = -0.495405
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.4305e-16  max 8.94189e-17
POISSON'S RATIO = -0.495405
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -36.3194  max 3112.32
jj = 45
DUAL PROBLEM: done!
*********************************************
  44  1.2730799e-01 0.00e+00 4.26e-02  -3.4 6.03e-01    -  5.55e-01 1.65e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00848163  max 0.0236644
Newton iteration 2
  -- Solve : 
          min -0.00326562  max 0.00213873
Newton iteration 3
  -- Solve : 
          min -0.000127382  max 4.90866e-05
Newton iteration 4
  -- Solve : 
          min -4.11395e-07  max 1.59282e-07
Newton iteration 5
  -- Solve : 
          min -5.84245e-12  max 2.19009e-12
Newton iteration 6
  -- Solve : 
          min -1.88809e-16  max 6.50205e-17
POISSON'S RATIO = -0.511825
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.23199e-16  max 4.14946e-17
POISSON'S RATIO = -0.511825
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -40.5885  max 4002.94
jj = 46
DUAL PROBLEM: done!
*********************************************
  45  1.1915719e-01 0.00e+00 5.21e-02  -3.6 5.47e-01    -  7.86e-01 5.29e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0194672  max 0.0352642
Newton iteration 2
  -- Solve : 
          min -0.00875778  max 0.0165985
Newton iteration 3
  -- Solve : 
          min -0.00177577  max 0.00543987
Newton iteration 4
  -- Solve : 
          min -0.000258073  max 0.000808357
Newton iteration 5
  -- Solve : 
          min -4.5915e-06  max 1.57877e-05
Newton iteration 6
  -- Solve : 
          min -1.46903e-09  max 5.7938e-09
Newton iteration 7
  -- Solve : 
          min -1.88858e-16  max 7.84753e-16
POISSON'S RATIO = -0.503929
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.2744e-17  max 7.31539e-17
POISSON'S RATIO = -0.503929
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -41.0373  max 2109.81
jj = 47
DUAL PROBLEM: done!
*********************************************
  46  1.2304310e-01 0.00e+00 4.52e-02  -3.3 2.79e+00    -  6.57e-01 2.04e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0207877  max 0.0188158
Newton iteration 2
  -- Solve : 
          min -0.00569608  max 0.00297707
Newton iteration 3
  -- Solve : 
          min -0.000658486  max 0.000235729
Newton iteration 4
  -- Solve : 
          min -5.78303e-06  max 7.3475e-07
Newton iteration 5
  -- Solve : 
          min -6.33648e-10  max 8.67165e-11
Newton iteration 6
  -- Solve : 
          min -5.9676e-17  max 1.43014e-16
POISSON'S RATIO = -0.513381
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.96439e-17  max 6.6602e-17
POISSON'S RATIO = -0.513381
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -45.3875  max 665.828
jj = 48
DUAL PROBLEM: done!
*********************************************
  47  1.1839913e-01 0.00e+00 8.26e-02  -3.5 3.98e-01    -  8.91e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0359403  max 0.0485793
Newton iteration 2
  -- Solve : 
          min -0.00870096  max 0.00421623
Newton iteration 3
  -- Solve : 
          min -0.00148607  max 0.00026431
Newton iteration 4
  -- Solve : 
          min -4.65631e-05  max 1.29925e-05
Newton iteration 5
  -- Solve : 
          min -5.06344e-08  max 1.75749e-08
Newton iteration 6
  -- Solve : 
          min -6.06231e-14  max 2.52959e-14
POISSON'S RATIO = -0.583471
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.99582e-17  max 1.36798e-16
POISSON'S RATIO = -0.583471
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -42.7652  max 1844.11
jj = 49
DUAL PROBLEM: done!
*********************************************
  48  8.6748148e-02 0.00e+00 4.67e-02  -3.7 4.59e-01    -  1.00e+00 8.39e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0321453  max 0.0311166
Newton iteration 2
  -- Solve : 
          min -0.00338136  max 0.00549406
Newton iteration 3
  -- Solve : 
          min -0.000306761  max 0.000484473
Newton iteration 4
  -- Solve : 
          min -2.08226e-06  max 3.17436e-06
Newton iteration 5
  -- Solve : 
          min -1.14329e-10  max 1.26414e-10
Newton iteration 6
  -- Solve : 
          min -9.35183e-17  max 1.1151e-16
POISSON'S RATIO = -0.566967
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.64642e-17  max 5.90963e-17
POISSON'S RATIO = -0.566967
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -29.4568  max 376.783
jj = 50
DUAL PROBLEM: done!
*********************************************
  49  9.3758894e-02 0.00e+00 4.73e-02  -3.4 2.51e-01    -  1.00e+00 6.47e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0141966  max 0.0427747
Newton iteration 2
  -- Solve : 
          min -0.00853242  max 0.00638184
Newton iteration 3
  -- Solve : 
          min -0.0039255  max 0.00166852
Newton iteration 4
  -- Solve : 
          min -0.000240672  max 9.37912e-05
Newton iteration 5
  -- Solve : 
          min -3.67369e-06  max 1.54128e-06
Newton iteration 6
  -- Solve : 
          min -2.27862e-10  max 8.72018e-11
Newton iteration 7
  -- Solve : 
          min -1.40441e-16  max 7.04314e-17
POISSON'S RATIO = -0.59644
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.76501e-17  max 1.02718e-16
POISSON'S RATIO = -0.59644
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -49.3799  max 252.42
jj = 51
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  50  8.1430355e-02 0.00e+00 6.80e-02  -3.5 4.81e-01    -  6.69e-01 7.30e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0149874  max 0.0220302
Newton iteration 2
  -- Solve : 
          min -0.00162972  max 0.00203246
Newton iteration 3
  -- Solve : 
          min -9.70255e-05  max 6.02669e-05
Newton iteration 4
  -- Solve : 
          min -2.6917e-07  max 1.30518e-07
Newton iteration 5
  -- Solve : 
          min -2.5509e-12  max 7.33415e-13
POISSON'S RATIO = -0.624322
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.40482e-16  max 1.00772e-16
POISSON'S RATIO = -0.624322
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -45.3991  max 3394.63
jj = 52
DUAL PROBLEM: done!
*********************************************
  51  7.0567007e-02 0.00e+00 4.17e-02  -3.5 8.32e-01    -  9.97e-01 4.04e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0737156  max 0.0264306
Newton iteration 2
  -- Solve : 
          min -0.00706481  max 0.00424662
Newton iteration 3
  -- Solve : 
          min -0.00133017  max 0.000577424
Newton iteration 4
  -- Solve : 
          min -2.46726e-05  max 8.46832e-06
Newton iteration 5
  -- Solve : 
          min -2.99062e-08  max 1.08342e-08
Newton iteration 6
  -- Solve : 
          min -1.8525e-14  max 5.98041e-15
POISSON'S RATIO = -0.536677
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.33222e-16  max 1.12006e-16
POISSON'S RATIO = -0.536677
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -46.5343  max 934.043
jj = 53
DUAL PROBLEM: done!
*********************************************
  52  1.0733428e-01 0.00e+00 1.01e-01  -3.2 5.59e-01    -  1.00e+00 8.46e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0284021  max 0.0373935
Newton iteration 2
  -- Solve : 
          min -0.00408663  max 0.00430766
Newton iteration 3
  -- Solve : 
          min -0.000425323  max 0.00078691
Newton iteration 4
  -- Solve : 
          min -7.40061e-06  max 1.07493e-05
Newton iteration 5
  -- Solve : 
          min -3.20814e-09  max 6.5528e-09
Newton iteration 6
  -- Solve : 
          min -7.65634e-16  max 1.28729e-15
POISSON'S RATIO = -0.61229
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.24914e-16  max 1.00794e-16
POISSON'S RATIO = -0.61229
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -34.1043  max 571.332
jj = 54
DUAL PROBLEM: done!
*********************************************
  53  7.5159523e-02 0.00e+00 3.65e-02  -3.3 2.64e-01    -  9.87e-01 8.70e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.023589  max 0.0294677
Newton iteration 2
  -- Solve : 
          min -0.0029287  max 0.00178987
Newton iteration 3
  -- Solve : 
          min -0.000224272  max 0.000148566
Newton iteration 4
  -- Solve : 
          min -1.24002e-06  max 8.10404e-07
Newton iteration 5
  -- Solve : 
          min -5.27618e-11  max 4.23957e-11
Newton iteration 6
  -- Solve : 
          min -9.01443e-17  max 9.61142e-17
POISSON'S RATIO = -0.658888
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.14333e-17  max 4.03893e-17
POISSON'S RATIO = -0.658888
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -36.1526  max 307.978
jj = 55
DUAL PROBLEM: done!
*********************************************
  54  5.8178854e-02 0.00e+00 6.09e-02  -3.3 3.42e-01    -  1.00e+00 7.05e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0496169  max 0.0285519
Newton iteration 2
  -- Solve : 
          min -0.00315145  max 0.0042533
Newton iteration 3
  -- Solve : 
          min -7.72687e-05  max 0.000136767
Newton iteration 4
  -- Solve : 
          min -5.15241e-07  max 3.75049e-07
Newton iteration 5
  -- Solve : 
          min -1.29392e-11  max 9.54192e-12
Newton iteration 6
  -- Solve : 
          min -1.1825e-16  max 7.95193e-17
POISSON'S RATIO = -0.589939
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.21271e-17  max 3.75703e-17
POISSON'S RATIO = -0.589939
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -48.0183  max 441.189
jj = 56
DUAL PROBLEM: done!
*********************************************
  55  8.4074859e-02 0.00e+00 7.88e-02  -3.1 6.05e-01    -  1.00e+00 5.66e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0209257  max 0.0170603
Newton iteration 2
  -- Solve : 
          min -0.00184296  max 0.000905774
Newton iteration 3
  -- Solve : 
          min -4.89943e-05  max 2.63721e-05
Newton iteration 4
  -- Solve : 
          min -3.88717e-08  max 1.68047e-08
Newton iteration 5
  -- Solve : 
          min -5.29937e-14  max 3.16365e-14
POISSON'S RATIO = -0.601073
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.9186e-17  max 1.56851e-16
POISSON'S RATIO = -0.601073
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -40.0843  max 212.389
jj = 57
DUAL PROBLEM: done!
*********************************************
  56  7.9571366e-02 0.00e+00 5.75e-02  -3.2 2.59e-01    -  1.00e+00 8.17e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.03336  max 0.0287439
Newton iteration 2
  -- Solve : 
          min -0.00602568  max 0.00536569
Newton iteration 3
  -- Solve : 
          min -0.000626379  max 0.000771703
Newton iteration 4
  -- Solve : 
          min -1.55585e-05  max 2.47474e-05
Newton iteration 5
  -- Solve : 
          min -8.11228e-09  max 2.43682e-08
Newton iteration 6
  -- Solve : 
          min -1.86928e-15  max 2.18322e-14
POISSON'S RATIO = -0.642303
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.37164e-17  max 7.03449e-17
POISSON'S RATIO = -0.642303
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -21.9721  max 245.522
jj = 58
DUAL PROBLEM: done!
*********************************************
  57  6.3973483e-02 0.00e+00 5.65e-02  -3.2 2.55e-01    -  7.81e-01 9.49e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0140297  max 0.0219815
Newton iteration 2
  -- Solve : 
          min -0.0067687  max 0.00344734
Newton iteration 3
  -- Solve : 
          min -0.00204001  max 0.000843886
Newton iteration 4
  -- Solve : 
          min -0.000134434  max 5.53429e-05
Newton iteration 5
  -- Solve : 
          min -5.31128e-07  max 2.4256e-07
Newton iteration 6
  -- Solve : 
          min -8.64468e-12  max 4.14466e-12
POISSON'S RATIO = -0.669043
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.4871e-17  max 1.31625e-16
POISSON'S RATIO = -0.669043
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -27.1299  max 192.953
jj = 59
DUAL PROBLEM: done!
*********************************************
  58  5.4766232e-02 0.00e+00 6.38e-02  -3.2 2.87e-01    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0226557  max 0.0397586
Newton iteration 2
  -- Solve : 
          min -0.00403848  max 0.00278955
Newton iteration 3
  -- Solve : 
          min -0.00032909  max 0.000640159
Newton iteration 4
  -- Solve : 
          min -5.31711e-06  max 8.49425e-06
Newton iteration 5
  -- Solve : 
          min -2.34743e-09  max 5.77281e-09
Newton iteration 6
  -- Solve : 
          min -4.84097e-16  max 8.30903e-16
POISSON'S RATIO = -0.743275
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.42699e-16  max 9.23437e-17
POISSON'S RATIO = -0.743275
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -22.676  max 235.338
jj = 60
DUAL PROBLEM: done!
*********************************************
  59  3.2953903e-02 0.00e+00 3.27e-02  -3.4 3.63e-01    -  9.99e-01 8.62e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0142598  max 0.0360045
Newton iteration 2
  -- Solve : 
          min -0.00524496  max 0.00480235
Newton iteration 3
  -- Solve : 
          min -0.000611516  max 0.000499874
Newton iteration 4
  -- Solve : 
          min -8.13301e-06  max 5.37884e-06
Newton iteration 5
  -- Solve : 
          min -1.39272e-09  max 6.22029e-10
Newton iteration 6
  -- Solve : 
          min -1.30385e-16  max 1.6644e-16
POISSON'S RATIO = -0.808334
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.71152e-17  max 1.22195e-16
POISSON'S RATIO = -0.808334
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -22.3153  max 124.863
jj = 61
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  60  1.8367913e-02 0.00e+00 4.31e-02  -3.5 3.19e-01    -  9.95e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0153399  max 0.0254114
Newton iteration 2
  -- Solve : 
          min -0.00143183  max 0.00194498
Newton iteration 3
  -- Solve : 
          min -6.40748e-05  max 0.000160117
Newton iteration 4
  -- Solve : 
          min -2.20133e-07  max 1.24492e-06
Newton iteration 5
  -- Solve : 
          min -3.86234e-12  max 7.21409e-11
Newton iteration 6
  -- Solve : 
          min -9.30714e-17  max 1.36959e-16
POISSON'S RATIO = -0.850715
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.81953e-17  max 6.11795e-17
POISSON'S RATIO = -0.850715
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -16.3661  max 205.531
jj = 62
DUAL PROBLEM: done!
*********************************************
  61  1.1143070e-02 0.00e+00 3.54e-02  -3.7 7.49e-01    -  9.99e-01 4.18e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0176291  max 0.0342157
Newton iteration 2
  -- Solve : 
          min -0.00366795  max 0.00378138
Newton iteration 3
  -- Solve : 
          min -0.000377525  max 0.000371011
Newton iteration 4
  -- Solve : 
          min -1.57947e-05  max 7.93776e-06
Newton iteration 5
  -- Solve : 
          min -2.88791e-08  max 1.12575e-08
Newton iteration 6
  -- Solve : 
          min -7.9582e-14  max 2.84e-14
POISSON'S RATIO = -0.906904
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.17946e-16  max 1.12734e-16
POISSON'S RATIO = -0.906904
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.9612  max 95.4752
jj = 63
DUAL PROBLEM: done!
*********************************************
  62  4.3334100e-03 0.00e+00 3.72e-02  -3.9 4.42e-01    -  1.00e+00 7.54e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00947495  max 0.0188723
Newton iteration 2
  -- Solve : 
          min -0.000973056  max 0.00110933
Newton iteration 3
  -- Solve : 
          min -4.61453e-05  max 8.91924e-05
Newton iteration 4
  -- Solve : 
          min -3.02229e-07  max 1.5479e-07
Newton iteration 5
  -- Solve : 
          min -1.13138e-11  max 5.85239e-12
Newton iteration 6
  -- Solve : 
          min -2.53472e-16  max 2.63365e-16
POISSON'S RATIO = -0.940375
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.80965e-17  max 2.02232e-16
POISSON'S RATIO = -0.940375
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -8.64119  max 168.965
jj = 64
DUAL PROBLEM: done!
*********************************************
  63  1.7775429e-03 0.00e+00 2.22e-02  -4.0 5.25e-01    -  9.97e-01 5.06e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0170421  max 0.0198346
Newton iteration 2
  -- Solve : 
          min -0.0051649  max 0.00329346
Newton iteration 3
  -- Solve : 
          min -0.00826681  max 0.00792991
Newton iteration 4
  -- Solve : 
          min -0.00319431  max 0.00371556
Newton iteration 5
  -- Solve : 
          min -0.0130493  max 0.0123265
Newton iteration 6
  -- Solve : 
          min -0.00151245  max 0.00656791
Newton iteration 7
  -- Solve : 
          min -0.00159796  max 0.000892499
Newton iteration 8
  -- Solve : 
          min -0.000269718  max 0.000154306
Newton iteration 9
  -- Solve : 
          min -7.33989e-06  max 4.34396e-06
Newton iteration 10
  -- Solve : 
          min -5.43849e-09  max 3.29014e-09
Newton iteration 11
  -- Solve : 
          min -2.73468e-15  max 1.24856e-15
POISSON'S RATIO = -0.976283
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.19001e-16  max 7.46219e-16
POISSON'S RATIO = -0.976283
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -3.39077  max 27.2036
jj = 65
DUAL PROBLEM: done!
*********************************************
  64  2.8125627e-04 0.00e+00 3.67e-02  -4.1 3.42e-01    -  1.00e+00 8.94e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00571062  max 0.0119409
Newton iteration 2
  -- Solve : 
          min -0.0016653  max 0.00151613
Newton iteration 3
  -- Solve : 
          min -6.04223e-05  max 7.0137e-05
Newton iteration 4
  -- Solve : 
          min -1.10876e-07  max 1.03469e-07
Newton iteration 5
  -- Solve : 
          min -3.78669e-13  max 8.61157e-13
POISSON'S RATIO = -1.00203
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.97545e-17  max 2.80388e-16
POISSON'S RATIO = -1.00203
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -4.84365  max 0.366136
jj = 66
DUAL PROBLEM: done!
*********************************************
  65  2.0513289e-06 0.00e+00 1.37e-02  -4.6 2.96e-01    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00217203  max 0.00225868
Newton iteration 2
  -- Solve : 
          min -5.80768e-05  max 2.73041e-05
Newton iteration 3
  -- Solve : 
          min -9.45886e-08  max 5.60351e-08
Newton iteration 4
  -- Solve : 
          min -6.38848e-13  max 4.00633e-13
POISSON'S RATIO = -0.999333
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -2.65575e-16  max 1.01712e-16
POISSON'S RATIO = -0.999333
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -0.127017  max 1.6272
jj = 67
DUAL PROBLEM: done!
*********************************************
  66  2.2211788e-07 0.00e+00 2.76e-04  -5.8 1.03e-02    -  1.00e+00 1.00e+00f  1

Number of Iterations....: 66

                                   (scaled)                 (unscaled)
Objective...............:   2.2211788221997525e-07    2.2211788221997525e-07
Dual infeasibility......:   2.7625250014155371e-04    2.7625250014155371e-04
Constraint violation....:   0.0000000000000000e+00    0.0000000000000000e+00
Complementarity.........:   2.4494234790281828e-06    2.4494234790281828e-06
Overall NLP error.......:   2.7625250014155371e-04    2.7625250014155371e-04


Number of objective function evaluations             = 73
Number of objective gradient evaluations             = 67
Number of equality constraint evaluations            = 0
Number of inequality constraint evaluations          = 74
Number of equality constraint Jacobian evaluations   = 0
Number of inequality constraint Jacobian evaluations = 67
Number of Lagrangian Hessian evaluations             = 0
Total CPU secs in IPOPT (w/o function evaluations)   =     12.612
Total CPU secs in NLP function evaluations           =    841.155

EXIT: Optimal Solution Found.


*** Ipopt succeeded 
  -- Solve : 
          min 0.00101653  max 0.772879
Iteration 1, Mesh error = 1.0001
 0x55759252c230 VTK_FILE 1

IPOPT Note : No hessian given ==> LBFGS hessian approximation enabled
This is Ipopt version 3.11.9, running with linear solver mumps.
NOTE: Other linear solvers might be more efficient (see Ipopt documentation).

Number of nonzeros in equality constraint Jacobian...:        0
Number of nonzeros in inequality constraint Jacobian.:      961
Number of nonzeros in Lagrangian Hessian.............:        0

*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.210654  max 0.101843
Newton iteration 2
  -- Solve : 
          min -0.137339  max 0.0480203
Newton iteration 3
  -- Solve : 
          min -0.0836667  max 0.0245782
Newton iteration 4
  -- Solve : 
          min -0.0525997  max 0.00667766
Newton iteration 5
  -- Solve : 
          min -0.035371  max 0.00883602
Newton iteration 6
  -- Solve : 
          min -0.0132658  max 0.00338696
Newton iteration 7
  -- Solve : 
          min -0.00437515  max 0.00106925
Newton iteration 8
  -- Solve : 
          min -0.000213747  max 6.30558e-05
Newton iteration 9
  -- Solve : 
          min -1.82619e-06  max 5.56749e-07
Newton iteration 10
  -- Solve : 
          min -5.0257e-11  max 1.55665e-11
Newton iteration 11
  -- Solve : 
          min -5.33378e-14  max 2.11661e-14
POISSON'S RATIO = 0.212049
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -44.8292  max 465.73
jj = 0
DUAL PROBLEM: done!
*********************************************
Total number of variables............................:      961
                     variables with only lower bounds:        0
                variables with lower and upper bounds:      961
                     variables with only upper bounds:        0
Total number of equality constraints.................:        0
Total number of inequality constraints...............:        1
        inequality constraints with only lower bounds:        0
   inequality constraints with lower and upper bounds:        1
        inequality constraints with only upper bounds:        0

*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00534018  max 0.00223997
Newton iteration 2
  -- Solve : 
          min -3.2966e-05  max 9.04518e-06
Newton iteration 3
  -- Solve : 
          min -4.3068e-09  max 2.71762e-09
Newton iteration 4
  -- Solve : 
          min -1.6838e-15  max 7.97985e-16
POISSON'S RATIO = 0.211626
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -44.7674  max 456.012
jj = 1
DUAL PROBLEM: done!
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.68562e-15  max 3.73519e-16
POISSON'S RATIO = 0.211626
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
   0  7.3401895e-01 1.74e-02 2.67e-01   0.0 0.00e+00    -  0.00e+00 0.00e+00   0
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0407468  max 0.0653277
Newton iteration 2
  -- Solve : 
          min -0.014793  max 0.0105618
Newton iteration 3
  -- Solve : 
          min -0.00208966  max 0.00170496
Newton iteration 4
  -- Solve : 
          min -3.75892e-05  max 2.23737e-05
Newton iteration 5
  -- Solve : 
          min -3.23798e-08  max 8.21791e-09
Newton iteration 6
  -- Solve : 
          min -4.17608e-14  max 6.3456e-15
POISSON'S RATIO = 0.0828831
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.00664e-16  max 7.65561e-17
POISSON'S RATIO = 0.0828831
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -34.0677  max 369.174
jj = 2
DUAL PROBLEM: done!
*********************************************
   1  5.8631795e-01 1.84e-02 4.12e-01  -2.7 2.56e-01    -  1.00e+00 1.41e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0163205  max 0.0258019
Newton iteration 2
  -- Solve : 
          min -0.00583135  max 0.001851
Newton iteration 3
  -- Solve : 
          min -0.00115723  max 5.90042e-05
Newton iteration 4
  -- Solve : 
          min -3.79062e-05  max 3.41755e-06
Newton iteration 5
  -- Solve : 
          min -4.35935e-08  max 6.37283e-09
Newton iteration 6
  -- Solve : 
          min -5.95587e-14  max 1.04835e-14
POISSON'S RATIO = 0.0262003
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.09808e-16  max 4.03813e-17
POISSON'S RATIO = 0.0262003
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -28.6146  max 341.179
jj = 3
DUAL PROBLEM: done!
*********************************************
   2  5.2654352e-01 1.34e-02 3.65e+01  -2.2 2.07e-01    -  9.56e-01 1.84e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0342409  max 0.0289578
Newton iteration 2
  -- Solve : 
          min -0.00548548  max 0.0053466
Newton iteration 3
  -- Solve : 
          min -0.000278  max 0.000921308
Newton iteration 4
  -- Solve : 
          min -4.01338e-06  max 1.64128e-05
Newton iteration 5
  -- Solve : 
          min -1.35572e-09  max 7.27971e-09
Newton iteration 6
  -- Solve : 
          min -1.42487e-16  max 1.50675e-15
POISSON'S RATIO = -0.0079407
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.07342e-17  max 4.37242e-17
POISSON'S RATIO = -0.0079407
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -25.4217  max 291.853
jj = 4
DUAL PROBLEM: done!
*********************************************
   3  4.9209083e-01 7.81e-03 3.06e+00  -2.3 2.44e-01    -  1.00e+00 3.74e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0280036  max 0.0286853
Newton iteration 2
  -- Solve : 
          min -0.00765514  max 0.00406793
Newton iteration 3
  -- Solve : 
          min -0.00187399  max 0.00110636
Newton iteration 4
  -- Solve : 
          min -0.000100505  max 6.63542e-05
Newton iteration 5
  -- Solve : 
          min -3.5767e-07  max 2.45756e-07
Newton iteration 6
  -- Solve : 
          min -4.88211e-12  max 3.48711e-12
Newton iteration 7
  -- Solve : 
          min -4.87233e-17  max 8.0481e-17
POISSON'S RATIO = -0.053047
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.23022e-17  max 5.31531e-17
POISSON'S RATIO = -0.053047
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -19.233  max 217.276
jj = 5
DUAL PROBLEM: done!
*********************************************
   4  4.4836002e-01 0.00e+00 2.32e-01  -2.5 1.90e-01    -  9.31e-01 9.27e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0360485  max 0.0507284
Newton iteration 2
  -- Solve : 
          min -0.00946138  max 0.00403012
Newton iteration 3
  -- Solve : 
          min -0.00253788  max 0.00191294
Newton iteration 4
  -- Solve : 
          min -0.000224569  max 0.000141465
Newton iteration 5
  -- Solve : 
          min -3.34488e-06  max 2.4728e-06
Newton iteration 6
  -- Solve : 
          min -4.56076e-10  max 3.00418e-10
Newton iteration 7
  -- Solve : 
          min -7.04941e-17  max 8.19298e-17
POISSON'S RATIO = -0.171014
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.92167e-17  max 3.22318e-17
POISSON'S RATIO = -0.171014
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -16.6957  max 149.779
jj = 6
DUAL PROBLEM: done!
*********************************************
   5  3.4360866e-01 0.00e+00 1.00e-01  -2.7 2.42e-01    -  6.62e-01 8.76e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0495112  max 0.065403
Newton iteration 2
  -- Solve : 
          min -0.0122873  max 0.00807673
Newton iteration 3
  -- Solve : 
          min -0.00113155  max 0.00132042
Newton iteration 4
  -- Solve : 
          min -3.86645e-05  max 3.30227e-05
Newton iteration 5
  -- Solve : 
          min -8.40246e-08  max 8.89065e-08
Newton iteration 6
  -- Solve : 
          min -2.68877e-13  max 2.39168e-13
POISSON'S RATIO = -0.29881
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.7693e-17  max 9.07532e-17
POISSON'S RATIO = -0.29881
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -14.299  max 122.723
jj = 7
DUAL PROBLEM: done!
*********************************************
   6  2.4583389e-01 0.00e+00 1.36e-01  -2.9 2.99e-01    -  9.71e-01 8.46e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0391943  max 0.0711722
Newton iteration 2
  -- Solve : 
          min -0.00688173  max 0.00917988
Newton iteration 3
  -- Solve : 
          min -0.000530192  max 0.00175237
Newton iteration 4
  -- Solve : 
          min -1.19942e-05  max 7.33791e-05
Newton iteration 5
  -- Solve : 
          min -1.44736e-08  max 1.33616e-07
Newton iteration 6
  -- Solve : 
          min -4.70485e-14  max 4.50315e-13
POISSON'S RATIO = -0.423693
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.5976e-17  max 1.29344e-16
POISSON'S RATIO = -0.423693
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -11.8701  max 129.453
jj = 8
DUAL PROBLEM: done!
*********************************************
   7  1.6606462e-01 0.00e+00 4.75e-01  -3.2 3.47e-01    -  9.94e-01 5.61e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0213071  max 0.0636993
Newton iteration 2
  -- Solve : 
          min -0.00396956  max 0.0014722
Newton iteration 3
  -- Solve : 
          min -0.0002503  max 5.18196e-05
Newton iteration 4
  -- Solve : 
          min -1.03789e-06  max 1.58875e-07
Newton iteration 5
  -- Solve : 
          min -5.02829e-11  max 1.04414e-11
Newton iteration 6
  -- Solve : 
          min -6.30349e-17  max 1.50894e-16
POISSON'S RATIO = -0.525779
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -9.17431e-17  max 3.15537e-17
POISSON'S RATIO = -0.525779
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -9.83826  max 149.57
jj = 9
DUAL PROBLEM: done!
*********************************************
   8  1.1244283e-01 0.00e+00 1.58e-01  -3.2 3.56e-01    -  1.00e+00 5.25e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0175776  max 0.0590068
Newton iteration 2
  -- Solve : 
          min -0.00347972  max 0.00325738
Newton iteration 3
  -- Solve : 
          min -0.000161888  max 9.2335e-05
Newton iteration 4
  -- Solve : 
          min -3.58461e-07  max 1.15003e-07
Newton iteration 5
  -- Solve : 
          min -5.73325e-12  max 1.17048e-12
Newton iteration 6
  -- Solve : 
          min -1.20063e-16  max 7.46382e-17
POISSON'S RATIO = -0.613692
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.12027e-17  max 7.73389e-17
POISSON'S RATIO = -0.613692
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -8.05996  max 263.264
jj = 10
DUAL PROBLEM: done!
*********************************************
   9  7.4616852e-02 0.00e+00 1.73e-01  -3.6 4.44e-01    -  7.85e-01 5.50e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0273997  max 0.0414913
Newton iteration 2
  -- Solve : 
          min -0.00896418  max 0.00383548
Newton iteration 3
  -- Solve : 
          min -0.00212343  max 0.000445883
Newton iteration 4
  -- Solve : 
          min -0.00014004  max 2.7509e-05
Newton iteration 5
  -- Solve : 
          min -5.35001e-07  max 5.47227e-08
Newton iteration 6
  -- Solve : 
          min -7.36318e-12  max 6.42568e-13
Newton iteration 7
  -- Solve : 
          min -1.03957e-16  max 1.75622e-16
POISSON'S RATIO = -0.649505
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.01173e-17  max 5.26933e-17
POISSON'S RATIO = -0.649505
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -9.45015  max 216.072
jj = 11
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  10  6.1423338e-02 0.00e+00 3.23e-01  -3.5 5.41e-01    -  9.18e-01 6.93e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00489802  max 0.0149623
Newton iteration 2
  -- Solve : 
          min -0.00080318  max 0.000190121
Newton iteration 3
  -- Solve : 
          min -3.04292e-05  max 9.90831e-06
Newton iteration 4
  -- Solve : 
          min -2.05823e-08  max 5.04e-09
Newton iteration 5
  -- Solve : 
          min -2.32072e-14  max 7.36211e-15
POISSON'S RATIO = -0.678583
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.21933e-16  max 1.45863e-16
POISSON'S RATIO = -0.678583
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -9.09861  max 199.411
jj = 12
DUAL PROBLEM: done!
*********************************************
  11  5.1654488e-02 0.00e+00 2.84e-01  -3.6 6.33e-01    -  1.00e+00 9.88e-02f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0399152  max 0.0685232
Newton iteration 2
  -- Solve : 
          min -0.0133028  max 0.00164345
Newton iteration 3
  -- Solve : 
          min -0.00264783  max 0.00110574
Newton iteration 4
  -- Solve : 
          min -7.49495e-05  max 4.82467e-05
Newton iteration 5
  -- Solve : 
          min -1.45551e-07  max 1.01719e-07
Newton iteration 6
  -- Solve : 
          min -6.54557e-13  max 3.24349e-13
POISSON'S RATIO = -0.640983
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.59628e-17  max 1.60973e-16
POISSON'S RATIO = -0.640983
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -19.2726  max 146.995
jj = 13
DUAL PROBLEM: done!
*********************************************
  12  6.4446617e-02 0.00e+00 1.92e-01  -2.9 6.90e-01    -  7.85e-01 2.65e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0249822  max 0.0183601
Newton iteration 2
  -- Solve : 
          min -0.0055298  max 0.00468156
Newton iteration 3
  -- Solve : 
          min -0.00112697  max 0.000940659
Newton iteration 4
  -- Solve : 
          min -4.51524e-05  max 3.25918e-05
Newton iteration 5
  -- Solve : 
          min -7.04775e-08  max 3.55345e-08
Newton iteration 6
  -- Solve : 
          min -1.67074e-13  max 3.5145e-14
POISSON'S RATIO = -0.635979
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -9.39763e-17  max 9.96251e-17
POISSON'S RATIO = -0.635979
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -14.7322  max 136.493
jj = 14
DUAL PROBLEM: done!
*********************************************
  13  6.6255566e-02 0.00e+00 2.00e-01  -3.1 3.93e-01    -  1.00e+00 6.62e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0116952  max 0.0186748
Newton iteration 2
  -- Solve : 
          min -0.00258313  max 0.00186774
Newton iteration 3
  -- Solve : 
          min -0.00021493  max 7.52446e-05
Newton iteration 4
  -- Solve : 
          min -1.02497e-06  max 3.05362e-07
Newton iteration 5
  -- Solve : 
          min -4.02381e-11  max 1.35096e-11
Newton iteration 6
  -- Solve : 
          min -1.5614e-16  max 6.71018e-17
POISSON'S RATIO = -0.674925
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.59458e-17  max 7.31654e-17
POISSON'S RATIO = -0.674925
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -17.4067  max 120.771
jj = 15
DUAL PROBLEM: done!
*********************************************
  14  5.2836953e-02 0.00e+00 5.31e-02  -3.1 2.38e-01    -  1.00e+00 8.03e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0082409  max 0.0188362
Newton iteration 2
  -- Solve : 
          min -0.00451624  max 0.00168332
Newton iteration 3
  -- Solve : 
          min -0.00140658  max 0.000726784
Newton iteration 4
  -- Solve : 
          min -2.8748e-05  max 9.06307e-06
Newton iteration 5
  -- Solve : 
          min -4.66296e-08  max 2.20087e-08
Newton iteration 6
  -- Solve : 
          min -3.92875e-14  max 1.38333e-14
POISSON'S RATIO = -0.697398
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.30492e-17  max 1.34383e-16
POISSON'S RATIO = -0.697398
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -28.7496  max 120.145
jj = 16
DUAL PROBLEM: done!
*********************************************
  15  4.5783860e-02 0.00e+00 7.95e-02  -3.1 6.58e-01    -  1.00e+00 3.78e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0198996  max 0.046399
Newton iteration 2
  -- Solve : 
          min -0.00288844  max 0.00170432
Newton iteration 3
  -- Solve : 
          min -0.000183224  max 0.000332324
Newton iteration 4
  -- Solve : 
          min -1.27071e-06  max 1.50178e-06
Newton iteration 5
  -- Solve : 
          min -9.50164e-11  max 1.71177e-10
Newton iteration 6
  -- Solve : 
          min -6.46895e-17  max 1.96482e-16
POISSON'S RATIO = -0.78912
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.38843e-17  max 1.13727e-16
POISSON'S RATIO = -0.78912
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -17.8622  max 102.317
jj = 17
DUAL PROBLEM: done!
*********************************************
  16  2.2235148e-02 0.00e+00 6.66e-02  -3.6 2.58e-01    -  9.97e-01 3.71e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0246433  max 0.0365944
Newton iteration 2
  -- Solve : 
          min -0.00148508  max 0.000778493
Newton iteration 3
  -- Solve : 
          min -1.08758e-05  max 2.03126e-05
Newton iteration 4
  -- Solve : 
          min -4.4293e-09  max 6.10011e-09
Newton iteration 5
  -- Solve : 
          min -1.44486e-15  max 2.76398e-15
POISSON'S RATIO = -0.834283
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.01046e-17  max 1.06888e-16
POISSON'S RATIO = -0.834283
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -13.3679  max 84.5031
jj = 18
DUAL PROBLEM: done!
*********************************************
  17  1.3731089e-02 0.00e+00 4.35e-02  -3.7 1.51e-01    -  9.89e-01 4.50e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0177117  max 0.0196309
Newton iteration 2
  -- Solve : 
          min -0.00394655  max 0.00106516
Newton iteration 3
  -- Solve : 
          min -0.000495888  max 3.8121e-05
Newton iteration 4
  -- Solve : 
          min -7.27885e-06  max 3.31718e-07
Newton iteration 5
  -- Solve : 
          min -1.44951e-09  max 3.3949e-11
Newton iteration 6
  -- Solve : 
          min -1.17062e-16  max 7.85582e-17
POISSON'S RATIO = -0.845156
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.1945e-17  max 7.06756e-17
POISSON'S RATIO = -0.845156
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.2184  max 81.6356
jj = 19
DUAL PROBLEM: done!
*********************************************
  18  1.1988406e-02 0.00e+00 9.35e-02  -3.7 2.35e-01    -  5.08e-01 2.32e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0951287  max 0.0918454
Newton iteration 2
  -- Solve : 
          min -0.0631165  max 0.0546418
Newton iteration 3
  -- Solve : 
          min -0.0412973  max 0.0364069
Newton iteration 4
  -- Solve : 
          min -0.0260258  max 0.0230111
Newton iteration 5
  -- Solve : 
          min -0.0142586  max 0.0127207
Newton iteration 6
  -- Solve : 
          min -0.00514582  max 0.00472653
Newton iteration 7
  -- Solve : 
          min -0.000668747  max 0.000654378
Newton iteration 8
  -- Solve : 
          min -1.06989e-05  max 1.17675e-05
Newton iteration 9
  -- Solve : 
          min -2.71658e-09  max 3.70688e-09
Newton iteration 10
  -- Solve : 
          min -1.82233e-16  max 3.40411e-16
POISSON'S RATIO = -0.955641
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.04105e-16  max 1.00574e-16
POISSON'S RATIO = -0.955641
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -2.84897  max 33.654
jj = 20
DUAL PROBLEM: done!
*********************************************
  19  9.8387863e-04 0.00e+00 7.88e-02  -4.1 2.52e-01    -  1.00e+00 6.57e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0587991  max 0.0732444
Newton iteration 2
  -- Solve : 
          min -0.0225095  max 0.0174798
Newton iteration 3
  -- Solve : 
          min -0.0053185  max 0.00388748
Newton iteration 4
  -- Solve : 
          min -0.000270958  max 0.000173261
Newton iteration 5
  -- Solve : 
          min -6.72389e-07  max 3.28379e-07
Newton iteration 6
  -- Solve : 
          min -4.07993e-12  max 1.06678e-12
POISSON'S RATIO = -0.967511
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.19838e-16  max 1.11741e-16
POISSON'S RATIO = -0.967511
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -1.9801  max 25.5043
jj = 21
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  20  5.2777189e-04 0.00e+00 1.71e-02  -4.3 3.38e-02    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0255578  max 0.022456
Newton iteration 2
  -- Solve : 
          min -0.0130717  max 0.011156
Newton iteration 3
  -- Solve : 
          min -0.0041179  max 0.00360758
Newton iteration 4
  -- Solve : 
          min -0.000396534  max 0.000367675
Newton iteration 5
  -- Solve : 
          min -3.50763e-06  max 3.6084e-06
Newton iteration 6
  -- Solve : 
          min -2.7374e-10  max 3.40593e-10
Newton iteration 7
  -- Solve : 
          min -1.10624e-16  max 1.10768e-16
POISSON'S RATIO = -0.987188
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.87029e-17  max 1.07198e-16
POISSON'S RATIO = -0.987188
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -0.817891  max 11.0182
jj = 22
DUAL PROBLEM: done!
*********************************************
  21  8.2074139e-05 0.00e+00 1.83e-02  -4.5 1.85e-01    -  1.00e+00 2.44e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0381307  max 0.0433612
Newton iteration 2
  -- Solve : 
          min -0.0127354  max 0.0111499
Newton iteration 3
  -- Solve : 
          min -0.00211738  max 0.0019334
Newton iteration 4
  -- Solve : 
          min -5.44093e-05  max 5.36561e-05
Newton iteration 5
  -- Solve : 
          min -3.53165e-08  max 4.01479e-08
Newton iteration 6
  -- Solve : 
          min -1.48982e-14  max 2.20487e-14
POISSON'S RATIO = -0.989088
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.44239e-17  max 1.2185e-16
POISSON'S RATIO = -0.989088
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -0.762154  max 9.13911
jj = 23
DUAL PROBLEM: done!
*********************************************
  22  5.9536304e-05 0.00e+00 7.99e-03  -4.6 4.65e-02    -  9.99e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0994785  max 0.122274
Newton iteration 2
  -- Solve : 
          min -0.0455604  max 0.0561905
Newton iteration 3
  -- Solve : 
          min -0.00701654  max 0.0093459
Newton iteration 4
  -- Solve : 
          min -0.000125974  max 0.000182649
Newton iteration 5
  -- Solve : 
          min -3.93347e-08  max 6.52513e-08
Newton iteration 6
  -- Solve : 
          min -3.82602e-15  max 8.2751e-15
POISSON'S RATIO = -0.989731
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -9.45656e-17  max 8.67057e-17
POISSON'S RATIO = -0.989731
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -1.37134  max 7.73567
jj = 24
DUAL PROBLEM: done!
*********************************************
  23  5.2721408e-05 0.00e+00 2.79e-02  -4.3 7.58e-01    -  1.00e+00 2.06e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0106569  max 0.0102636
Newton iteration 2
  -- Solve : 
          min -0.00144278  max 0.00117942
Newton iteration 3
  -- Solve : 
          min -8.0559e-05  max 0.000159051
Newton iteration 4
  -- Solve : 
          min -3.03207e-07  max 4.07195e-07
Newton iteration 5
  -- Solve : 
          min -9.52591e-12  max 1.83314e-11
Newton iteration 6
  -- Solve : 
          min -7.01908e-17  max 1.18475e-16
POISSON'S RATIO = -0.996148
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.1864e-16  max 1.03542e-16
POISSON'S RATIO = -0.996148
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -0.650685  max 2.70377
jj = 25
DUAL PROBLEM: done!
*********************************************
  24  7.4173562e-06 0.00e+00 3.30e-03  -4.7 4.08e-01    -  8.65e-01 8.61e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0075139  max 0.0123601
Newton iteration 2
  -- Solve : 
          min -0.000866814  max 0.00112666
Newton iteration 3
  -- Solve : 
          min -2.02762e-05  max 3.1232e-05
Newton iteration 4
  -- Solve : 
          min -1.07837e-08  max 2.28506e-08
Newton iteration 5
  -- Solve : 
          min -2.8618e-15  max 1.17216e-14
POISSON'S RATIO = -1.01397
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.38839e-15  max 1.62618e-15
POISSON'S RATIO = -1.01397
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.62033e-17  max 2.16229e-16
POISSON'S RATIO = -1.01397
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.7457e-16  max 3.66574e-17
POISSON'S RATIO = -1.01397
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.23705e-17  max 9.9783e-17
POISSON'S RATIO = -1.01397
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00615027  max 0.00393483
Newton iteration 2
  -- Solve : 
          min -0.000209682  max 0.000281713
Newton iteration 3
  -- Solve : 
          min -1.06081e-06  max 1.72111e-06
Newton iteration 4
  -- Solve : 
          min -2.64225e-11  max 6.18779e-11
Newton iteration 5
  -- Solve : 
          min -9.96473e-17  max 1.55851e-16
POISSON'S RATIO = -1.00488
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.54599e-16  max 1.06878e-16
POISSON'S RATIO = -1.00488
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -3.3986  max 0.901032
jj = 26
DUAL PROBLEM: done!
*********************************************
  25  1.1928601e-05 0.00e+00 5.38e-03  -5.4 2.14e-01    -  9.99e-01 5.00e-01f  2
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0716183  max 0.0567116
Newton iteration 2
  -- Solve : 
          min -0.0243149  max 0.0186921
Newton iteration 3
  -- Solve : 
          min -0.00227767  max 0.00164869
Newton iteration 4
  -- Solve : 
          min -1.74871e-05  max 1.14677e-05
Newton iteration 5
  -- Solve : 
          min -1.01074e-09  max 5.51354e-10
Newton iteration 6
  -- Solve : 
          min -1.83191e-16  max 2.35582e-16
POISSON'S RATIO = -0.998405
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.74099e-16  max 7.50968e-17
POISSON'S RATIO = -0.998405
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -0.270434  max 1.16365
jj = 27
DUAL PROBLEM: done!
*********************************************
  26  1.2721272e-06 0.00e+00 6.52e-04  -5.5 1.11e-01    -  9.40e-01 1.00e+00f  1

Number of Iterations....: 26

                                   (scaled)                 (unscaled)
Objective...............:   1.2721272466993892e-06    1.2721272466993892e-06
Dual infeasibility......:   6.5183795105992466e-04    6.5183795105992466e-04
Constraint violation....:   0.0000000000000000e+00    0.0000000000000000e+00
Complementarity.........:   2.4465976589246036e-05    2.4465976589246036e-05
Overall NLP error.......:   6.5183795105992466e-04    6.5183795105992466e-04


Number of objective function evaluations             = 32
Number of objective gradient evaluations             = 27
Number of equality constraint evaluations            = 0
Number of inequality constraint evaluations          = 33
Number of equality constraint Jacobian evaluations   = 0
Number of inequality constraint Jacobian evaluations = 27
Number of Lagrangian Hessian evaluations             = 0
Total CPU secs in IPOPT (w/o function evaluations)   =     18.121
Total CPU secs in NLP function evaluations           =    341.627

EXIT: Optimal Solution Found.


*** Ipopt succeeded 
  -- Solve : 
          min 0.00529899  max 0.669158
Iteration 2, Mesh error = 1.0001
 0x5575926488a0 VTK_FILE 1

IPOPT Note : No hessian given ==> LBFGS hessian approximation enabled
This is Ipopt version 3.11.9, running with linear solver mumps.
NOTE: Other linear solvers might be more efficient (see Ipopt documentation).

Number of nonzeros in equality constraint Jacobian...:        0
Number of nonzeros in inequality constraint Jacobian.:      961
Number of nonzeros in Lagrangian Hessian.............:        0

*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.17405  max 0.0968361
Newton iteration 2
  -- Solve : 
          min -0.113887  max 0.0425256
Newton iteration 3
  -- Solve : 
          min -0.0654718  max 0.0215035
Newton iteration 4
  -- Solve : 
          min -0.0447133  max 0.0111965
Newton iteration 5
  -- Solve : 
          min -0.0291803  max 0.00843865
Newton iteration 6
  -- Solve : 
          min -0.0193574  max 0.00292338
Newton iteration 7
  -- Solve : 
          min -0.00551558  max 0.00069293
Newton iteration 8
  -- Solve : 
          min -0.000267688  max 7.13904e-05
Newton iteration 9
  -- Solve : 
          min -7.49452e-07  max 2.29241e-07
Newton iteration 10
  -- Solve : 
          min -6.52668e-12  max 2.01277e-12
Newton iteration 11
  -- Solve : 
          min -1.79289e-15  max 3.12748e-15
POISSON'S RATIO = 0.167334
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -26.4656  max 352.372
jj = 0
DUAL PROBLEM: done!
*********************************************
Total number of variables............................:      961
                     variables with only lower bounds:        0
                variables with lower and upper bounds:      961
                     variables with only upper bounds:        0
Total number of equality constraints.................:        0
Total number of inequality constraints...............:        1
        inequality constraints with only lower bounds:        0
   inequality constraints with lower and upper bounds:        1
        inequality constraints with only upper bounds:        0

*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00232313  max 0.00171177
Newton iteration 2
  -- Solve : 
          min -9.2046e-06  max 2.54142e-05
Newton iteration 3
  -- Solve : 
          min -1.66347e-09  max 6.24343e-10
Newton iteration 4
  -- Solve : 
          min -2.18883e-14  max 3.98321e-14
POISSON'S RATIO = 0.168382
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -26.3788  max 349.082
jj = 1
DUAL PROBLEM: done!
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.11102e-14  max 1.70561e-14
POISSON'S RATIO = 0.168382
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
   0  6.8255822e-01 1.68e-02 2.51e-01   0.0 0.00e+00    -  0.00e+00 0.00e+00   0
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0216639  max 0.0409247
Newton iteration 2
  -- Solve : 
          min -0.00750955  max 0.00385194
Newton iteration 3
  -- Solve : 
          min -0.000437076  max 0.000463307
Newton iteration 4
  -- Solve : 
          min -2.3615e-06  max 5.13822e-06
Newton iteration 5
  -- Solve : 
          min -5.77414e-11  max 6.00884e-10
Newton iteration 6
  -- Solve : 
          min -6.23773e-17  max 6.95146e-17
POISSON'S RATIO = 0.0730842
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.15838e-17  max 9.0425e-17
POISSON'S RATIO = 0.0730842
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -20.9722  max 306.361
jj = 2
DUAL PROBLEM: done!
*********************************************
   1  5.7575482e-01 1.72e-02 3.01e-01  -2.9 2.20e-01    -  1.00e+00 1.71e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0221037  max 0.0156697
Newton iteration 2
  -- Solve : 
          min -0.00208642  max 0.00457709
Newton iteration 3
  -- Solve : 
          min -9.48059e-05  max 0.000175651
Newton iteration 4
  -- Solve : 
          min -2.09054e-07  max 9.65617e-07
Newton iteration 5
  -- Solve : 
          min -2.85895e-12  max 2.63493e-11
Newton iteration 6
  -- Solve : 
          min -8.17609e-17  max 8.66296e-17
POISSON'S RATIO = 0.0727751
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.71895e-17  max 3.29541e-17
POISSON'S RATIO = 0.0727751
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -18.5484  max 285.351
jj = 3
DUAL PROBLEM: done!
*********************************************
   2  5.7542317e-01 9.32e-03 3.87e+01  -2.3 1.77e-01    -  1.00e+00 3.38e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0404558  max 0.0287484
Newton iteration 2
  -- Solve : 
          min -0.00716673  max 0.00384703
Newton iteration 3
  -- Solve : 
          min -0.000860434  max 0.00082343
Newton iteration 4
  -- Solve : 
          min -3.60796e-05  max 2.9422e-05
Newton iteration 5
  -- Solve : 
          min -8.68687e-08  max 7.15387e-08
Newton iteration 6
  -- Solve : 
          min -3.92074e-13  max 3.1979e-13
POISSON'S RATIO = 0.0812168
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.70085e-17  max 5.68929e-17
POISSON'S RATIO = 0.0812168
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -18.1457  max 257.598
jj = 4
DUAL PROBLEM: done!
*********************************************
   3  5.8451487e-01 0.00e+00 1.94e+00  -2.3 1.49e-01    -  1.00e+00 8.88e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0235514  max 0.0431193
Newton iteration 2
  -- Solve : 
          min -0.00865413  max 0.00596283
Newton iteration 3
  -- Solve : 
          min -0.00130472  max 0.000943139
Newton iteration 4
  -- Solve : 
          min -6.3209e-05  max 3.92871e-05
Newton iteration 5
  -- Solve : 
          min -2.16645e-07  max 9.57529e-08
Newton iteration 6
  -- Solve : 
          min -2.38209e-12  max 1.06843e-12
Newton iteration 7
  -- Solve : 
          min -5.68632e-17  max 6.93173e-17
POISSON'S RATIO = -0.0159846
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.66604e-17  max 3.11399e-17
POISSON'S RATIO = -0.0159846
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -16.1426  max 199.896
jj = 5
DUAL PROBLEM: done!
*********************************************
   4  4.8414311e-01 0.00e+00 1.55e-01  -2.7 2.30e-01    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0820259  max 0.0800473
Newton iteration 2
  -- Solve : 
          min -0.0164009  max 0.0117757
Newton iteration 3
  -- Solve : 
          min -0.00608921  max 0.00302481
Newton iteration 4
  -- Solve : 
          min -0.00109517  max 0.000739616
Newton iteration 5
  -- Solve : 
          min -5.58531e-05  max 3.71191e-05
Newton iteration 6
  -- Solve : 
          min -1.39097e-07  max 9.15279e-08
Newton iteration 7
  -- Solve : 
          min -8.93505e-13  max 5.96296e-13
Newton iteration 8
  -- Solve : 
          min -7.67837e-17  max 6.94979e-17
POISSON'S RATIO = -0.155466
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.08608e-17  max 5.75032e-17
POISSON'S RATIO = -0.155466
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -7.88411  max 167.361
jj = 6
DUAL PROBLEM: done!
*********************************************
   5  3.5661926e-01 0.00e+00 1.78e-01  -3.1 4.55e-01    -  4.55e-01 6.36e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0306041  max 0.026345
Newton iteration 2
  -- Solve : 
          min -0.0017186  max 0.00435634
Newton iteration 3
  -- Solve : 
          min -3.97126e-05  max 0.000301236
Newton iteration 4
  -- Solve : 
          min -3.56659e-07  max 1.94217e-06
Newton iteration 5
  -- Solve : 
          min -2.12027e-11  max 8.73875e-11
Newton iteration 6
  -- Solve : 
          min -5.72944e-17  max 4.38364e-17
POISSON'S RATIO = -0.20732
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.14322e-17  max 5.08413e-17
POISSON'S RATIO = -0.20732
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -7.15347  max 164.163
jj = 7
DUAL PROBLEM: done!
*********************************************
   6  3.1417072e-01 0.00e+00 6.32e-02  -2.9 3.28e-01    -  9.88e-01 6.04e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0180848  max 0.0243542
Newton iteration 2
  -- Solve : 
          min -0.00271325  max 0.00159143
Newton iteration 3
  -- Solve : 
          min -0.000356659  max 0.000110685
Newton iteration 4
  -- Solve : 
          min -3.76816e-06  max 8.58621e-07
Newton iteration 5
  -- Solve : 
          min -3.90461e-10  max 6.16796e-11
Newton iteration 6
  -- Solve : 
          min -8.71086e-17  max 4.27163e-17
POISSON'S RATIO = -0.262759
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.9796e-17  max 4.0946e-17
POISSON'S RATIO = -0.262759
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -9.1569  max 168.376
jj = 8
DUAL PROBLEM: done!
*********************************************
   7  2.7176218e-01 0.00e+00 4.94e-02  -2.9 3.31e-01    -  9.38e-01 8.04e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0308139  max 0.0280224
Newton iteration 2
  -- Solve : 
          min -0.00343586  max 0.00177068
Newton iteration 3
  -- Solve : 
          min -0.000237853  max 0.000157187
Newton iteration 4
  -- Solve : 
          min -1.54415e-06  max 7.9908e-07
Newton iteration 5
  -- Solve : 
          min -1.33582e-10  max 8.16683e-11
Newton iteration 6
  -- Solve : 
          min -5.21737e-17  max 1.01445e-16
POISSON'S RATIO = -0.216442
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.17752e-17  max 3.16828e-17
POISSON'S RATIO = -0.216442
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -15.972  max 166.08
jj = 9
DUAL PROBLEM: done!
*********************************************
   8  3.0698187e-01 0.00e+00 8.60e-02  -2.7 8.26e-01    -  8.66e-01 4.28e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0247882  max 0.0363426
Newton iteration 2
  -- Solve : 
          min -0.00572845  max 0.00142672
Newton iteration 3
  -- Solve : 
          min -0.000428534  max 0.000121005
Newton iteration 4
  -- Solve : 
          min -5.34776e-06  max 1.77716e-06
Newton iteration 5
  -- Solve : 
          min -1.39309e-09  max 4.98915e-10
Newton iteration 6
  -- Solve : 
          min -1.12215e-16  max 6.19357e-17
POISSON'S RATIO = -0.291484
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.33274e-17  max 3.74232e-17
POISSON'S RATIO = -0.291484
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -12.5931  max 155.098
jj = 10
DUAL PROBLEM: done!
*********************************************
   9  2.5099747e-01 0.00e+00 1.97e-01  -2.8 3.57e-01    -  9.52e-01 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0547961  max 0.0267222
Newton iteration 2
  -- Solve : 
          min -0.00944734  max 0.00319583
Newton iteration 3
  -- Solve : 
          min -0.000466895  max 0.000313276
Newton iteration 4
  -- Solve : 
          min -1.98171e-06  max 2.45924e-06
Newton iteration 5
  -- Solve : 
          min -1.55789e-10  max 2.02796e-10
Newton iteration 6
  -- Solve : 
          min -5.56665e-17  max 7.02954e-17
POISSON'S RATIO = -0.156537
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.62721e-17  max 3.08041e-17
POISSON'S RATIO = -0.156537
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -13.5107  max 162.386
jj = 11
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  10  3.5571472e-01 0.00e+00 2.63e-01  -2.5 4.28e-01    -  1.00e+00 8.14e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0158725  max 0.0367508
Newton iteration 2
  -- Solve : 
          min -0.00554556  max 0.00145826
Newton iteration 3
  -- Solve : 
          min -0.00159972  max 0.000874304
Newton iteration 4
  -- Solve : 
          min -5.62276e-05  max 2.2552e-05
Newton iteration 5
  -- Solve : 
          min -2.36872e-07  max 1.2314e-07
Newton iteration 6
  -- Solve : 
          min -1.67547e-12  max 7.39849e-13
Newton iteration 7
  -- Solve : 
          min -9.47287e-17  max 6.67175e-17
POISSON'S RATIO = -0.24301
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -5.7093e-17  max 4.82787e-17
POISSON'S RATIO = -0.24301
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.6221  max 140.921
jj = 12
DUAL PROBLEM: done!
*********************************************
  11  2.8651700e-01 0.00e+00 9.77e-02  -2.6 1.63e-01    -  1.00e+00 8.56e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.010784  max 0.0221048
Newton iteration 2
  -- Solve : 
          min -0.00330049  max 0.0010955
Newton iteration 3
  -- Solve : 
          min -0.000756561  max 0.000336052
Newton iteration 4
  -- Solve : 
          min -1.28798e-05  max 4.32497e-06
Newton iteration 5
  -- Solve : 
          min -9.55037e-09  max 4.26367e-09
Newton iteration 6
  -- Solve : 
          min -2.51082e-15  max 8.948e-16
POISSON'S RATIO = -0.293157
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.3882e-17  max 8.33779e-17
POISSON'S RATIO = -0.293157
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -13.0771  max 131.805
jj = 13
DUAL PROBLEM: done!
*********************************************
  12  2.4981381e-01 0.00e+00 4.76e-02  -2.6 1.95e-01    -  1.00e+00 7.04e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.034692  max 0.0757626
Newton iteration 2
  -- Solve : 
          min -0.0116776  max 0.00644808
Newton iteration 3
  -- Solve : 
          min -0.00306523  max 0.00649278
Newton iteration 4
  -- Solve : 
          min -0.000789501  max 0.00143332
Newton iteration 5
  -- Solve : 
          min -5.23515e-05  max 9.80687e-05
Newton iteration 6
  -- Solve : 
          min -2.12329e-07  max 3.79921e-07
Newton iteration 7
  -- Solve : 
          min -3.5421e-12  max 6.57976e-12
Newton iteration 8
  -- Solve : 
          min -5.82144e-17  max 7.01768e-17
POISSON'S RATIO = -0.453313
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.58444e-17  max 2.91148e-17
POISSON'S RATIO = -0.453313
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -11.5674  max 109.259
jj = 14
DUAL PROBLEM: done!
*********************************************
  13  1.4943314e-01 0.00e+00 6.21e-02  -2.9 3.39e-01    -  9.62e-01 8.67e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0265343  max 0.0553885
Newton iteration 2
  -- Solve : 
          min -0.00450651  max 0.000672396
Newton iteration 3
  -- Solve : 
          min -0.00106611  max 0.000351085
Newton iteration 4
  -- Solve : 
          min -1.9292e-05  max 3.27187e-06
Newton iteration 5
  -- Solve : 
          min -2.42733e-08  max 7.09825e-09
Newton iteration 6
  -- Solve : 
          min -1.24471e-14  max 2.22549e-15
POISSON'S RATIO = -0.549589
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.06466e-17  max 8.5481e-17
POISSON'S RATIO = -0.549589
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.445  max 112.498
jj = 15
DUAL PROBLEM: done!
*********************************************
  14  1.0143506e-01 0.00e+00 7.60e-02  -3.3 2.66e-01    -  1.00e+00 5.97e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0238178  max 0.098439
Newton iteration 2
  -- Solve : 
          min -0.00946371  max 0.0112516
Newton iteration 3
  -- Solve : 
          min -0.00188134  max 0.000399663
Newton iteration 4
  -- Solve : 
          min -6.05013e-05  max 1.19969e-05
Newton iteration 5
  -- Solve : 
          min -1.53954e-07  max 3.20138e-08
Newton iteration 6
  -- Solve : 
          min -5.07379e-13  max 9.44757e-14
POISSON'S RATIO = -0.699234
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -7.02447e-17  max 9.49347e-17
POISSON'S RATIO = -0.699234
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -7.54001  max 171.284
jj = 16
DUAL PROBLEM: done!
*********************************************
  15  4.5229977e-02 0.00e+00 8.09e-02  -3.4 4.35e-01    -  9.98e-01 7.58e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00780296  max 0.00445995
Newton iteration 2
  -- Solve : 
          min -0.000228983  max 0.000215908
Newton iteration 3
  -- Solve : 
          min -2.4895e-06  max 1.23941e-06
Newton iteration 4
  -- Solve : 
          min -2.23402e-10  max 8.97636e-11
Newton iteration 5
  -- Solve : 
          min -6.0779e-17  max 1.62857e-16
POISSON'S RATIO = -0.703168
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.54308e-17  max 5.95856e-17
POISSON'S RATIO = -0.703168
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -7.96089  max 145.055
jj = 17
DUAL PROBLEM: done!
*********************************************
  16  4.4054635e-02 0.00e+00 1.01e-01  -3.2 3.57e-01    -  1.00e+00 1.28e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0277859  max 0.0252175
Newton iteration 2
  -- Solve : 
          min -0.00650077  max 0.00198163
Newton iteration 3
  -- Solve : 
          min -0.000949214  max 0.000389188
Newton iteration 4
  -- Solve : 
          min -1.99403e-05  max 3.0004e-06
Newton iteration 5
  -- Solve : 
          min -8.23302e-09  max 3.02709e-09
Newton iteration 6
  -- Solve : 
          min -2.2953e-15  max 7.51149e-16
POISSON'S RATIO = -0.717301
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.32981e-16  max 1.15382e-16
POISSON'S RATIO = -0.717301
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -11.6199  max 102.246
jj = 18
DUAL PROBLEM: done!
*********************************************
  17  3.9959250e-02 0.00e+00 3.14e-02  -3.2 5.76e-01    -  9.94e-01 4.86e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0166681  max 0.0428052
Newton iteration 2
  -- Solve : 
          min -0.00372839  max 0.00101553
Newton iteration 3
  -- Solve : 
          min -0.000430639  max 0.000146262
Newton iteration 4
  -- Solve : 
          min -4.4403e-06  max 1.37991e-06
Newton iteration 5
  -- Solve : 
          min -6.70065e-10  max 2.32871e-10
Newton iteration 6
  -- Solve : 
          min -8.99462e-17  max 1.14217e-16
POISSON'S RATIO = -0.798696
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.59237e-17  max 4.20713e-17
POISSON'S RATIO = -0.798696
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -9.28816  max 91.3569
jj = 19
DUAL PROBLEM: done!
*********************************************
  18  2.0261609e-02 0.00e+00 5.68e-02  -3.6 4.22e-01    -  9.93e-01 5.88e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00702104  max 0.0206525
Newton iteration 2
  -- Solve : 
          min -0.00372436  max 0.000756645
Newton iteration 3
  -- Solve : 
          min -0.000226059  max 7.0281e-05
Newton iteration 4
  -- Solve : 
          min -8.68944e-07  max 2.74737e-07
Newton iteration 5
  -- Solve : 
          min -1.60762e-11  max 6.50462e-12
Newton iteration 6
  -- Solve : 
          min -1.47631e-16  max 8.84264e-17
POISSON'S RATIO = -0.82616
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.84087e-17  max 1.66443e-16
POISSON'S RATIO = -0.82616
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -10.3581  max 74.9805
jj = 20
DUAL PROBLEM: done!
*********************************************
  19  1.5110128e-02 0.00e+00 5.05e-02  -3.3 1.09e+00    -  7.29e-01 2.51e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0225208  max 0.0344337
Newton iteration 2
  -- Solve : 
          min -0.00250942  max 0.00158404
Newton iteration 3
  -- Solve : 
          min -0.000164985  max 5.7482e-05
Newton iteration 4
  -- Solve : 
          min -1.05161e-06  max 4.10899e-07
Newton iteration 5
  -- Solve : 
          min -2.8389e-11  max 1.02829e-11
Newton iteration 6
  -- Solve : 
          min -5.829e-17  max 2.13518e-16
POISSON'S RATIO = -0.864092
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.21078e-16  max 9.57064e-17
POISSON'S RATIO = -0.864092
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -8.47345  max 66.1611
jj = 21
DUAL PROBLEM: done!
*********************************************
iter    objective    inf_pr   inf_du lg(mu)  ||d||  lg(rg) alpha_du alpha_pr  ls
  20  9.2355408e-03 0.00e+00 3.24e-02  -3.5 4.54e-01    -  9.82e-01 8.17e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.016456  max 0.0412533
Newton iteration 2
  -- Solve : 
          min -0.00913601  max 0.00362196
Newton iteration 3
  -- Solve : 
          min -0.00700602  max 0.00294471
Newton iteration 4
  -- Solve : 
          min -0.000672299  max 0.000202888
Newton iteration 5
  -- Solve : 
          min -3.33687e-05  max 1.37058e-05
Newton iteration 6
  -- Solve : 
          min -1.76337e-08  max 5.25796e-09
Newton iteration 7
  -- Solve : 
          min -2.01466e-14  max 8.17388e-15
POISSON'S RATIO = -0.949164
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -9.39672e-17  max 6.24174e-17
POISSON'S RATIO = -0.949164
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -3.82017  max 27.126
jj = 22
DUAL PROBLEM: done!
*********************************************
  21  1.2921451e-03 0.00e+00 6.15e-02  -3.6 6.54e-01    -  9.94e-01 6.23e-01f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.0128455  max 0.0287406
Newton iteration 2
  -- Solve : 
          min -0.00143989  max 0.00152984
Newton iteration 3
  -- Solve : 
          min -6.96342e-05  max 0.000118065
Newton iteration 4
  -- Solve : 
          min -1.75989e-07  max 2.52657e-07
Newton iteration 5
  -- Solve : 
          min -2.50389e-12  max 5.07976e-12
Newton iteration 6
  -- Solve : 
          min -1.29661e-16  max 6.1288e-17
POISSON'S RATIO = -0.983244
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -3.80589e-17  max 1.15001e-16
POISSON'S RATIO = -0.983244
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -1.10144  max 9.33258
jj = 23
DUAL PROBLEM: done!
*********************************************
  22  1.4037878e-04 0.00e+00 1.47e-02  -4.2 9.94e-02    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.00546257  max 0.0110095
Newton iteration 2
  -- Solve : 
          min -0.00103385  max 0.000251312
Newton iteration 3
  -- Solve : 
          min -9.42019e-05  max 3.65056e-05
Newton iteration 4
  -- Solve : 
          min -1.20862e-07  max 3.1197e-08
Newton iteration 5
  -- Solve : 
          min -1.10236e-12  max 4.28368e-13
POISSON'S RATIO = -1.00032
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.38599e-16  max 1.79488e-16
POISSON'S RATIO = -1.00032
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -0.198474  max 0.0253223
jj = 24
DUAL PROBLEM: done!
*********************************************
  23  5.1243983e-08 0.00e+00 4.74e-03  -5.0 6.60e-02    -  1.00e+00 1.00e+00f  1
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.000690419  max 0.000865101
Newton iteration 2
  -- Solve : 
          min -5.11422e-06  max 5.31837e-06
Newton iteration 3
  -- Solve : 
          min -1.6515e-09  max 3.33984e-09
Newton iteration 4
  -- Solve : 
          min -1.45013e-16  max 9.8283e-17
POISSON'S RATIO = -0.999574
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -4.69712e-16  max 3.73361e-16
POISSON'S RATIO = -0.999574
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -8.03688e-17  max 1.67918e-16
POISSON'S RATIO = -0.999574
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.12934e-16  max 6.1642e-17
POISSON'S RATIO = -0.999574
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -6.75192e-17  max 5.132e-17
POISSON'S RATIO = -0.999574
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -0.000437975  max 0.000348334
Newton iteration 2
  -- Solve : 
          min -1.30312e-06  max 1.34899e-06
Newton iteration 3
  -- Solve : 
          min -1.07084e-10  max 2.18053e-10
Newton iteration 4
  -- Solve : 
          min -9.71427e-17  max 1.98134e-16
POISSON'S RATIO = -0.999952
*********************************************
*********************************************
PRIMAL PROBLEM ...
Newton iteration 1
  -- Solve : 
          min -1.59698e-16  max 2.29963e-16
POISSON'S RATIO = -0.999952
*********************************************
*********************************************
DUAL PROBLEM ...
  -- Solve : 
          min -0.00384157  max 0.0296846
jj = 25
DUAL PROBLEM: done!
*********************************************
  24  1.1405457e-09 0.00e+00 9.05e-05  -6.7 1.40e-03    -  1.00e+00 5.00e-01f  2

Number of Iterations....: 24

                                   (scaled)                 (unscaled)
Objective...............:   1.1405457429505065e-09    1.1405457429505065e-09
Dual infeasibility......:   9.0513139666082944e-05    9.0513139666082944e-05
Constraint violation....:   0.0000000000000000e+00    0.0000000000000000e+00
Complementarity.........:   4.2724578832993255e-07    4.2724578832993255e-07
Overall NLP error.......:   9.0513139666082944e-05    9.0513139666082944e-05


Number of objective function evaluations             = 30
Number of objective gradient evaluations             = 25
Number of equality constraint evaluations            = 0
Number of inequality constraint evaluations          = 31
Number of equality constraint Jacobian evaluations   = 0
Number of inequality constraint Jacobian evaluations = 25
Number of Lagrangian Hessian evaluations             = 0
Total CPU secs in IPOPT (w/o function evaluations)   =     18.257
Total CPU secs in NLP function evaluations           =    336.397

EXIT: Optimal Solution Found.


*** Ipopt succeeded 
  -- Solve : 
          min 0.00634567  max 0.665059
